FORMAT: 1A
HOST: http://loki3services-dev.apiary.io/loki-services

# Loki Services (dev)
# This documentation is for the internal API, pre-release (dev version)
See also:

* [Internal API, dev (pre-release)](http://docs.lokiservicesdev.apiary.io/) (this document)
* [Internal API, branch (pre-release)](http://docs.lokiservicesbranch.apiary.io/)
* [Internal API, GA release](http://docs.loki3services.apiary.io/)
* [Public API, dev (pre-release)](http://docs.lokidev.apiary.io/)
* [Public API, branch (pre-release)](http://docs.lokiserverbranch.apiary.io/)
* [Public API, GA release](http://docs.lokiserver.apiary.io/)

[INTERNAL] Documenting the internal APIs (service contracts) between services in the Loki3 architecture.

*NOT UP TO DATE; still working on this*

**Note: all references to <code>loki3.apiary.io</code> are for example purposes only. In a deployed Loki Server
these will be references to the Loki REST API host.**

**TBD: add HAL notes. Note (at least initially) in the response bodies, the _links.self.href matches the URI submitted by the client, including any query parameters**

## URI Templates
Refer to https://tools.ietf.org/html/rfc6570 for details on URI Templates. Not that Loki REST
uses reserved characters (i.e. ":") in some URI Template variables, thus the request templates
use the "{+id}" format - see additional detail at https://tools.ietf.org/html/rfc6570#section-3.2.3.

# Group Sonus PSX Number Translations
##Collection

Supported network elements:

* Sonus PSX

The Loki Server must have at least one Network Element configured with support for Number Translations (e.g. Sonus PSX).

See the Loki Server documentation appropriate to the configured Network Element for mappings to 3rd-party API fields and
references to 3rd-party documentation.

Keys:

* nationalId
* countryId
* attributes
* callProcessingElement1Id
* callProcessingElement2Id
* callProcessingElement3Id
* callProcessingElement4Id
* callProcessingElementType

Refer to the **Sonus Insight API Programmer Guide** for descriptions, data types, defaults, and allowed values for
request and response properties. Note:

* If the Sonus documentation indicates a data type of integer, short, or long, the value will be numeric in the Loki REST JSON responses.
* If the Sonus documentation indicates a data type of string, the value will be a string (or null) in the Loki REST JSON responses.

## /loki-services/network-elements/sonus-psx/{+ne_id}/number-translations
### POST
Create a new number translation on a Sonus PSX.

Service: Sonus Utility Service (uses the Sonus Insight API)

In the initial implementation, any Sonus errors will simply be passed back to the client in a 500 Internal Server Error.

URI Template Variables:

* {+ne_id} - The ID of the target network element (i.e. the Sonus PSX instance), as defined in the system configuration.

+ Request (application/json)

        {
            "nationalId": "8665554321",
            "countryId": "1",
            "translatedNationalId": "5553043000",
            "translatedCountryId": "1",
            "attributes": 0,
            "callProcessingElement1Id": "978",
            "callProcessingElement2Id": null,
            "callProcessingElement3Id": null,
            "callProcessingElement4Id": null,
            "callProcessingElementType": 5,
            "servicesProvisioned": 0,
            "phoneType": 1,
            "suspendedFlag": 0,
            "directTranslationFlag": 0,
            "translationLabelId": null,
            "translatedCarrierId": null,
            "translatedCalltype": 0,
            "translatedNpi": 0,
            "translatedNoa": 13,
            "useTranslationProfile": 0,
            "translationProfileId": null
        }

+ Response 201
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/sonus-psx/1/number-translations/3-1-8665554321-0-978----5

+ Response 500
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/sonus-psx/{+ne_id}/number-translations/{+id}
### HEAD
Check if a number translation exists.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

### PUT
Update a number translation. All fields are optional.

+ Request (application/json)

        {
            "translatedNationalId": "5553043000",
            "translatedCountryId": "1",
            "servicesProvisioned": 0,
            "phoneType": 1,
            "suspendedFlag": 0,
            "directTranslationFlag": 0,
            "translationLabelId": null,
            "translatedCarrierId": null,
            "translatedCalltype": 0,
            "translatedNpi": 0,
            "translatedNoa": 13,
            "useTranslationProfile": 0,
            "translationProfileId": null
        }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Delete a number translation.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/sonus-psx/{+ne_id}/number-translations{?nationalId,countryId,attributes,callProcessingElement1Id,callProcessingElement2Id,callProcessingElement3Id,callProcessingElement4Id,callProcessingElementType}
### GET
Query number translations.

Query number translations. Responses will include (at a minimum) they fields comprising the unique key for the resource.
Querying on an extension field for a network element that is not configured will generate an error.

In the initial release, the only supported mode is where all 7 keys are fully specified in the search request. Thus, intially, the response
will contain at most one match.

[future: pagination of results via offset and max; field parameter to specify included/excluded fields]

## URI Query Parameters

<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Mode</th>
    </thead>
    <tbody>
        <tr>
            <td>nationalId</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
        <tr>
            <td>countryId</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
        <tr>
            <td>attributes</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
        <tr>
            <td>callProcessingElement1Id</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
        <tr>
            <td>callProcessingElement2Id</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
        <tr>
            <td>callProcessingElement3Id</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
        <tr>
            <td>callProcessingElement4Id</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
        <tr>
            <td>callProcessingElementType</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
    </tbody>
</table>

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/1\/number-translations?nationalId=8665554321&countryId=1&attributes=0&callProcessingElement1Id=978&callProcessingElement2Id=&callProcessingElement3Id=&callProcessingElement4Id=&callProcessingElementType=5"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:number-translations": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/1\/number-translations\/3-1-8665554321-0-978----5"
                                }
                            },
                            "id": "3-1-8665554321-0-978----5",
                            "ne_id": "1",
                            "nationalId": "8665554321",
                            "countryId": "1",
                            "translatedNationalId": "5553043000",
                            "translatedCountryId": "1",
                            "attributes": 0,
                            "callProcessingElement1Id": "978",
                            "callProcessingElement2Id": null,
                            "callProcessingElement3Id": null,
                            "callProcessingElement4Id": null,
                            "callProcessingElementType": 5,
                            "servicesProvisioned": 0,
                            "phoneType": 1,
                            "suspendedFlag": 0,
                            "directTranslationFlag": 0,
                            "translationLabelId": null,
                            "translatedCarrierId": null,
                            "translatedCalltype": 0,
                            "translatedNpi": 0,
                            "translatedNoa": 13,
                            "useTranslationProfile": 0,
                            "translationProfileId": null
                        }
                    ]
                }
            }

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "ERR_REC_NOT_FOUND",
                "summary": "Failed to 'Retrieve' entity.",
                "detail": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http:\/\/schemas.xmlsoap.org\/soap\/envelope\/\" [^] xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\" [^] xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n [^] <soapenv:Body>\n <soapenv:Fault>\n <faultcode>soapenv:Server.generalException<\/faultcode>\n <faultstring><\/faultstring>\n <detail>\n <ns1:fault href=\"#id0\" xmlns:ns1=\"http:\/\/www.sonusnet.com\/ems\/emsapi\/psx\/r07_03_06\/intf\"\/>\n [^] <ns2:exceptionName xmlns:ns2=\"http:\/\/xml.apache.org\/axis\/\">com.sonus.ems.api.psx.r07_03_06.model.ProvApiException<\/ns2:exceptionName>\n [^] <\/detail>\n <\/soapenv:Fault>\n <multiRef id=\"id0\" soapenc:root=\"0\" soapenv:encodingStyle=\"http:\/\/schemas.xmlsoap.org\/soap\/encoding\/\" [^] xsi:type=\"ns3:ProvApiException\" xmlns:soapenc=\"http:\/\/schemas.xmlsoap.org\/soap\/encoding\/\" [^] xmlns:ns3=\"http:\/\/www.sonusnet.com\/ems\/emsapi\/psx\/r07_03_06\/model\">\n [^] <errorCode xsi:type=\"xsd:string\">ERR_REC_NOT_FOUND<\/errorCode>\n <message xsi:type=\"xsd:string\">Failed to 'Retrieve' entity.<\/message>\n <rootCause xsi:type=\"xsd:string\">(ERR_REC_NOT_FOUND) [resource] not found for the given criteria. (rc=17)<\/rootCause>\n <\/multiRef>\n <\/soapenv:Body>\n<\/soapenv:Envelope>"
            }

# Group Sonus PSX Subscribers
##Collection

Network Element: Sonus PSX

Keys:

* subscriberId
* countryId
* owningCarrierId

Refer to the **Sonus Insight API Programmer Guide** for descriptions, data types, defaults, and allowed values for
request and response properties. Note:

* If the Sonus documentation indicates a data type of integer, short, or long, the value will be numeric in the Loki REST JSON responses.
* If the Sonus documentation indicates a data type of string, the value will be a string (or null) in the Loki REST JSON responses.

## /loki-services/network-elements/sonus-psx/{+ne_id}/subscribers
### POST
Create a new Subscriber on a Sonus PSX.

Service: Sonus Utility Service (uses the Sonus Insight API)

See general Loki Server documentation for details on the conditions under which each response may occur (200 OK introduced in LokiServer.FD_SonusEntity_SubscriberDestinationRoute_Create).
In the initial implementation, any Sonus errors will simply be passed back to the client in a 500 Internal Server Error.

URI Template Variables:

* {+ne_id} - The ID of the target network element (i.e. the Sonus PSX instance), as defined in the system configuration.

+ Request (application/json)

        {
            "subscriberId": "2005553001",
            "countryId": "1",
            "owningCarrierId": "16",
            "businessGroupId": null,
            "interLataCarrierId": "5000",
            "intraLataCarrierId": "5000",
            "intlCarrierId": "5000",
            "assignedCarrierId": null,
            "presentationFlag": 0,
            "prfdPacketServiceProfileId": null,
            "optionType": 0,
            "testSubscriber": 0,
            "billingPlanId": "EXAMPLE_PLAN",
            "localCarrierId": "5000",
            "authcodeScriptId": "EXAMPLE_SCRIPT",
            "elementAttributes": 0,
            "classOfServiceId": "EXAMPLE_COS",
            "pseudoCarrierId": null,
            "infoDigitId": null,
            "scpBusinessServiceGroup": 0,
            "authcodeGroupId": null,
            "pinDigits": null,
            "svcList1": 0,
            "svcList2": 0,
            "exceptionProfileId": "EXAMPLE_PROFILE",
            "isDestination": 1,
            "defaultCpc": null,
            "homeMobileNetwork": 0,
            "origEntityRoutingProfileId": "EXAMPLE_RTGPROFILE",
            "callingArea": "555_EXAMPLE",
            "businessUnitId": null,
            "deviceProfileId": null,
            "memberStatus": -1
        }

+ Response 201
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/sonus-psx/1/subscribers/1-2005553001-1-16

+ Response 200
    + Headers

            Transaction-Id: 1380080943120

+ Response 500
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/sonus-psx/{+ne_id}/subscribers/{+id}
### HEAD
Check if a subscriber exists.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

### PUT
Update a subscriber. All fields are optional.

+ Request (application/json)

        {
            "businessGroupId": null,
            "interLataCarrierId": "5000",
            "intraLataCarrierId": "5000",
            "intlCarrierId": "5000",
            "assignedCarrierId": null,
            "presentationFlag": 0,
            "prfdPacketServiceProfileId": null,
            "optionType": 0,
            "testSubscriber": 0,
            "billingPlanId": "EXAMPLE_PLAN",
            "localCarrierId": "5000",
            "authcodeScriptId": "EXAMPLE_SCRIPT",
            "elementAttributes": 0,
            "classOfServiceId": "EXAMPLE_COS",
            "pseudoCarrierId": null,
            "infoDigitId": null,
            "scpBusinessServiceGroup": 0,
            "authcodeGroupId": null,
            "pinDigits": null,
            "svcList1": 0,
            "svcList2": 0,
            "exceptionProfileId": "EXAMPLE_PROFILE",
            "isDestination": 1,
            "defaultCpc": null,
            "homeMobileNetwork": 0,
            "origEntityRoutingProfileId": "EXAMPLE_RTGPROFILE",
            "callingArea": "555_EXAMPLE",
            "businessUnitId": null,
            "deviceProfileId": null,
            "memberStatus": -1
        }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Delete a subscriber.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/sonus-psx/{+ne_id}/subscribers{?subscriberId,countryId,owningCarrierId}
### GET
Query Subscribers

Service: Sonus Utility Service (uses the Sonus Insight API)

Query Subscribers. Responses will include (at a minimum) they fields comprising the unique key for the resource.
Querying on an extension field for a network element that is not configured will generate an error.

In the initial release, the only supported mode is where all keys are fully specified in the search request. Thus, intially, the response
will contain at most one match.

[future: pagination of results via offset and max; field parameter to specify included/excluded fields]

##URI Query Parameters

<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Mode</th>
    </thead>
    <tbody>
        <tr>
            <td>subscriberId</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
        <tr>
            <td>countryId</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
        <tr>
            <td>owningCarrierId</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
    </tbody>
</table>

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/1\/subscribers?subscriberId=2005553001&countryId=1&owningCarrierId=16"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:subscribers": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/1\/subscribers\/1-2005553001-1-16"
                                }
                            },
                            "id": "1-2005553001-1-16",
                            "ne_id": "1",
                            "subscriberId": "2005553001",
                            "countryId": "1",
                            "owningCarrierId": "16",
                            "businessGroupId": null,
                            "interLataCarrierId": "5000",
                            "intraLataCarrierId": "5000",
                            "intlCarrierId": "5000",
                            "assignedCarrierId": null,
                            "presentationFlag": 0,
                            "prfdPacketServiceProfileId": null,
                            "optionType": 0,
                            "testSubscriber": 0,
                            "billingPlanId": "EXAMPLE_PLAN",
                            "localCarrierId": "5000",
                            "authcodeScriptId": "EXAMPLE_SCRIPT",
                            "elementAttributes": 0,
                            "classOfServiceId": "EXAMPLE_COS",
                            "pseudoCarrierId": null,
                            "infoDigitId": null,
                            "scpBusinessServiceGroup": 0,
                            "authcodeGroupId": null,
                            "pinDigits": null,
                            "svcList1": 0,
                            "svcList2": 0,
                            "exceptionProfileId": "EXAMPLE_PROFILE",
                            "isDestination": 1,
                            "defaultCpc": null,
                            "homeMobileNetwork": 0,
                            "origEntityRoutingProfileId": "EXAMPLE_RTGPROFILE",
                            "callingArea": "555_EXAMPLE",
                            "businessUnitId": null,
                            "deviceProfileId": null,
                            "memberStatus": -1
                        }
                    ]
                }
            }

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "ERR_REC_NOT_FOUND",
                "summary": "Failed to 'Retrieve' entity.",
                "detail": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http:\/\/schemas.xmlsoap.org\/soap\/envelope\/\" [^] xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\" [^] xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n [^] <soapenv:Body>\n <soapenv:Fault>\n <faultcode>soapenv:Server.generalException<\/faultcode>\n <faultstring><\/faultstring>\n <detail>\n <ns1:fault href=\"#id0\" xmlns:ns1=\"http:\/\/www.sonusnet.com\/ems\/emsapi\/psx\/r07_03_06\/intf\"\/>\n [^] <ns2:exceptionName xmlns:ns2=\"http:\/\/xml.apache.org\/axis\/\">com.sonus.ems.api.psx.r07_03_06.model.ProvApiException<\/ns2:exceptionName>\n [^] <\/detail>\n <\/soapenv:Fault>\n <multiRef id=\"id0\" soapenc:root=\"0\" soapenv:encodingStyle=\"http:\/\/schemas.xmlsoap.org\/soap\/encoding\/\" [^] xsi:type=\"ns3:ProvApiException\" xmlns:soapenc=\"http:\/\/schemas.xmlsoap.org\/soap\/encoding\/\" [^] xmlns:ns3=\"http:\/\/www.sonusnet.com\/ems\/emsapi\/psx\/r07_03_06\/model\">\n [^] <errorCode xsi:type=\"xsd:string\">ERR_REC_NOT_FOUND<\/errorCode>\n <message xsi:type=\"xsd:string\">Failed to 'Retrieve' entity.<\/message>\n <rootCause xsi:type=\"xsd:string\">(ERR_REC_NOT_FOUND) [resource] not found for the given criteria. (rc=17)<\/rootCause>\n <\/multiRef>\n <\/soapenv:Body>\n<\/soapenv:Envelope>"
            }

+ Response 500
    + Headers

            Transaction-Id: 1380080943120

# Group Sonus PSX Destinations
##Collection

Network Element: Sonus PSX

Keys:

* nationalId
* countryId

Refer to the **Sonus Insight API Programmer Guide** for descriptions, data types, defaults, and allowed values for
request and response properties. Note:

* If the Sonus documentation indicates a data type of integer, short, or long, the value will be numeric in the Loki REST JSON responses.
* If the Sonus documentation indicates a data type of string, the value will be a string (or null) in the Loki REST JSON responses.

## /loki-services/network-elements/sonus-psx/{+ne_id}/destinations
### POST
Create a new Destination on a Sonus PSX.

Service: Sonus Utility Service (uses the Sonus Insight API)

In the initial implementation, any Sonus errors will simply be passed back to the client in a 500 Internal Server Error.

URI Template Variables:

* {+ne_id} - The ID of the target network element (i.e. the Sonus PSX instance), as defined in the system configuration.

+ Request (application/json)

        {
            "nationalId": "2005553001",
            "countryId": "1",
            "destSvcScriptId": null,
            "customScriptId": null,
            "elementAttributes": 0,
            "prfdPacketServiceProfileId": null,
            "routingLabelId": "EXAMPLE_RTNG_LBL",
            "isSubscriber": 1,
            "portedType": 0,
            "lnpTransitionFlag": 0,
            "homeGateway": "EXAMPLE_GW",
            "exceptionProfileId": null,
            "businessGroupId": null,
            "businessUnitId": null
        }

+ Response 201
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/sonus-psx/1/destinations/1-2005553001-1

+ Response 500
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/sonus-psx/{+ne_id}/destinations/{+id}
### HEAD
Check if a destination exists.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

### PUT
Update a destination. All fields are optional.

+ Request (application/json)

        {
            "destSvcScriptId": null,
            "customScriptId": null,
            "elementAttributes": 0,
            "prfdPacketServiceProfileId": null,
            "routingLabelId": "EXAMPLE_RTNG_LBL",
            "isSubscriber": 1,
            "portedType": 0,
            "lnpTransitionFlag": 0,
            "homeGateway": "EXAMPLE_GW",
            "exceptionProfileId": null,
            "businessGroupId": null,
            "businessUnitId": null
        }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Delete a destination.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/sonus-psx/{+ne_id}/destinations{?nationalId,countryId}
### GET
Query Destinations

Service: Sonus Utility Service (uses the Sonus Insight API)

Query Destinations. Responses will include (at a minimum) they fields comprising the unique key for the resource.
Querying on an extension field for a network element that is not configured will generate an error.

In the initial release, the only supported mode is where all keys are fully specified in the search request. Thus, intially, the response
will contain at most one match.

[future: pagination of results via offset and max; field parameter to specify included/excluded fields]

##URI Query Parameters

<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Mode</th>
    </thead>
    <tbody>
        <tr>
            <td>nationalId</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
        <tr>
            <td>countryId</td>
            <td style="text-align: center">yes</td>
            <td>Equal To</td>
        </tr>
    </tbody>
</table>

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/1\/destinations?nationalId=2005553001&countryId=1"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:destinations": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/1\/destinations\/1-2005553001-1"
                                }
                            },
                            "ne_id": "1",
                            "id": "1-2005553001-1",
                            "nationalId": "2005553001",
                            "countryId": "1",
                            "destSvcScriptId": null,
                            "customScriptId": null,
                            "elementAttributes": 0,
                            "prfdPacketServiceProfileId": null,
                            "routingLabelId": "EXAMPLE_RTNG_LBL",
                            "isSubscriber": 1,
                            "portedType": 0,
                            "lnpTransitionFlag": 0,
                            "homeGateway": "EXAMPLE_GW",
                            "exceptionProfileId": null,
                            "businessGroupId": null,
                            "businessUnitId": null
                        }
                    ]
                }
            }

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "ERR_REC_NOT_FOUND",
                "summary": "Failed to 'Retrieve' entity.",
                "detail": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http:\/\/schemas.xmlsoap.org\/soap\/envelope\/\" [^] xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\" [^] xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n [^] <soapenv:Body>\n <soapenv:Fault>\n <faultcode>soapenv:Server.generalException<\/faultcode>\n <faultstring><\/faultstring>\n <detail>\n <ns1:fault href=\"#id0\" xmlns:ns1=\"http:\/\/www.sonusnet.com\/ems\/emsapi\/psx\/r07_03_06\/intf\"\/>\n [^] <ns2:exceptionName xmlns:ns2=\"http:\/\/xml.apache.org\/axis\/\">com.sonus.ems.api.psx.r07_03_06.model.ProvApiException<\/ns2:exceptionName>\n [^] <\/detail>\n <\/soapenv:Fault>\n <multiRef id=\"id0\" soapenc:root=\"0\" soapenv:encodingStyle=\"http:\/\/schemas.xmlsoap.org\/soap\/encoding\/\" [^] xsi:type=\"ns3:ProvApiException\" xmlns:soapenc=\"http:\/\/schemas.xmlsoap.org\/soap\/encoding\/\" [^] xmlns:ns3=\"http:\/\/www.sonusnet.com\/ems\/emsapi\/psx\/r07_03_06\/model\">\n [^] <errorCode xsi:type=\"xsd:string\">ERR_REC_NOT_FOUND<\/errorCode>\n <message xsi:type=\"xsd:string\">Failed to 'Retrieve' entity.<\/message>\n <rootCause xsi:type=\"xsd:string\">(ERR_REC_NOT_FOUND) [resource] not found for the given criteria. (rc=17)<\/rootCause>\n <\/multiRef>\n <\/soapenv:Body>\n<\/soapenv:Envelope>"
            }

+ Response 500
    + Headers

            Transaction-Id: 1380080943120

# Group Sonus PSX Routes
##Collection

Network Element: Sonus PSX

Keys:

* callProcessingElement1Id
* callProcessingElement2Id
* callProcessingElement3Id
* callProcessingElement4Id
* callProcessingElementType
* routingType
* destinationNationalId
* destinationCountryId
* partitionId
* calltype
* transmissionMedium
* userCallType
* digitType
* timeRangeProfileId
* callParamFilterProfileId
* domainName

Refer to the **Sonus Insight API Programmer Guide** for descriptions, data types, defaults, and allowed values for
request and response properties. Note:

* If the Sonus documentation indicates a data type of integer, short, or long, the value will be numeric in the Loki REST JSON responses.
* If the Sonus documentation indicates a data type of string, the value will be a string (or null) in the Loki REST JSON responses.

## /loki-services/network-elements/sonus-psx/{+ne_id}/routes
### POST
Create a new Route on a Sonus PSX.

Service: Sonus Utility Service (uses the Sonus Insight API)

In the initial implementation, any Sonus errors will simply be passed back to the client in a 500 Internal Server Error.

URI Template Variables:

* {+ne_id} - The ID of the target network element (i.e. the Sonus PSX instance), as defined in the system configuration.

+ Request (application/json)

        {
            "callProcessingElement1Id": null,
            "callProcessingElement2Id": null,
            "callProcessingElement3Id": null,
            "callProcessingElement4Id": null,
            "callProcessingElementType": 0,
            "routingType": 3,
            "destinationNationalId": "2005553001",
            "destinationCountryId": "1",
            "partitionId": "EXAMPLE_PARTITION",
            "calltype": 0,
            "transmissionMedium": 0,
            "userCallType": 0,
            "digitType": 2147483647,
            "timeRangeProfileId": "ALL",
            "callParamFilterProfileId": null,
            "domainName": null,
            "routingLabelId": "EXAMPLE_RTNG_LBL"
        }

+ Response 201
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/sonus-psx/1/routes/1-----0-3-2005553001-1-EXAMPLE_PARTITION-0-0-0-2147483647-ALL--

+ Response 500
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/sonus-psx/{+ne_id}/routes/{+id}
### HEAD
Check if a route exists.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

### PUT
Update a route. All fields are optional.

+ Request (application/json)

        {
            "routingLabelId": "EXAMPLE_RTNG_LBL"
        }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Delete a route.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/sonus-psx/{+ne_id}/routes{?destinationNationalId,destinationCountryId,callProcessingElement1Id,callProcessingElement2Id,callProcessingElement3Id,callProcessingElement4Id,callProcessingElementType,routingType,partitionId,calltype,transmissionMedium,userCallType,digitType,timeRangeProfileId,callParamFilterProfileId,domainName}
### GET
Query Routes

Service: Sonus Utility Service (uses the Sonus Insight API)

Query Routes. This request is used only to retrieve a single route resource given all elements of the key.
Responses will include (at a minimum) they fields comprising the unique key for the resource.
See also "Query RouteQueries" for a more flexible method of querying routes.
In this request:

* All of the URI query parameters (listed below) must be included in the request (even if some have no value).
* Each parameter is expected to be complete (the match is an "equals" match, with
no support for wildcards or partial values).
* A "null" value can be searched for by explicitly including the parameter with no value,
e.g. "...&callProcessingElement1Id=".
* If no match is found, the response will be 404 Not Found

The URI query parameters are as follows:

* destinationNationalId
* destinationCountryId
* callProcessingElement1Id
* callProcessingElement2Id
* callProcessingElement3Id
* callProcessingElement4Id
* callProcessingElementType
* routingType
* partitionId
* calltype
* transmissionMedium
* userCallType
* digitType
* timeRangeProfileId
* callParamFilterProfileId
* domainName

[future: pagination of results via offset and max; field parameter to specify included/excluded fields]

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/1\/routes?callProcessingElement1Id=&callProcessingElement2Id=&callProcessingElement3Id=&callProcessingElement4Id=&callProcessingElementType=0&routingType=3&destinationNationalId=2005553001&destinationCountryId=1&partitionId=EXAMPLE_PARTITION&calltype=0&transmissionMedium=0&userCallType=0&digitType=2147483647&timeRangeProfileId=ALL&callParamFilterProfileId=&domainName="
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:routes": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/1\/routes\/1-----0-3-2005553001-1-EXAMPLE_PARTITION-0-0-0-2147483647-ALL--"
                                }
                            },
                            "id": "1-----0-3-2005553001-1-EXAMPLE_PARTITION-0-0-0-2147483647-ALL--",
                            "ne_id": "1",
                            "callProcessingElement1Id": null,
                            "callProcessingElement2Id": null,
                            "callProcessingElement3Id": null,
                            "callProcessingElement4Id": null,
                            "callProcessingElementType": 0,
                            "routingType": 3,
                            "destinationNationalId": "2005553001",
                            "destinationCountryId": "1",
                            "partitionId": "EXAMPLE_PARTITION",
                            "calltype": 0,
                            "transmissionMedium": 0,
                            "userCallType": 0,
                            "digitType": 2147483647,
                            "timeRangeProfileId": "ALL",
                            "callParamFilterProfileId": null,
                            "domainName": null,
                            "routingLabelId": "EXAMPLE_RTNG_LBL"
                        }
                    ]
                }
            }

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "ERR_REC_NOT_FOUND",
                "summary": "Failed to 'Retrieve' entity.",
                "detail": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http:\/\/schemas.xmlsoap.org\/soap\/envelope\/\" [^] xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\" [^] xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n [^] <soapenv:Body>\n <soapenv:Fault>\n <faultcode>soapenv:Server.generalException<\/faultcode>\n <faultstring><\/faultstring>\n <detail>\n <ns1:fault href=\"#id0\" xmlns:ns1=\"http:\/\/www.sonusnet.com\/ems\/emsapi\/psx\/r07_03_06\/intf\"\/>\n [^] <ns2:exceptionName xmlns:ns2=\"http:\/\/xml.apache.org\/axis\/\">com.sonus.ems.api.psx.r07_03_06.model.ProvApiException<\/ns2:exceptionName>\n [^] <\/detail>\n <\/soapenv:Fault>\n <multiRef id=\"id0\" soapenc:root=\"0\" soapenv:encodingStyle=\"http:\/\/schemas.xmlsoap.org\/soap\/encoding\/\" [^] xsi:type=\"ns3:ProvApiException\" xmlns:soapenc=\"http:\/\/schemas.xmlsoap.org\/soap\/encoding\/\" [^] xmlns:ns3=\"http:\/\/www.sonusnet.com\/ems\/emsapi\/psx\/r07_03_06\/model\">\n [^] <errorCode xsi:type=\"xsd:string\">ERR_REC_NOT_FOUND<\/errorCode>\n <message xsi:type=\"xsd:string\">Failed to 'Retrieve' entity.<\/message>\n <rootCause xsi:type=\"xsd:string\">(ERR_REC_NOT_FOUND) [resource] not found for the given criteria. (rc=17)<\/rootCause>\n <\/multiRef>\n <\/soapenv:Body>\n<\/soapenv:Envelope>"
            }

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "ERR_REC_NOT_FOUND",
                "summary": "Internal Error",
                "detail": "Query returned no records"
            }

+ Response 500
    + Headers

            Transaction-Id: 1380080943120

# Group Sonus PSX Route-Queries
##Collection

Network Element: Sonus PSX

Keys:

* (none)

This is a meta-entity on Sonus, which provides enhanced search capabilities for Route entities.

Refer to the **Sonus Insight API Programmer Guide** for descriptions, data types, defaults, and allowed values for
request and response properties. Note:

* If the Sonus documentation indicates a data type of integer, short, or long, the value will be numeric in the Loki REST JSON responses.
* If the Sonus documentation indicates a data type of string, the value will be a string (or null) in the Loki REST JSON responses.

## /loki-services/network-elements/sonus-psx/{+ne_id}/route-queries{?destinationNationalId,destinationCountryId,partitionId,callProcessingElement1Id,callProcessingElement2Id,callProcessingElement3Id,callProcessingElement4Id,routingLabelId,callParamFilterProfileId,domainName}
### GET
Query RouteQueries

Service: Sonus Utility Service (uses the Sonus Insight API)

Provides an alternative way to query Sonus Route entites, via the Sonus RouteQuery meta-entity. See also "Query Routes".

This request is used all matching routes for various search criteria. Responses will include any mathing routes. In this request:

* On or more of the URI query parameters (listed below) must be included, with a value.
* Each parameter is expected to be complete (the match is an "equals" match, with
no support for wildcards or partial values).
* A "null" value can be searched for by explicitly including the parameter with no value,
e.g. "...&callProcessingElement1Id=".
* If no match is found, the response will be 404 Not Found
* When one or more matches or found, they will be included in the embedded array _embedded."ls:routes"[].

The URI query parameters are as follows:

* destinationNationalId
* destinationCountryId
* partitionId
* callProcessingElement1Id
* callProcessingElement2Id
* callProcessingElement3Id
* callProcessingElement4Id
* routingLabelId
* callParamFilterProfileId
* domainName

**NOTE: As of 1.5, there is a defect in _embedded, making it inconsistent with the documentation below:
it uses ls:route-queries and embeds the resources as route-queries, instead of as routes.**

**Missing: detail of 404 response body**

[future: pagination of results via offset and max; field parameter to specify included/excluded fields]

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/44\/route-queries?routingLabelId=EXAMPLE_LBL"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/localhost:8340\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:routes": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/44\/routes\/44-----0-3-4152141208-1-EXAMPLE_PARTITION-50176-8191-ALL--"
                                }
                            },
                            "id": "44-----0-3-4152141208-1-EXAMPLE_PARTITION-50176-8191-ALL--",
                            "ne_id": "44",
                            "callProcessingElement1Id": null,
                            "callProcessingElement2Id": null,
                            "callProcessingElement3Id": null,
                            "callProcessingElement4Id": null,
                            "callProcessingElementType": 0,
                            "routingType": 3,
                            "destinationNationalId": "4152141208",
                            "destinationCountryId": "1",
                            "partitionId": "EXAMPLE_PARTITION",
                            "calltype": 50176,
                            "routingLabelId": "EXAMPLE_LBL",
                            "transmissionMedium": 8191,
                            "userCallType": 0,
                            "digitType": 2147483647,
                            "timeRangeProfileId": "ALL",
                            "callParamFilterProfileId": null,
                            "domainName": null
                        },
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/sonus-psx\/44\/routes\/44-----0-3-4165551212-1-EXAMPLE_PARTITION-50176-511-ALL--"
                                }
                            },
                            "id": "44-----0-3-4165551212-1-EXAMPLE_PARTITION-50176-511-ALL--",
                            "ne_id": "44",
                            "callProcessingElement1Id": null,
                            "callProcessingElement2Id": null,
                            "callProcessingElement3Id": null,
                            "callProcessingElement4Id": null,
                            "callProcessingElementType": 0,
                            "routingType": 3,
                            "destinationNationalId": "4165551212",
                            "destinationCountryId": "1",
                            "partitionId": "EXAMPLE_PARTITION",
                            "calltype": 50176,
                            "routingLabelId": "EXAMPLE_LBL",
                            "transmissionMedium": 511,
                            "userCallType": 0,
                            "digitType": 2147483647,
                            "timeRangeProfileId": "ALL",
                            "callParamFilterProfileId": null,
                            "domainName": null
                        }
                    ]
                }
            }

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "ERR_REC_NOT_FOUND",
                "summary": "Internal Error",
                "detail": "Query returned no records"
            }

+ Response 500
    + Headers

            Transaction-Id: 1380080943120

# Group Process Engine

**details pending**

A "process" consists of a series of "steps", each of which implements provisioning business logic. They also perform data mappings into the 3rd-party data models.

The POST /loki-services/process-engine/process controller triggers a process. Each step in a
process is implemented in the appropriate Entity Services, which generally uses the Utility
Services to communicate with network elements.

General note: any of these requests may return 424 Method Failure in the event of an error response from the network element,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/process-engine/process
### POST
Trigger a process in the Process Engine - createVoipUser example. Triggers the createVoipUser process,
with voip-user data as the inputs. The response includes embedded representations of any resources created
as a result of the process (e.g. phone numbers assigned in BroadWorks, user created in BroadWorks, etc). These
include any properties of those resources that may need to be reported back to the client (e.g. auto-generated
password, name, etc).

+ Request (application/json)
    + Body

            {
                "customerId": "exampleCom",
                "siteId": "exampleComNorth",
                "process": "createVoipUser",
                "userId": "2005553001@example.com",
                "phoneNumber": "+1-2005553001",
                "tnRoutine": "auto",
                "CLID": "+1-2005553001",
                "extension": "3001",
                "lastName": "Smith",
                "firstName": "John",
                "callingLineIdLastName": "Smith",
                "callingLineIdFirstName": "John",
                "email": "jsmith@example.com",
                "timeZone": "America\/New_York",
                "language": "English",
                "sharedDeviceName": "exampleComIad001",
                "trunkGroupName": null,
                "servicePacks": {
                    "base": "Standard",
                    "add-on": [
                        "Executive"
                    ]
                },
                "role": "Executive",
                "services": {
                    "Authentication": {
                        "username": "2005553001@sip.example.com",
                        "password": "230A4u$#%f"
                    },
                    "Charge Number": {
                        "phoneNumber": "+1-2005554321",
                        "tnRoutine": "",
                        "useChargeNumberForEnhancedTranslations": false,
                        "sendChargeNumberToNetwork": true
                    },
                    "Third-Party Voice Mail Support": {
                        "isActive": true,
                        "busyRedirectToVoiceMail": true,
                        "noAnswerRedirectToVoiceMail": true,
                        "serverSelection": "User Specific Mail Server",
                        "userServer": "4165557000",
                        "mailboxIdType": "URL",
                        "mailboxURL": "2005553001@sip.example.com",
                        "noAnswerNumberOfRings": 4,
                        "alwaysRedirectToVoiceMail": false,
                        "outOfPrimaryZoneRedirectToVoiceMail": false
                    },
                    "Call Forwarding No Answer": {
                        "isActive": true,
                        "forwardToPhoneNumber": "+1-2005553101",
                        "numberOfRings": 4
                    },
                    "Call Forwarding Not Reachable": {
                        "isActive": true,
                        "forwardToPhoneNumber": "+1-2005553101"
                    },
                    "Remote Office": []
                }
            }

    + Schema

            {
                "title": "Legacy VoIP User request body",
                "description": "The same JSON Schema applies for all the requests in the BroadWorks Process Steps section",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "customerId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "siteId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "userId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\w'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "A formatted TN.",
                        "pattern": "^\\+\\d+-\\d+$",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "tnRoutine": {
                        "enum": [
                            null,
                            "",
                            "port-no-temp",
                            "auto",
                            "no-number"
                        ]
                    },
                    "extension": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 2,
                        "maxLength": 20,
                        "pattern": "^[0-9]+$"
                    },
                    "CLID": {
                        "type": "string",
                        "description": "A formatted TN.",
                        "pattern": "^\\+\\d+-\\d+$",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "callingLineIdLastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "pattern": "^[\\x20-\\x21\\x23-\\x24\\x26-\\x2A\\x2C-\\x2E\\x30-\\x7F]+$"
                    },
                    "callingLineIdFirstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "pattern": "^[\\x20-\\x21\\x23-\\x24\\x26-\\x2A\\x2C-\\x2E\\x30-\\x7F]+$"
                    },
                    "email": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "format": "email"
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127
                    },
                    "language": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    },
                    "role": {
                        "type": "any"
                    },
                    "userType": {
                        "enum": [
                            "trunking",
                            "ATA",
                            "businessLine",
                            "hostedPbx",
                            "noDevice"
                        ]
                    },
                    "accessDevice": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "Details of the user's device, for Business Line, IP Centrex, and System Device users.",
                        "properties": {
                            "deviceManagementRoutine": {
                                "type": "any"
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40,
                                "required": true
                            },
                            "type": {
                                "type": "any"
                            },
                            "model": {
                                "type": "any"
                            },
                            "macAddress": {
                                "type": "any"
                            },
                            "linePort": {
                                "type": "any"
                            }
                        }
                    },
                    "trunkGroup": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "Details of the user's trunk group(s), for Trunking users.",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "linePort": {
                                "type": "any"
                            }
                        }
                    },
                    "servicePacks": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "Service Packs that will be assigned to User",
                        "properties": {
                            "base": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "add-on": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 80
                                }
                            }
                        }
                    },
                    "services": {
                        "type": "object",
                        "properties": {
                            "Authentication": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 80
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 60
                                    }
                                }
                            },
                            "Charge Number": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "phoneNumber": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "A formatted TN.",
                                        "pattern": "^\\+\\d+-\\d+$",
                                        "minLength": 1,
                                        "maxLength": 23
                                    },
                                    "useChargeNumberForEnhancedTranslations": {
                                        "type": "boolean"
                                    },
                                    "sendChargeNumberToNetwork": {
                                        "type": "boolean"
                                    },
                                    "tnRoutine": {
                                        "enum": [
                                            null,
                                            "",
                                            "port-no-temp",
                                            "auto"
                                        ]
                                    }
                                }
                            },
                            "Third-Party Voice Mail Support": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "isActive": {
                                        "type": "boolean"
                                    },
                                    "busyRedirectToVoiceMail": {
                                        "type": "boolean"
                                    },
                                    "noAnswerRedirectToVoiceMail": {
                                        "type": "boolean"
                                    },
                                    "noAnswerNumberOfRings": {
                                        "enum": [
                                            0,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11,
                                            12,
                                            13,
                                            14,
                                            15,
                                            16,
                                            17,
                                            18,
                                            19,
                                            20
                                        ]
                                    },
                                    "alwaysRedirectToVoiceMail": {
                                        "type": "boolean"
                                    },
                                    "outOfPrimaryZoneRedirectToVoiceMail": {
                                        "type": "boolean"
                                    },
                                    "serverSelection": {
                                        "enum": [
                                            "Group Mail Server",
                                            "User Specific Mail Server"
                                        ]
                                    },
                                    "userServer": {
                                        "anyOf": [
                                            {
                                                "id": "E.164 DN",
                                                "type": [
                                                    "string",
                                                    "null"
                                                ],
                                                "description": "A formatted TN.",
                                                "pattern": "^\\+\\d+-\\d+$",
                                                "minLength": 1,
                                                "maxLength": 23
                                            },
                                            {
                                                "id": "Non formated DN",
                                                "type": "string",
                                                "description": "A non-E.164 formatted TN.",
                                                "pattern": "^[\\d\\-]+$",
                                                "minLength": 1,
                                                "maxLength": 23
                                            },
                                            {
                                                "id": "SIP URI",
                                                "type": "string",
                                                "description": "SIP URI",
                                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                "minLength": 1,
                                                "maxLength": 161
                                            }
                                        ]
                                    },
                                    "mailboxIdType": {
                                        "enum": [
                                            "User Or Group Phone Number",
                                            "URL"
                                        ]
                                    },
                                    "mailboxURL": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "SIP URI",
                                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                        "minLength": 1,
                                        "maxLength": 161
                                    }
                                }
                            },
                            "Call Forwarding No Answer": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "isActive": {
                                        "type": "boolean"
                                    },
                                    "forwardToPhoneNumber": {
                                        "anyOf": [
                                            {
                                                "id": "E.164 DN",
                                                "type": [
                                                    "string",
                                                    "null"
                                                ],
                                                "description": "A formatted TN.",
                                                "pattern": "^\\+\\d+-\\d+$",
                                                "minLength": 1,
                                                "maxLength": 23
                                            },
                                            {
                                                "id": "Non formated DN",
                                                "type": "string",
                                                "description": "A non-E.164 formatted TN.",
                                                "pattern": "^[\\d\\-]+$",
                                                "minLength": 1,
                                                "maxLength": 23
                                            },
                                            {
                                                "id": "SIP URI",
                                                "type": "string",
                                                "description": "SIP URI",
                                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                "minLength": 1,
                                                "maxLength": 161
                                            }
                                        ]
                                    },
                                    "numberOfRings": {
                                        "enum": [
                                            0,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11,
                                            12,
                                            13,
                                            14,
                                            15,
                                            16,
                                            17,
                                            18,
                                            19,
                                            20
                                        ]
                                    }
                                }
                            },
                            "Call Forwarding Not Reachable": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "isActive": {
                                        "type": "boolean"
                                    },
                                    "forwardToPhoneNumber": {
                                        "anyOf": [
                                            {
                                                "id": "E.164 DN",
                                                "type": [
                                                    "string",
                                                    "null"
                                                ],
                                                "description": "A formatted TN.",
                                                "pattern": "^\\+\\d+-\\d+$",
                                                "minLength": 1,
                                                "maxLength": 23
                                            },
                                            {
                                                "id": "Non formated DN",
                                                "type": "string",
                                                "description": "A non-E.164 formatted TN.",
                                                "pattern": "^[\\d\\-]+$",
                                                "minLength": 1,
                                                "maxLength": 23
                                            },
                                            {
                                                "id": "SIP URI",
                                                "type": "string",
                                                "description": "SIP URI",
                                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                "minLength": 1,
                                                "maxLength": 161
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/users"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:broadworks-phone-numbers": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/exampleCom\/phone-numbers\/%2B1-2005553001"
                                }
                            }
                        },
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/exampleCom\/groups\/exampleComNorth\/phone-numbers\/%2B1-2005553001"
                                }
                            }
                        }
                    ],
                    "ls:broadworks-users": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/exampleCom\/users\/2005553001%40example.com"
                                }
                            },
                            "phoneNumber": "+1-2005553001",
                            "extension": "3001",
                            "CLID": "+1-2005553001",
                            "userId": "2005553001@example.com",
                            "portalPassword": "s8F!9ggo",
                            "firstName": "John",
                            "lastName": "Smith",
                            "callingLineIdLastName": "Smith",
                            "callingLineIdFirstName": "John",
                            "services": {
                                "Authentication": {
                                    "username": "2005553001",
                                    "password": "230A4u$#%f"
                                },
                                "Charge Number": {
                                    "phoneNumber": "+1-2005554321",
                                    "tnRoutine": "",
                                    "useChargeNumberForEnhancedTranslations": false,
                                    "sendChargeNumberToNetwork": true
                                },
                                "Third-Party Voice Mail Support": {
                                    "isActive": true,
                                    "busyRedirectToVoiceMail": true,
                                    "noAnswerRedirectToVoiceMail": true,
                                    "serverSelection": "User Specific Mail Server",
                                    "userServer": "4165557000",
                                    "mailboxIdType": "URL",
                                    "mailboxURL": "2005553001@sip.example.com",
                                    "noAnswerNumberOfRings": 4,
                                    "alwaysRedirectToVoiceMail": false,
                                    "outOfPrimaryZoneRedirectToVoiceMail": false
                                },
                                "Call Forwarding No Answer": {
                                    "isActive": true,
                                    "forwardToPhoneNumber": "+1-2005553101",
                                    "numberOfRings": 4
                                },
                                "Call Forwarding Not Reachable": {
                                    "isActive": true,
                                    "forwardToPhoneNumber": "+1-2005553101"
                                },
                                "Remote Office": []
                            }
                        }
                    ]
                }
            }

    + Schema

            {
                "title": "Process steps response body parameters schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "ls:broadworks-users": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "required": true,
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "required": true,
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "required": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "customerId": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30
                                        },
                                        "siteId": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30
                                        },
                                        "userId": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 161,
                                            "pattern": "^[\\w'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "description": "A formatted TN.",
                                            "pattern": "^\\+\\d+-\\d+$",
                                            "minLength": 1,
                                            "maxLength": 23
                                        },
                                        "tnRoutine": {
                                            "enum": [
                                                null,
                                                "",
                                                "port-no-temp",
                                                "auto",
                                                "no-number"
                                            ]
                                        },
                                        "extension": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 20,
                                            "pattern": "^[0-9]+$"
                                        },
                                        "CLID": {
                                            "type": "string",
                                            "description": "A formatted TN.",
                                            "pattern": "^\\+\\d+-\\d+$",
                                            "minLength": 1,
                                            "maxLength": 23
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30
                                        },
                                        "callingLineIdLastName": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30,
                                            "pattern": "^[\\x20-\\x21\\x23-\\x24\\x26-\\x2A\\x2C-\\x2E\\x30-\\x7F]+$"
                                        },
                                        "callingLineIdFirstName": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30,
                                            "pattern": "^[\\x20-\\x21\\x23-\\x24\\x26-\\x2A\\x2C-\\x2E\\x30-\\x7F]+$"
                                        },
                                        "email": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 80,
                                            "format": "email"
                                        },
                                        "timeZone": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 127
                                        },
                                        "language": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 40
                                        },
                                        "role": {
                                            "type": "any"
                                        },
                                        "userType": {
                                            "enum": [
                                                "trunking",
                                                "ATA",
                                                "businessLine",
                                                "hostedPbx",
                                                "noDevice"
                                            ]
                                        },
                                        "accessDevice": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "description": "Details of the user's device, for Business Line, IP Centrex, and System Device users.",
                                            "properties": {
                                                "deviceManagementRoutine": {
                                                    "type": "any"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 40,
                                                    "required": true
                                                },
                                                "type": {
                                                    "type": "any"
                                                },
                                                "model": {
                                                    "type": "any"
                                                },
                                                "macAddress": {
                                                    "type": "any"
                                                },
                                                "linePort": {
                                                    "type": "any"
                                                }
                                            }
                                        },
                                        "trunkGroup": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "description": "Details of the user's trunk group(s), for Trunking users.",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 30
                                                },
                                                "linePort": {
                                                    "type": "any"
                                                }
                                            }
                                        },
                                        "servicePacks": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "description": "Service Packs that will be assigned to User",
                                            "properties": {
                                                "base": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 80
                                                },
                                                "add-on": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "maxLength": 80
                                                    }
                                                }
                                            }
                                        },
                                        "services": {
                                            "type": "object",
                                            "properties": {
                                                "Authentication": {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "username": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "maxLength": 80
                                                        },
                                                        "password": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "maxLength": 60
                                                        }
                                                    }
                                                },
                                                "Charge Number": {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "phoneNumber": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "A formatted TN.",
                                                            "pattern": "^\\+\\d+-\\d+$",
                                                            "minLength": 1,
                                                            "maxLength": 23
                                                        },
                                                        "useChargeNumberForEnhancedTranslations": {
                                                            "type": "boolean"
                                                        },
                                                        "sendChargeNumberToNetwork": {
                                                            "type": "boolean"
                                                        },
                                                        "tnRoutine": {
                                                            "enum": [
                                                                null,
                                                                "",
                                                                "port-no-temp",
                                                                "auto"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "Third-Party Voice Mail Support": {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "isActive": {
                                                            "type": "boolean"
                                                        },
                                                        "busyRedirectToVoiceMail": {
                                                            "type": "boolean"
                                                        },
                                                        "noAnswerRedirectToVoiceMail": {
                                                            "type": "boolean"
                                                        },
                                                        "noAnswerNumberOfRings": {
                                                            "enum": [
                                                                0,
                                                                2,
                                                                3,
                                                                4,
                                                                5,
                                                                6,
                                                                7,
                                                                8,
                                                                9,
                                                                10,
                                                                11,
                                                                12,
                                                                13,
                                                                14,
                                                                15,
                                                                16,
                                                                17,
                                                                18,
                                                                19,
                                                                20
                                                            ]
                                                        },
                                                        "alwaysRedirectToVoiceMail": {
                                                            "type": "boolean"
                                                        },
                                                        "outOfPrimaryZoneRedirectToVoiceMail": {
                                                            "type": "boolean"
                                                        },
                                                        "serverSelection": {
                                                            "enum": [
                                                                "Group Mail Server",
                                                                "User Specific Mail Server"
                                                            ]
                                                        },
                                                        "userServer": {
                                                            "anyOf": [
                                                                {
                                                                    "id": "E.164 DN",
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A formatted TN.",
                                                                    "pattern": "^\\+\\d+-\\d+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "Non formated DN",
                                                                    "type": "string",
                                                                    "description": "A non-E.164 formatted TN.",
                                                                    "pattern": "^[\\d\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "SIP URI",
                                                                    "type": "string",
                                                                    "description": "SIP URI",
                                                                    "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 161
                                                                }
                                                            ]
                                                        },
                                                        "mailboxIdType": {
                                                            "enum": [
                                                                "User Or Group Phone Number",
                                                                "URL"
                                                            ]
                                                        },
                                                        "mailboxURL": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "SIP URI",
                                                            "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                            "minLength": 1,
                                                            "maxLength": 161
                                                        }
                                                    }
                                                },
                                                "Call Forwarding No Answer": {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "isActive": {
                                                            "type": "boolean"
                                                        },
                                                        "forwardToPhoneNumber": {
                                                            "anyOf": [
                                                                {
                                                                    "id": "E.164 DN",
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A formatted TN.",
                                                                    "pattern": "^\\+\\d+-\\d+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "Non formated DN",
                                                                    "type": "string",
                                                                    "description": "A non-E.164 formatted TN.",
                                                                    "pattern": "^[\\d\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "SIP URI",
                                                                    "type": "string",
                                                                    "description": "SIP URI",
                                                                    "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 161
                                                                }
                                                            ]
                                                        },
                                                        "numberOfRings": {
                                                            "enum": [
                                                                0,
                                                                2,
                                                                3,
                                                                4,
                                                                5,
                                                                6,
                                                                7,
                                                                8,
                                                                9,
                                                                10,
                                                                11,
                                                                12,
                                                                13,
                                                                14,
                                                                15,
                                                                16,
                                                                17,
                                                                18,
                                                                19,
                                                                20
                                                            ]
                                                        }
                                                    }
                                                },
                                                "Call Forwarding Not Reachable": {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "isActive": {
                                                            "type": "boolean"
                                                        },
                                                        "forwardToPhoneNumber": {
                                                            "anyOf": [
                                                                {
                                                                    "id": "E.164 DN",
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A formatted TN.",
                                                                    "pattern": "^\\+\\d+-\\d+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "Non formated DN",
                                                                    "type": "string",
                                                                    "description": "A non-E.164 formatted TN.",
                                                                    "pattern": "^[\\d\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "SIP URI",
                                                                    "type": "string",
                                                                    "description": "SIP URI",
                                                                    "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 161
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4250",
                "externalErrorSummary": "[Warning 4250] 1 phone number(s) not added.  Verify that the number(s) are not already assigned.",
                "externalErrorDetail": "[Warning 4250] 1 phone number(s) not added.  Verify that the number(s) are not already assigned."
            }

    + Schema

            {
                "title": "Process steps response body parameters schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "ls:broadworks-users": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "required": true,
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "required": true,
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "required": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "customerId": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30
                                        },
                                        "siteId": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30
                                        },
                                        "userId": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 161,
                                            "pattern": "^[\\w'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "description": "A formatted TN.",
                                            "pattern": "^\\+\\d+-\\d+$",
                                            "minLength": 1,
                                            "maxLength": 23
                                        },
                                        "tnRoutine": {
                                            "enum": [
                                                null,
                                                "",
                                                "port-no-temp",
                                                "auto",
                                                "no-number"
                                            ]
                                        },
                                        "extension": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 20,
                                            "pattern": "^[0-9]+$"
                                        },
                                        "CLID": {
                                            "type": "string",
                                            "description": "A formatted TN.",
                                            "pattern": "^\\+\\d+-\\d+$",
                                            "minLength": 1,
                                            "maxLength": 23
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30
                                        },
                                        "callingLineIdLastName": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30,
                                            "pattern": "^[\\x20-\\x21\\x23-\\x24\\x26-\\x2A\\x2C-\\x2E\\x30-\\x7F]+$"
                                        },
                                        "callingLineIdFirstName": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30,
                                            "pattern": "^[\\x20-\\x21\\x23-\\x24\\x26-\\x2A\\x2C-\\x2E\\x30-\\x7F]+$"
                                        },
                                        "email": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 80,
                                            "format": "email"
                                        },
                                        "timeZone": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 127
                                        },
                                        "language": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 40
                                        },
                                        "role": {
                                            "type": "any"
                                        },
                                        "userType": {
                                            "enum": [
                                                "trunking",
                                                "ATA",
                                                "businessLine",
                                                "hostedPbx",
                                                "noDevice"
                                            ]
                                        },
                                        "accessDevice": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "description": "Details of the user's device, for Business Line, IP Centrex, and System Device users.",
                                            "properties": {
                                                "deviceManagementRoutine": {
                                                    "type": "any"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 40,
                                                    "required": true
                                                },
                                                "type": {
                                                    "type": "any"
                                                },
                                                "model": {
                                                    "type": "any"
                                                },
                                                "macAddress": {
                                                    "type": "any"
                                                },
                                                "linePort": {
                                                    "type": "any"
                                                }
                                            }
                                        },
                                        "trunkGroup": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "description": "Details of the user's trunk group(s), for Trunking users.",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 30
                                                },
                                                "linePort": {
                                                    "type": "any"
                                                }
                                            }
                                        },
                                        "servicePacks": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "description": "Service Packs that will be assigned to User",
                                            "properties": {
                                                "base": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 80
                                                },
                                                "add-on": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "maxLength": 80
                                                    }
                                                }
                                            }
                                        },
                                        "services": {
                                            "type": "object",
                                            "properties": {
                                                "Authentication": {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "username": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "maxLength": 80
                                                        },
                                                        "password": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "maxLength": 60
                                                        }
                                                    }
                                                },
                                                "Charge Number": {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "phoneNumber": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "A formatted TN.",
                                                            "pattern": "^\\+\\d+-\\d+$",
                                                            "minLength": 1,
                                                            "maxLength": 23
                                                        },
                                                        "useChargeNumberForEnhancedTranslations": {
                                                            "type": "boolean"
                                                        },
                                                        "sendChargeNumberToNetwork": {
                                                            "type": "boolean"
                                                        },
                                                        "tnRoutine": {
                                                            "enum": [
                                                                null,
                                                                "",
                                                                "port-no-temp",
                                                                "auto"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "Third-Party Voice Mail Support": {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "isActive": {
                                                            "type": "boolean"
                                                        },
                                                        "busyRedirectToVoiceMail": {
                                                            "type": "boolean"
                                                        },
                                                        "noAnswerRedirectToVoiceMail": {
                                                            "type": "boolean"
                                                        },
                                                        "noAnswerNumberOfRings": {
                                                            "enum": [
                                                                0,
                                                                2,
                                                                3,
                                                                4,
                                                                5,
                                                                6,
                                                                7,
                                                                8,
                                                                9,
                                                                10,
                                                                11,
                                                                12,
                                                                13,
                                                                14,
                                                                15,
                                                                16,
                                                                17,
                                                                18,
                                                                19,
                                                                20
                                                            ]
                                                        },
                                                        "alwaysRedirectToVoiceMail": {
                                                            "type": "boolean"
                                                        },
                                                        "outOfPrimaryZoneRedirectToVoiceMail": {
                                                            "type": "boolean"
                                                        },
                                                        "serverSelection": {
                                                            "enum": [
                                                                "Group Mail Server",
                                                                "User Specific Mail Server"
                                                            ]
                                                        },
                                                        "userServer": {
                                                            "anyOf": [
                                                                {
                                                                    "id": "E.164 DN",
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A formatted TN.",
                                                                    "pattern": "^\\+\\d+-\\d+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "Non formated DN",
                                                                    "type": "string",
                                                                    "description": "A non-E.164 formatted TN.",
                                                                    "pattern": "^[\\d\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "SIP URI",
                                                                    "type": "string",
                                                                    "description": "SIP URI",
                                                                    "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 161
                                                                }
                                                            ]
                                                        },
                                                        "mailboxIdType": {
                                                            "enum": [
                                                                "User Or Group Phone Number",
                                                                "URL"
                                                            ]
                                                        },
                                                        "mailboxURL": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "SIP URI",
                                                            "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                            "minLength": 1,
                                                            "maxLength": 161
                                                        }
                                                    }
                                                },
                                                "Call Forwarding No Answer": {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "isActive": {
                                                            "type": "boolean"
                                                        },
                                                        "forwardToPhoneNumber": {
                                                            "anyOf": [
                                                                {
                                                                    "id": "E.164 DN",
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A formatted TN.",
                                                                    "pattern": "^\\+\\d+-\\d+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "Non formated DN",
                                                                    "type": "string",
                                                                    "description": "A non-E.164 formatted TN.",
                                                                    "pattern": "^[\\d\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "SIP URI",
                                                                    "type": "string",
                                                                    "description": "SIP URI",
                                                                    "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 161
                                                                }
                                                            ]
                                                        },
                                                        "numberOfRings": {
                                                            "enum": [
                                                                0,
                                                                2,
                                                                3,
                                                                4,
                                                                5,
                                                                6,
                                                                7,
                                                                8,
                                                                9,
                                                                10,
                                                                11,
                                                                12,
                                                                13,
                                                                14,
                                                                15,
                                                                16,
                                                                17,
                                                                18,
                                                                19,
                                                                20
                                                            ]
                                                        }
                                                    }
                                                },
                                                "Call Forwarding Not Reachable": {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "isActive": {
                                                            "type": "boolean"
                                                        },
                                                        "forwardToPhoneNumber": {
                                                            "anyOf": [
                                                                {
                                                                    "id": "E.164 DN",
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A formatted TN.",
                                                                    "pattern": "^\\+\\d+-\\d+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "Non formated DN",
                                                                    "type": "string",
                                                                    "description": "A non-E.164 formatted TN.",
                                                                    "pattern": "^[\\d\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 23
                                                                },
                                                                {
                                                                    "id": "SIP URI",
                                                                    "type": "string",
                                                                    "description": "SIP URI",
                                                                    "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                                                    "minLength": 1,
                                                                    "maxLength": 161
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }

# Group BroadWorks Process Steps

These requests implement BroadWorks provisioning logic as individual steps suitable for
inclusion in a process (see "Process Engine", above). Each step handles the provisioning of a
single type of BroadWorks resource.

## /loki-services/broadworks/phone-numbers
### POST
Process Step: Assign Phone Numbers (for voip-users input type)

Implements phone number assignment, for use as a step in a process within the Process Customization framework.
Understands how to complete the necessary provisioning based on various types of input (depending on the process
in which it's being used). This request specifically supports only the "createVoipUsers" process is supported.

##URI Query Parameters

<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>mode</td>
            <td style="text-align: center">no</td>
            <td>prevalidate-and-create</td>
            <td>Controls execution mode as described in **ref general documentation.<br />
            Allowed values: [ "prevalidate-only", "prevalidate-and-create", "create-only" ].<br />
            <b>NOTE: at this time only "create-only" is allowed.</b>
            </td>
        </tr>
    </tbody>
</table>

+ Request (application/json)

        {
            "process": "createVoipUser",
            "customerId": "exampleCom",
            "siteId": "exampleComNorth",
            "userId": "2005553001@example.com",
            "phoneNumber": "+1-2005553001",
            "tnRoutine": "auto",
            "CLID": "+1-2005553001",
            "extension": "3001",
            "lastName": "Doe",
            "firstName": "Jane",
            "callingLineIdLastName": "Smith",
            "callingLineIdFirstName": "John",
            "email": "jdoe@another.example.com",
            "timeZone": "America\/New_York",
            "language": "English",
            "sharedDeviceName": "iad_exampleCom001",
            "trunkGroupName": "exampleTrunk",
            "servicePacks": {
                "base": "Standard",
                "add-on": [
                    "Executive"
                ]
            },
            "services": {
                "Authentication": {
                    "username": "2005553001@sip.example.com",
                    "password": "230A4u$#%f"
                },
                "Charge Number": {
                    "phoneNumber": "+1-2005554321",
                    "tnRoutine": "",
                    "useChargeNumberForEnhancedTranslations": false,
                    "sendChargeNumberToNetwork": true
                },
                "Third-Party Voice Mail Support": {
                    "isActive": true,
                    "busyRedirectToVoiceMail": true,
                    "noAnswerRedirectToVoiceMail": true,
                    "serverSelection": "User Specific Mail Server",
                    "userServer": "4165557000",
                    "mailboxIdType": "URL",
                    "mailboxURL": "2005553001@sip.example.com",
                    "noAnswerNumberOfRings": 4,
                    "alwaysRedirectToVoiceMail": false,
                    "outOfPrimaryZoneRedirectToVoiceMail": false
                },
                "Call Forwarding No Answer": {
                    "isActive": true,
                    "forwardToPhoneNumber": "+1-2005553101",
                    "numberOfRings": 4
                },
                "Call Forwarding Not Reachable": {
                    "isActive": true,
                    "forwardToPhoneNumber": "+1-2005553101"
                },
                "Remote Office": []
            }
        }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/phone-numbers"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:broadworks-phone-numbers": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/exampleCom\/phone-numbers\/%2B1-2005553001"
                                }
                            }
                        },
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/exampleCom\/groups\/exampleComNorth\/phone-numbers\/%2B1-2005553001"
                                }
                            }
                        }
                    ]
                }
            }

## /loki-services/broadworks/users
### POST
Process Step: Create BroadWorks User (for voip-users input type)

Implements creation of a user in BroadWorks, for use as a step in a process within the Process Customization framework.
Understands how to complete the necessary provisioning based on various types of input (depending on the process
in which it's being used). This request specifically supports only the "createVoipUsers" process is supported.

Note, the request and response examples show both sharedDeviceName and trunkGroupName, however only one (or neither) may be present
in the request and will be present in the response.

##URI Query Parameters

<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>mode</td>
            <td style="text-align: center">no</td>
            <td>prevalidate-and-create</td>
            <td>Controls execution mode as described in **ref general documentation.<br />
            Allowed values: [ "prevalidate-only", "prevalidate-and-create", "create-only" ].<br />
            <b>NOTE: at this time only "create-only" is allowed.</b>
            </td>
        </tr>
        <tr>
            <td>auto-increase</td>
            <td style="text-align: center">no</td>
            <td>always</td>
            <td>Controls whether various BroadWorks limits (Group user limit; service authorizations) are automatically increased when adding users.<br />
            Allowed values: [ "always", "never", "enterprise-only" ].<br />
            **ref to documentation
            </td>
        </tr>
    </tbody>
</table>

+ Request (application/json)

        {
            "process": "createVoipUser",
            "customerId": "exampleCom",
            "siteId": "exampleComNorth",
            "userId": "2005553001@example.com",
            "phoneNumber": "+1-2005553001",
            "tnRoutine": "auto",
            "CLID": "+1-2005553001",
            "extension": "3001",
            "lastName": "Doe",
            "firstName": "Jane",
            "callingLineIdLastName": "Smith",
            "callingLineIdFirstName": "John",
            "email": "jdoe@another.example.com",
            "timeZone": "America\/New_York",
            "language": "English",
            "sharedDeviceName": "iad_exampleCom001",
            "trunkGroupName": "exampleTrunk",
            "servicePacks": {
                "base": "Standard",
                "add-on": [
                    "Executive"
                ]
            },
            "services": {
                "Authentication": {
                    "username": "2005553001@sip.example.com",
                    "password": "230A4u$#%f"
                },
                "Charge Number": {
                    "phoneNumber": "+1-2005554321",
                    "tnRoutine": "",
                    "useChargeNumberForEnhancedTranslations": false,
                    "sendChargeNumberToNetwork": true
                },
                "Third-Party Voice Mail Support": {
                    "isActive": true,
                    "busyRedirectToVoiceMail": true,
                    "noAnswerRedirectToVoiceMail": true,
                    "serverSelection": "User Specific Mail Server",
                    "userServer": "4165557000",
                    "mailboxIdType": "URL",
                    "mailboxURL": "2005553001@sip.example.com",
                    "noAnswerNumberOfRings": 4,
                    "alwaysRedirectToVoiceMail": false,
                    "outOfPrimaryZoneRedirectToVoiceMail": false
                },
                "Call Forwarding No Answer": {
                    "isActive": true,
                    "forwardToPhoneNumber": "+1-2005553101",
                    "numberOfRings": 4
                },
                "Call Forwarding Not Reachable": {
                    "isActive": true,
                    "forwardToPhoneNumber": "+1-2005553101"
                },
                "Remote Office": []
            }
        }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/broadworks/serviceProviders/exampleCom/users/2005553001%40example.com

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/users"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:broadworks-users": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/exampleCom\/users\/2005553001%40example.com"
                                }
                            },
                            "phoneNumber": "+1-2005553001",
                            "extension": "3001",
                            "CLID": "+1-2005553001",
                            "userId": "2005553001@example.com",
                            "portalPassword": "s8F!9ggo",
                            "firstName": "John",
                            "lastName": "Smith",
                            "callingLineIdLastName": "Smith",
                            "callingLineIdFirstName": "John",
                            "timeZone": "America\/New_York",
                            "language": "English",
                            "sharedDeviceName": "iad_exampleCom001",
                            "trunkGroupName": "exampleTrunk"
                        }
                    ]
                }
            }

## /loki-services/broadworks/assignUserServices
### POST
Process Step: Assign BroadWorks User Services (for voip-users input type)

Assigns services on a User in BroadWorks. For use as a step in a process within the Process Customization framework.
Understands how to complete the necessary provisioning based on various types of input (depending on the process
in which it's being used). This request specifically supports only the "createVoipUsers" process.

Note that this may assign services not included in the inputs, depending on the configuration. For example, for most user
types, the server will always assign Authentication even if it's missing from the inputs.

Note: the input body may contain additional embedded resources (from previous process steps). Only those explicilty
required are shown in the example.

##URI Query Parameters

<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>mode</td>
            <td style="text-align: center">no</td>
            <td>prevalidate-and-update</td>
            <td>Controls execution mode as described in **ref general documentation.<br />
            Allowed values: [ "prevalidate-only", "prevalidate-and-update", "update-only" ].<br />
            <b>NOTE: at this time only "create-only" is allowed.</b>
            </td>
        </tr>
    </tbody>
</table>

+ Request (application/hal+json)

        {
            "process": "createVoipUser",
            "customerId": "exampleCom",
            "siteId": "exampleComNorth",
            "userId": "2005553001@example.com",
            "phoneNumber": "+1-2005553001",
            "tnRoutine": "auto",
            "CLID": "+1-2005553001",
            "extension": "3001",
            "lastName": "Doe",
            "firstName": "Jane",
            "callingLineIdLastName": "Smith",
            "callingLineIdFirstName": "John",
            "email": "jdoe@another.example.com",
            "timeZone": "America\/New_York",
            "language": "English",
            "sharedDeviceName": "iad_exampleCom001",
            "trunkGroupName": "exampleTrunk",
            "servicePacks": {
                "base": "Standard",
                "add-on": [
                    "Executive"
                ]
            },
            "services": {
                "Authentication": {
                    "username": "2005553001",
                    "password": "230A4u$#%f"
                },
                "Charge Number": {
                    "phoneNumber": "+1-2005554321",
                    "tnRoutine": "",
                    "useChargeNumberForEnhancedTranslations": false,
                    "sendChargeNumberToNetwork": true
                },
                "Third-Party Voice Mail Support": {
                    "isActive": true,
                    "busyRedirectToVoiceMail": true,
                    "noAnswerRedirectToVoiceMail": true,
                    "serverSelection": "User Specific Mail Server",
                    "userServer": "4165557000",
                    "mailboxIdType": "URL",
                    "mailboxURL": "2005553001@sip.example.com",
                    "noAnswerNumberOfRings": 4,
                    "alwaysRedirectToVoiceMail": false,
                    "outOfPrimaryZoneRedirectToVoiceMail": false
                },
                "Call Forwarding No Answer": {
                    "isActive": true,
                    "forwardToPhoneNumber": "+1-2005553101",
                    "numberOfRings": 4
                },
                "Call Forwarding Not Reachable": {
                    "isActive": true,
                    "forwardToPhoneNumber": "+1-2005553101"
                },
                "Remote Office": []
            },
            "curies": [
                {
                    "name": "ls",
                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                    "templated": true
                }
            ],
            "_embedded": {
                "ls:broadworks-users": [
                    {
                        "_links": {
                            "self": {
                                "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/exampleCom\/users\/2005553001%40example.com"
                            }
                        },
                        "phoneNumber": "+1-2005553001",
                        "extension": "3001",
                        "CLID": "+1-2005553001",
                        "userId": "2005553001@example.com",
                        "portalPassword": "s8F!9ggo",
                        "firstName": "John",
                        "lastName": "Smith",
                        "callingLineIdLastName": "Smith",
                        "callingLineIdFirstName": "John",
                        "timeZone": "America\/New_York",
                        "language": "English"
                    }
                ],
                "etc": "various embedded resources may be present here (phone-number, device, etc)"
            }
        }

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/configureUserServices"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:broadworks-users": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/exampleCom\/users\/2005553001%40example.com"
                                }
                            },
                            "phoneNumber": "+1-2005553001",
                            "extension": "3001",
                            "CLID": "+1-2005553001",
                            "userId": "2005553001@example.com",
                            "portalPassword": "s8F!9ggo",
                            "firstName": "John",
                            "lastName": "Smith",
                            "callingLineIdLastName": "Smith",
                            "callingLineIdFirstName": "John",
                            "timeZone": "America\/New_York",
                            "language": "English",
                            "services": {
                                "Authentication": {
                                    "username": "2005553001",
                                    "password": "230A4u$#%f"
                                },
                                "Charge Number": {
                                    "phoneNumber": "+1-2005554321",
                                    "tnRoutine": "",
                                    "useChargeNumberForEnhancedTranslations": false,
                                    "sendChargeNumberToNetwork": true
                                },
                                "Third-Party Voice Mail Support": {
                                    "isActive": true,
                                    "busyRedirectToVoiceMail": true,
                                    "noAnswerRedirectToVoiceMail": true,
                                    "serverSelection": "User Specific Mail Server",
                                    "userServer": "4165557000",
                                    "mailboxIdType": "URL",
                                    "mailboxURL": "2005553001@sip.example.com",
                                    "noAnswerNumberOfRings": 4,
                                    "alwaysRedirectToVoiceMail": false,
                                    "outOfPrimaryZoneRedirectToVoiceMail": false
                                },
                                "Call Forwarding No Answer": {
                                    "isActive": true,
                                    "forwardToPhoneNumber": "+1-2005553101",
                                    "numberOfRings": 4
                                },
                                "Call Forwarding Not Reachable": {
                                    "isActive": true,
                                    "forwardToPhoneNumber": "+1-2005553101"
                                },
                                "Remote Office": []
                            }
                        }
                    ],
                    "etc": "any embedded resources from the request (phone-number, device, etc) will be included here"
                }
            }

## /loki-services/broadworks/configureUserServices
### POST
Process Step: Configure BroadWorks User Services (for voip-users input type)

Configures services on a User in BroadWorks. For use as a step in a process within the Process Customization framework.
Understands how to complete the necessary provisioning based on various types of input (depending on the process
in which it's being used). This request specifically supports only the "createVoipUsers" process is supported.

Note: the input body may contain additional embedded resources (from previous process steps). Only those explicilty
required are shown in the example.

##URI Query Parameters

<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>mode</td>
            <td style="text-align: center">no</td>
            <td>prevalidate-and-update</td>
            <td>Controls execution mode as described in **ref general documentation.<br />
            Allowed values: [ "prevalidate-only", "prevalidate-and-update", "update-only" ].<br />
            <b>NOTE: at this time only "create-only" is allowed.</b>
            </td>
        </tr>
    </tbody>
</table>

<i>Note, any value in services."Third-Party Voice Mail Support".noAnswerNumberOfRings will
be overridden by services."Call Forwarding No Answer".numberOfRings if present, as they both affect the
same setting on the user in BroadWorks.</i>

+ Request (application/hal+json)

        {
            "process": "createVoipUser",
            "customerId": "exampleCom",
            "siteId": "exampleComNorth",
            "userId": "2005553001@example.com",
            "phoneNumber": "+1-2005553001",
            "tnRoutine": "auto",
            "CLID": "+1-2005553001",
            "extension": "3001",
            "lastName": "Doe",
            "firstName": "Jane",
            "callingLineIdLastName": "Smith",
            "callingLineIdFirstName": "John",
            "email": "jdoe@another.example.com",
            "timeZone": "America\/New_York",
            "language": "English",
            "sharedDeviceName": "iad_exampleCom001",
            "trunkGroupName": "exampleTrunk",
            "servicePacks": {
                "base": "Standard",
                "add-on": [
                    "Executive"
                ]
            },
            "services": {
                "Authentication": {
                    "username": "2005553001",
                    "password": "230A4u$#%f"
                },
                "Charge Number": {
                    "phoneNumber": "+1-2005554321",
                    "tnRoutine": "",
                    "useChargeNumberForEnhancedTranslations": false,
                    "sendChargeNumberToNetwork": true
                },
                "Third-Party Voice Mail Support": {
                    "isActive": true,
                    "busyRedirectToVoiceMail": true,
                    "noAnswerRedirectToVoiceMail": true,
                    "serverSelection": "User Specific Mail Server",
                    "userServer": "4165557000",
                    "mailboxIdType": "URL",
                    "mailboxURL": "2005553001@sip.example.com",
                    "noAnswerNumberOfRings": 4,
                    "alwaysRedirectToVoiceMail": false,
                    "outOfPrimaryZoneRedirectToVoiceMail": false
                },
                "Call Forwarding No Answer": {
                    "isActive": true,
                    "forwardToPhoneNumber": "+1-2005553101",
                    "numberOfRings": 4
                },
                "Call Forwarding Not Reachable": {
                    "isActive": true,
                    "forwardToPhoneNumber": "+1-2005553101"
                },
                "Remote Office": []
            },
            "curies": [
                {
                    "name": "ls",
                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                    "templated": true
                }
            ],
            "_embedded": {
                "ls:broadworks-users": [
                    {
                        "_links": {
                            "self": {
                                "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/exampleCom\/users\/2005553001%40example.com"
                            }
                        },
                        "phoneNumber": "+1-2005553001",
                        "extension": "3001",
                        "CLID": "+1-2005553001",
                        "userId": "2005553001@example.com",
                        "portalPassword": "s8F!9ggo",
                        "firstName": "John",
                        "lastName": "Smith",
                        "callingLineIdLastName": "Smith",
                        "callingLineIdFirstName": "John",
                        "timeZone": "America\/New_York",
                        "language": "English"
                    }
                ],
                "etc": "various embedded resources may be present here (phone-number, device, etc)"
            }
        }

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/configureUserServices"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:broadworks-users": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/exampleCom\/users\/2005553001%40example.com"
                                }
                            },
                            "phoneNumber": "+1-2005553001",
                            "extension": "3001",
                            "CLID": "+1-2005553001",
                            "userId": "2005553001@example.com",
                            "portalPassword": "s8F!9ggo",
                            "firstName": "John",
                            "lastName": "Smith",
                            "callingLineIdLastName": "Smith",
                            "callingLineIdFirstName": "John",
                            "timeZone": "America\/New_York",
                            "language": "English",
                            "services": {
                                "Authentication": {
                                    "username": "2005553001",
                                    "password": "230A4u$#%f"
                                },
                                "Charge Number": {
                                    "phoneNumber": "+1-2005554321",
                                    "tnRoutine": "",
                                    "useChargeNumberForEnhancedTranslations": false,
                                    "sendChargeNumberToNetwork": true
                                },
                                "Third-Party Voice Mail Support": {
                                    "isActive": true,
                                    "busyRedirectToVoiceMail": true,
                                    "noAnswerRedirectToVoiceMail": true,
                                    "serverSelection": "User Specific Mail Server",
                                    "userServer": "4165557000",
                                    "mailboxIdType": "URL",
                                    "mailboxURL": "2005553001@sip.example.com",
                                    "noAnswerNumberOfRings": 4,
                                    "alwaysRedirectToVoiceMail": false,
                                    "outOfPrimaryZoneRedirectToVoiceMail": false
                                },
                                "Call Forwarding No Answer": {
                                    "isActive": true,
                                    "forwardToPhoneNumber": "+1-2005553101",
                                    "numberOfRings": 4
                                },
                                "Call Forwarding Not Reachable": {
                                    "isActive": true,
                                    "forwardToPhoneNumber": "+1-2005553101"
                                },
                                "Remote Office": []
                            }
                        }
                    ],
                    "etc": "any embedded resources from the request (phone-number, device, etc) will be included here"
                }
            }

# Group BroadWorks Entity - Service Providers

Network Element: BroadWorks (initially only supports XSP or AS resources)

Various resources providing general internal services at the Service Provider/Enterprise level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/service-providers/{+serviceProviderId}
### GET
Retrieve information about a Service Provider/Enterprise.<br />
Process name: Retrieve Service Provider/Enterprise (BroadWorks Entity Service)<br />
Only one of "isEnterprise" and "useCustomRoutingProfile" will appear in the response. Also the "useServiceProviderLanguages" will appear only for Service Providers.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/broadworks\/service-providers\/Example%20Com"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "serviceProviderId": "Example Com",
                "isEnterprise": true,
                "useCustomRoutingProfile": "true",
                "name": "Example Com",
                "defaultDomain": "example.com",
                "supportEmail": "email@example.com",
                "contact": {
                    "name": "John Doe",
                    "number": "+1-555123890",
                    "email": "contact@example.com"
                },
                "address": {
                    "addressLine1": "Address Line 1",
                    "addressLine2": "Address Line 1",
                    "city": "My City",
                    "stateOrProvince": "Alberta",
                    "stateOrProvinceDisplayName": "Alberta",
                    "zipOrPostalCode": "5656343",
                    "country": "CA"
                },
                "useServiceProviderLanguages": false
            }

    + Schema

            {
                "title": "BroadWorks Entity - Retrieve Service Provider response body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "isEnterprise": {
                        "type": "boolean",
                        "required": true
                    },
                    "useCustomRoutingProfile": {
                        "type": "boolean"
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "supportEmail": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "format": "email"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "number": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "email": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvinceDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    },
                    "useServiceProviderLanguages": {
                        "type": "boolean",
                        "description": "required for Service Providers"
                    }
                }
            }

### PUT
Modify some or all editable properties of a BroadWorks Service Provider/Enterprise.
Process name: Modify Service Provider (BroadWorks Entity Service)

+ Request (application/json)
    + Body

            {
                "name": "Example Com",
                "defaultDomain": "example.com",
                "supportEmail": "admin@example.net",
                "contact": {
                    "name": "Billy",
                    "number": "Bishop",
                    "email": "billy@example.com"
                },
                "address": {
                    "addressLine1": "415 Sixth Ave",
                    "addressLine2": "Suite 102",
                    "city": "North Seventh",
                    "stateOrProvince": "Alabama",
                    "zipOrPostalCode": "50415",
                    "country": "USA"
                },
                "useServiceProviderLanguages": false
            }

    + Schema

            {
                "title": "BroadWorks Entity - Modify Service Provider\/Enterprise request body",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$"
                    },
                    "supportEmail": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "format": "email"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "number": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "email": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    },
                    "useServiceProviderLanguages": {
                        "type": "boolean"
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Remove specified Service Provider/Enterprise from BroadWorks.
Process name: Delete Service Provider (BroadWorks Entity Service)

This request makes no attempt to check if the Service Provider/Enterprise actually exists in the System,
nor does it check to see if the Service Provider/Enterprise is allowed to be deleted.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/broadworks/service-providers{?mode}
### POST
Creates a new Service Provider or Enterprise<br />
Process name: Create Service Provider (BroadWorks Entity Service)<br />
Also assigns the default domain to the System and the defaultSipDomain from configuration to the System
and the newly created Service Provider/Enterprise.<br />
Note that the 424 example is just one example of a possible BroadWorks error.<br />
##URI Query Parameters
<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>mode</td>
            <td style="text-align: center">no</td>
            <td>create-only</td>
            <td>Controls execution mode as described in **ref general documentation.<br />
            Allowed values: [ "prevalidate-only", "prevalidate-and-create", "create-only" ].<br />
            <b>NOTE: at this time this property is ignored.</b>
            </td>
        </tr>
    </tbody>
</table>

+ Request (application/json)
    + Body

            {
                "hostingNe": "1",
                "serviceProviderId": "Example Com",
                "name": "Example Com",
                "defaultDomain": "example.com",
                "supportEmail": "admin@example.net",
                "isEnterprise": true,
                "contact": {
                    "name": "Billy",
                    "number": "Bishop",
                    "email": "billy@example.com"
                },
                "address": {
                    "addressLine1": "415 Sixth Ave",
                    "addressLine2": "Suite 102",
                    "city": "North Seventh",
                    "stateOrProvince": "Alabama",
                    "zipOrPostalCode": "50415",
                    "country": "USA"
                }
            }

    + Schema

            {
                "title": "BroadWorks Entity - Create Service Provider\/Enterprise request body",
                "type": "object",
                "properties": {
                    "hostingNe": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "description": "Specifies BroadWorks cluster where new entity should be created. If included, must match to one of the configured hostingNe values in config.xml. If omitted, default cluster will be used."
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "isEnterprise": {
                        "type": "boolean",
                        "required": true
                    },
                    "useCustomRoutingProfile": {
                        "type": "boolean",
                        "description": "Required when isEnterprise is false. Will be ignored when isEnterprise is true"
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "description": "Domain will be added to BroadWorks automatically. If not specified, default system domain will be used as default service provider\/enterprise domain."
                    },
                    "supportEmail": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "format": "email"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "number": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "email": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/broadworks/service-providers/Example%20Com

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/service-providers\/Example%20Com"
                    }
                },
                "serviceProviderId": "Example Com",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/localhost\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "BroadWorks Entity - Create Service Provider\/Enterprise response body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "description": "Present only if it was not included in the request body (was assigned automatically from the System default domain)."
                    },
                    "hostingNe": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "description": "Present only if it was not included in the request body (default cluster was used)."
                    }
                }
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4100",
                "externalErrorSummary": "[Error 4100] Service Provider or Enterprise with the requested name already exists.",
                "externalErrorDetail": "[Error 4100] Service Provider or Enterprise with the requested name already exists."
            }

    + Schema

            {
                "title": "BroadWorks Entity - Create Service Provider\/Enterprise response body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "description": "Present only if it was not included in the request body (was assigned automatically from the System default domain)."
                    },
                    "hostingNe": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "description": "Present only if it was not included in the request body (default cluster was used)."
                    }
                }
            }

## /loki-services/broadworks/service-providers/{+serviceProviderId}/assignDomain
### POST
Assigns a domain to the Service Provider/Enterprise and it automatically assigns to the System as well if it needs to.<br />
Process name: Assign Domain to System and Service Provider/Enterprise (BroadWorks Entity)<br />
Note that the 424 example is just one example of a possible BroadWorks error.

+ Request (application/json)
    + Body

            {
                "domain": "example",
                "autoAssignSystemDomain": true,
                "autoAssignServiceProviderDomain": true
            }

    + Schema

            {
                "title": "BroadWorks Entity - Assign Domain to Service Provider request body parameters schema",
                "properties": {
                    "domain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$"
                    },
                    "autoAssignSystemDomain": {
                        "type": "boolean"
                    },
                    "autoAssignServiceProviderDomain": {
                        "type": "boolean"
                    }
                }
            }

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/broadworks\/service-providers\/Example%20Com\/assignDomain"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "BroadWorks Entity - Assign Domain to Service Provider response body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    }
                }
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4990",
                "externalErrorSummary": "[Error 4990] Invalid IP Address\/Host or Domain Name.  The IP Address\/Host or Domain Name length must be between 1 and 80 characters long and cannot contain a space or @ character.",
                "externalErrorDetail": "[Error 4990] Invalid IP Address\/Host or Domain Name.  The IP Address\/Host or Domain Name length must be between 1 and 80 characters long and cannot contain a space or @ character."
            }

    + Schema

            {
                "title": "BroadWorks Entity - Assign Domain to Service Provider response body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    }
                }
            }

# Group BroadWorks Entity Service Providers - Phone Numbers

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides all internal services related to BroadWorks phone number (TN) resources at the Enterprise/Service Provider level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/service-providers/{+serviceProviderId}/phone-numbers{?mode}
### POST
Assign a single phone number (TN) to an Enterprise or Service Provider.
Process name : Assign BroadWorks Service Provider/Enterprise TN (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Rollback-enabled: Yes<br />
Cluster resolution method: Service Provider<br />
Note that the 424 example is just one example of a possible BroadWorks error.
##URI Query Parameters
<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>mode</td>
            <td style="text-align: center">no</td>
            <td>create-only</td>
            <td>Controls execution mode as described in **ref general documentation.<br />
            Allowed values: [ "prevalidate-only", "prevalidate-and-create", "create-only" ].<br />
            <b>NOTE: at this time this property is ignored.</b>
            </td>
        </tr>
    </tbody>
</table>

+ Request (application/json)
    + Body

            {
                "phoneNumber": "+1-2005553001"
            }

    + Schema

            {
                "title": "BroadWorks Entity - Assign Service Provider Phone Number request body schema",
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23,
                        "pattern": "^\\+\\d+-\\d+$"
                    }
                }
            }

+ Response 201
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/broadworks/serviceProviders/Example%20Com/phone-numbers/%2B1-2005553001

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/service-providers\/Example%20Com\/phone-numbers\/%2B1-2005553001"
                    }
                },
                "serviceProviderId": "Example Com",
                "phoneNumber": "+1-2005553001",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4250",
                "externalErrorSummary": "[Warning 4250] 1 phone number(s) not added.  Verify that the number(s) are not already assigned.",
                "ThexternalErrorDetail": "[Warning 4250] 1 phone number(s) not added.  Verify that the number(s) are not already assigned."
            }

## /loki-services/broadworks/service-providers/{+serviceProviderId}/phone-numbers/{+phoneNumber}
### HEAD
Check existence of an individual phone number in an Enterprise or Service Provider.
Process name : Check BroadWorks Service Provider/Enterprise TN (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Rollback-enabled: No<br />
Cluster resolution method: Service Provider

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Unassign a phone number from an Enterprise or a Service Provider.
Process name : Delete  BroadWorks Service Provider/Enterprise TN (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Rollback-enabled: No<br />
Cluster resolution method: Service Provider

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Entity - Groups

Network Element: BroadWorks (initially only supports XSP or AS resources)

Various resources providing general internal services at the Group level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}{?view}
### GET
Retrieve information about a Group.

Note that BroadWorks unfortunately omits the "-" in the callingLineIdPhoneNumber. At this time
the BroadWorks value will be passed through unaltered in the response.

The following properties are omitted from the response if they have no value set on the Group in BroadWorks:

* groupName
* callingLineIdName
* callingLineIdPhoneNumber
* callingLineIdDisplayPhoneNumber
* locationDialingCode
* contact
* address

##URI Query Parameters

<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>view</td>
            <td style="text-align: center">no</td>
            <td>(empty)</td>
            <td>Selects the view returned in the response.<br />
            Allowed values: empty, or a comma-separated list of one or more of the following: [ "extension-length", "rules" ].<br />
            Each view name corresponds to an object in the response body. If the view is named in the value of ?view, then the corresponding
            object will be included in the response. <br />
            When ?view is omitted or empty, none of the extra views will be included.<br />
            </td>
        </tr>
    </tbody>
</table>

**KNOWN ISSUE: Currently the 200 OK response body includes an "ne_id" property which is not part of the specification.**

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:broadworks-service-providers": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/serviceProviders\/Example%20Com"
                                }
                            },
                            "serviceProviderId": "Example Com"
                        }
                    ]
                },
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "defaultDomain": "r19.leonidsystems.com",
                "userLimit": 6,
                "userCount": 6,
                "groupName": "exampleCom North",
                "callingLineIdName": "ExampleCOM North",
                "callingLineIdPhoneNumber": "+15552112700",
                "callingLineIdDisplayPhoneNumber": "5552112700",
                "timeZone": "America\/St_Johns",
                "timeZoneDisplayName": "(GMT-03:30) (Canada) Newfoundland",
                "locationDialingCode": "415",
                "contact": {
                    "contactName": "Billy",
                    "contactNumber": "Bishop",
                    "contactEmail": "billy@example.com"
                },
                "address": {
                    "addressLine1": "415 Sixth Ave",
                    "addressLine2": "Suite 102",
                    "city": "North Seventh",
                    "stateOrProvince": "Alabama",
                    "zipOrPostalCode": "50415",
                    "country": "USA"
                },
                "extension-length": {
                    "minExtensionLength": 2,
                    "maxExtensionLength": 6,
                    "defaultExtensionLength": 4
                },
                "rules": {
                    "password-rules": {
                        "disallowUserId": false,
                        "disallowOldPassword": false,
                        "disallowReversedOldPassword": false,
                        "restrictMinDigits": false,
                        "minDigits": 1,
                        "restrictMinUpperCaseLetters": false,
                        "minUpperCaseLetters": 1,
                        "restrictMinLowerCaseLetters": false,
                        "minLowerCaseLetters": 1,
                        "restrictMinNonAlphanumericCharacters": false,
                        "minNonAlphanumericCharacters": 1,
                        "minLength": 6,
                        "maxFailedLoginAttempts": 5,
                        "passwordExpiresDays": 30,
                        "sendLoginDisabledNotifyEmail": false,
                        "disallowRulesModification": false,
                        "disallowPreviousPasswords": false,
                        "numberOfPreviousPasswords": 1
                    }
                }
            }

    + Schema

            {
                "type": "object",
                "title": "BroadWorks Entity - Retrieve Group response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "_embedded": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "ls:broadworks-service-providers": {
                                "type": "array",
                                "required": true,
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "required": true,
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "required": true,
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "required": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "serviceProviderId": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 30,
                                            "required": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    },
                    "userLimit": {
                        "type": "integer",
                        "required": true
                    },
                    "userCount": {
                        "type": "integer",
                        "required": true
                    },
                    "groupName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "callingLineIdName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "callingLineIdPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "callingLineIdDisplayPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "timeZoneDisplayName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "locationDialingCode": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15,
                        "pattern": "^[0-9]+$"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "contactName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactEmail": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    },
                    "rules": {
                        "type": "object",
                        "properties": {
                            "password-rules": {
                                "type": "object",
                                "properties": {
                                    "disallowUserId": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "disallowOldPassword": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "disallowReversedOldPassword": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "restrictMinDigits": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "minDigits": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10,
                                        "required": true
                                    },
                                    "restrictMinUpperCaseLetters": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "minUpperCaseLetters": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10,
                                        "required": true
                                    },
                                    "restrictMinLowerCaseLetters": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "minLowerCaseLetters": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10,
                                        "required": true
                                    },
                                    "restrictMinNonAlphanumericCharacters": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "minNonAlphanumericCharacters": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10,
                                        "required": true
                                    },
                                    "minLength": {
                                        "type": "integer",
                                        "minimum": 3,
                                        "maximum": 40,
                                        "required": true
                                    },
                                    "maxFailedLoginAttempts": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 10,
                                        "required": true
                                    },
                                    "passwordExpiresDays": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 199,
                                        "required": true
                                    },
                                    "sendLoginDisabledNotifyEmail": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "disallowRulesModification": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "disallowPreviousPasswords": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "numberOfPreviousPasswords": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10,
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "extension-length": {
                        "type": "object",
                        "properties": {
                            "minExtensionLength": {
                                "type": "integer",
                                "minimum": 2,
                                "maximum": 20,
                                "required": true
                            },
                            "maxExtensionLength": {
                                "type": "integer",
                                "minimum": 2,
                                "maximum": 20,
                                "required": true
                            },
                            "defaultExtensionLength": {
                                "type": "integer",
                                "minimum": 2,
                                "maximum": 20,
                                "required": true
                            }
                        }
                    }
                }
            }

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups{?mode}
### POST
Create a new group<br />
Also assigns the default domain to the System and Enterprise/Service Provider if needed and resolves the SIP Domain for the new group.<br />
Process name: Create Group (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Rollback-enabled: Yes<br />
Cluster resolution method: Service Provider<br />
Note that the 424 example is just one example of a possible BroadWorks error.<br />
##URI Query Parameters
<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>mode</td>
            <td style="text-align: center">no</td>
            <td>create-only</td>
            <td>Controls execution mode as described in **ref general documentation.<br />
            Allowed values: [ "prevalidate-only", "prevalidate-and-create", "create-only" ].<br />
            <b>NOTE: at this time this property is ignored.</b>
            </td>
        </tr>
    </tbody>
</table>

+ Request (application/json)
    + Body

            {
                "groupId": "Example Com - North",
                "defaultDomain": "example.com",
                "userLimit": 10,
                "name": "North Office",
                "callingLineId": {
                    "name": "ExampleComNorth"
                },
                "timeZone": "America\/St_Johns",
                "locationDialingCode": "415",
                "contact": {
                    "name": "Billy",
                    "number": "Bishop",
                    "email": "billy@example.com"
                },
                "address": {
                    "addressLine1": "415 Sixth Ave",
                    "addressLine2": "Suite 102",
                    "city": "North Seventh",
                    "stateOrProvince": "Alabama",
                    "zipOrPostalCode": "50415",
                    "country": "USA"
                }
            }

    + Schema

            {
                "title": "BroadWorks Entity - Create Group request body schema",
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$"
                    },
                    "userLimit": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999999,
                        "required": true
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "callingLineId": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            }
                        }
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127
                    },
                    "locationDialingCode": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15,
                        "pattern": "^[0-9]+$"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "number": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "email": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/broadworks/service-providers/Example%20Com/groups/Example%20Com%20-%20North

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North"
                    }
                },
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/localhost\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "BroadWorks Entity - Create Group response body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$"
                    },
                    "callingLineId": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            }
                        }
                    }
                }
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4150",
                "externalErrorSummary": "[Error 4150] The Group already exists, please use a unique Group ID.",
                "externalErrorDetail": "[Error 4150] The Group already exists, please use a unique Group ID."
            }

    + Schema

            {
                "title": "BroadWorks Entity - Create Group response body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$"
                    },
                    "callingLineId": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            }
                        }
                    }
                }
            }

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}
### PUT
Modify some or all editable properties of a BroadWorks Group.

+ Request (application/json)
    + Body

            {
                "defaultDomain": "r19.leonidsystems.com",
                "userLimit": 6,
                "groupName": "exampleCom North",
                "callingLineIdName": "ExampleCOM North",
                "callingLineIdPhoneNumber": "+1-5553112700",
                "timeZone": "America\/St_Johns",
                "locationDialingCode": "415",
                "contact": {
                    "contactName": "Billy",
                    "contactNumber": "Bishop",
                    "contactEmail": "billy@example.com"
                },
                "address": {
                    "addressLine1": "415 Sixth Ave",
                    "addressLine2": "Suite 102",
                    "city": "North Seventh",
                    "stateOrProvince": "Alabama",
                    "zipOrPostalCode": "50415",
                    "country": "USA"
                }
            }

    + Schema

            {
                "title": "BroadWorks Entity - Modify Group request body schema",
                "type": "object",
                "properties": {
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$"
                    },
                    "userLimit": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999999
                    },
                    "groupName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "callingLineIdName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "callingLineIdPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23,
                        "pattern": "^\\+\\d+-\\d+$"
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127
                    },
                    "locationDialingCode": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15,
                        "pattern": "^[0-9]+$"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "contactName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactEmail": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/applyTemplate
### POST
Applies a template group to an existing group<br />
Process name: Apply Group Template (BroadWorks Entity)

+ Request (application/json)
    + Body

            {
                "templateGroupId": "ExampleCOM Template"
            }

    + Schema

            {
                "title": "BroadWorks Entity - Apply Group Template request body schema",
                "type": "object",
                "properties": {
                    "templateGroupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/extension-length
### GET
Retrieve Extension Dialing settings from a BroadWorks Group.<br />
Process name: Retrieve Group Extension Length (BroadWorks Entity Service)<br />

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/extension-length"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "min": 2,
                "max": 6,
                "default": 4
            }

    + Schema

            {
                "title": "BroadWorks Entity - Retrieve Group Extension Length response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "min": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20,
                        "required": true
                    },
                    "max": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20,
                        "required": true
                    },
                    "default": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20,
                        "required": true
                    }
                }
            }

### PUT
Modify the Extension Dialing settings on a BroadWorks Group.<br />
Process name: Modify Group Extension Length (BroadWorks Entity Service)<br />

+ Request (application/json)
    + Body

            {
                "min": 3,
                "max": 6,
                "default": 4
            }

    + Schema

            {
                "title": "BroadWorks Entity - Modify Group Extension Length request body schema",
                "type": "object",
                "properties": {
                    "min": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20
                    },
                    "max": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20
                    },
                    "default": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Third-Party%20Voice%20Mail%20Support
### GET
Retrieve Third-Party Voice Mail support settings from a BroadWorks Group<br />
Process name: Retrieve Group 3PVM (BroadWorks Entity Service)<br />
<b>Not Implemented</b>

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com\/services\/Third-Party%20Voice%20Mail%20Support"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "serviceProviderId": "Example Com",
                "groupId": "Example Com",
                "groupServer": "+1-2005553001",
                "isActive": true
            }

    + Schema

            {
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "groupServer": {
                        "id": "OutgoingDNorSIPURI",
                        "anyOf": [
                            {
                                "id": "E.164 DN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "A formatted TN.",
                                "pattern": "^\\+\\d+-\\d+$",
                                "minLength": 1,
                                "maxLength": 23,
                                "required": false
                            },
                            {
                                "id": "non-E.164 DN",
                                "type": "string",
                                "description": "A non-E.164 formatted TN.",
                                "pattern": "^[\\d\\-]+$",
                                "minLength": 1,
                                "maxLength": 23,
                                "required": false
                            },
                            {
                                "id": "SIP URI",
                                "type": "string",
                                "description": "SIP URI",
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                "minLength": 1,
                                "maxLength": 161,
                                "required": false
                            }
                        ]
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    }
                }
            }

### PUT
Update group-level settings of Third-Party Voice Mail user service<br />
Process name: Modify Group 3PVM (BroadWorks Entity Service)<br />

+ Request (application/json)
    + Body

            {
                "isActive": true,
                "groupServer": "+1-2005553001"
            }

    + Schema

            {
                "title": "BroadWorks Entity - Modify Group 3PVM service settings request body schema",
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "groupServer": {
                        "id": "OutgoingDNorSIPURI",
                        "anyOf": [
                            {
                                "id": "E.164 DN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "A formatted TN.",
                                "pattern": "^\\+\\d+-\\d+$",
                                "minLength": 1,
                                "maxLength": 23,
                                "required": false
                            },
                            {
                                "id": "non-E.164 DN",
                                "type": "string",
                                "description": "A non-E.164 formatted TN.",
                                "pattern": "^[\\d\\-]+$",
                                "minLength": 1,
                                "maxLength": 23,
                                "required": false
                            },
                            {
                                "id": "SIP URI",
                                "type": "string",
                                "description": "SIP URI",
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                "minLength": 1,
                                "maxLength": 161,
                                "required": false
                            }
                        ]
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Voice%20Portal
### GET
Retrieve Voice Portal service settings from a BroadWorks Group<br />
Process name: Retrieve Group Voice Portal (BroadWorks Entity Service)<br />
<b>Not Implemented</b>

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com\/services\/Voice%20Portal"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "serviceProviderId": "Example Com",
                "groupId": "Example Com",
                "serviceUserId": "VoicePortalId",
                "profile": {
                    "name": "Voice Portal",
                    "callingLineId": {
                        "lastName": "Portal",
                        "firstName": "Voice",
                        "phoneNumber": "+1-555123456"
                    },
                    "hiragana": {
                        "lastName": "Portal",
                        "firstName": "Voice"
                    },
                    "phoneNumber": "+1-555123456",
                    "countryCode": "1",
                    "nationalPrefix": "+1",
                    "extension": "3456",
                    "department": "Dept #1",
                    "language": "English",
                    "timeZone": "America\/New_York",
                    "timeZoneDisplayName": "(GMT-04:00) (US) Eastern Time",
                    "alias": [
                        "voiceportal@example.com"
                    ],
                    "publicUserIdentity": "VoicePortalId"
                },
                "isActive": true,
                "enableExtendedScope": true,
                "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin": false,
                "useVoicePortalWizard": true,
                "externalRouting": {
                    "scope": "Group",
                    "useExternal": true,
                    "address": "external@example.com"
                },
                "homeZone": "Home Zone #1",
                "networkClassOfService": "NCoS #1"
            }

    + Schema

            {
                "title": "BroadWorks Entity - Retrieve Group Voice Portal service response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceUserId": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "callingLineId": {
                                "type": "object",
                                "properties": {
                                    "lastName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "phoneNumber": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^[\\d\\-]+$"
                                    }
                                }
                            },
                            "hiragana": {
                                "type": "object",
                                "properties": {
                                    "lastName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    }
                                }
                            },
                            "phoneNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            "extension": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 20,
                                "pattern": "^[\\d\\-]+$"
                            },
                            "countryCode": {
                                "type": "string"
                            },
                            "nationalPrefix": {
                                "type": "string"
                            },
                            "department": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    }
                                }
                            },
                            "language": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40
                            },
                            "timeZone": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 127
                            },
                            "timeZoneDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 127
                            },
                            "alias": {
                                "type": [
                                    "string",
                                    "array"
                                ]
                            },
                            "publicUserIdentity": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "enableExtendedScope": {
                        "type": "boolean"
                    },
                    "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin": {
                        "type": "boolean"
                    },
                    "useVoicePortalWizard": {
                        "type": "boolean"
                    },
                    "externalRouting": {
                        "type": "object",
                        "properties": {
                            "scope": {
                                "enum": [
                                    "Group",
                                    "System"
                                ]
                            },
                            "useExternal": {
                                "type": "boolean"
                            },
                            "address": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        }
                    },
                    "homeZoneName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "networkClassOfService": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    }
                }
            }

### PUT
Modify Voice Portal service settings from a BroadWorks Group<br />
Process name: Modify Group Voice Portal (BroadWorks Entity Service)<br />

+ Request (application/json)
    + Body

            {
                "profile": {
                    "name": "Voice Portal",
                    "callingLineId": {
                        "lastName": "Portal",
                        "firstName": "Voice",
                        "phoneNumber": "+1-555123456"
                    },
                    "hiragana": {
                        "lastName": "Portal",
                        "firstName": "Voice"
                    },
                    "phoneNumber": "+1-555123456",
                    "extension": "3456",
                    "password": "#45aaTy4",
                    "department": "Dept #1",
                    "language": "English",
                    "timeZone": "America\/New_York",
                    "alias": [
                        "voiceportal@example.com"
                    ],
                    "publicUserIdentity": "VoicePortalId"
                },
                "isActive": true,
                "enableExtendedScope": true,
                "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin": false,
                "useVoicePortalWizard": true,
                "externalRouting": {
                    "scope": "Group",
                    "useExternal": true,
                    "address": "external@example.com"
                },
                "homeZone": "Home Zone #1",
                "networkClassOfService": "NCoS #1"
            }

    + Schema

            {
                "title": "BroadWorks Entity - Modify Group Voice Portal service settings request body schema",
                "type": "object",
                "properties": {
                    "profile": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "callingLineId": {
                                "type": "object",
                                "properties": {
                                    "lastName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "phoneNumber": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^[\\d\\-]+$"
                                    }
                                }
                            },
                            "hiragana": {
                                "type": "object",
                                "properties": {
                                    "lastName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    }
                                }
                            },
                            "phoneNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            "extension": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 20,
                                "pattern": "^[\\d\\-]+$"
                            },
                            "password": {
                                "type": "string"
                            },
                            "department": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    }
                                }
                            },
                            "language": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40
                            },
                            "timeZone": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 127
                            },
                            "timeZoneDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 127
                            },
                            "alias": {
                                "type": [
                                    "string",
                                    "array"
                                ]
                            },
                            "publicUserIdentity": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "enableExtendedScope": {
                        "type": "boolean"
                    },
                    "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin": {
                        "type": "boolean"
                    },
                    "useVoicePortalWizard": {
                        "type": "boolean"
                    },
                    "externalRouting": {
                        "type": "object",
                        "properties": {
                            "scope": {
                                "enum": [
                                    "Group",
                                    "System"
                                ]
                            },
                            "useExternal": {
                                "type": "boolean"
                            },
                            "address": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        }
                    },
                    "homeZoneName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "networkClassOfService": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Entity - Group Phone Numbers

Network Element: BroadWorks (initially only supports XSP or AS resources)

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers{?mode}
### POST
Assign a single phone number (TN) to a Group.<br />
Process name: Assign BroadWorks Group TN<br />
Process-backed: Yes<br />
Rollback-enabled: Yes<br />
Cluster resolution method: Group
##URI Query Parameters
<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>mode</td>
            <td style="text-align: center">no</td>
            <td>create-only</td>
            <td>Controls execution mode as described in **ref general documentation.<br />
            Allowed values: [ "prevalidate-only", "prevalidate-and-create", "create-only" ].<br />
            <b>NOTE: at this time this property is ignored.</b>
            </td>
        </tr>
    </tbody>
</table>

+ Request (application/json)
    + Body

            {
                "phoneNumber": "+1-2005553001"
            }

    + Schema

            {
                "title": "BroadWorks Entity - Assign Group Phone Number request body schema",
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23,
                        "pattern": "^\\+\\d+-\\d+$"
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/broadworks/serviceProviders/Example%20Com/groups/Example%20Com%20-%20North/phone-numbers/%2B1-2005553001

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/phone-numbers\/%2B1-2005553001"
                    }
                },
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "phoneNumber": "+1-2005553001",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/{+phoneNumber}
### HEAD
Check existence of an individual phone number in a Group.
Process name : Check BroadWorks Group TN (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Rollback-enabled: No<br />
Cluster resolution method: Group

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Unassign a phone number from a Group.
Process name: Delete BroadWorks Group TN (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Rollback-enabled: No<br />
Cluster resolution method: Group

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/activate
### POST
Activates one or more phone numbers and/or ranges of phone numbers in BroadWorks
Process Name : Activate TNs (BroadWorks Entity)<br />
Process-backed: Yes<br />
Rollback-enabled: No<br />
Cluster Resolution Method: Group

+ Request (application/json)
    + Body

            {
                "phoneNumbers": [
                    "+1-5553070900",
                    "+1-5553070910",
                    {
                        "start": "+1-5553071000",
                        "end": "+1-5553071009"
                    },
                    "+1-5553070876",
                    {
                        "start": "+1-5553072000",
                        "end": "+1-5553072003"
                    }
                ]
            }

    + Schema

            {
                "title": "BroadWorks Entity - Activate Group Phone Number request body schema",
                "type": "object",
                "properties": {
                    "phoneNumbers": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "id": "E.164 DN",
                                    "type": "string",
                                    "description": "A formatted TN.",
                                    "pattern": "^\\+\\d+-\\d+$",
                                    "minLength": 1,
                                    "maxLength": 23,
                                    "required": false
                                },
                                {
                                    "id": "TN Range",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "start": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 23,
                                            "pattern": "^\\+\\d+-\\d+$",
                                            "required": true
                                        },
                                        "end": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 23,
                                            "pattern": "^\\+\\d+-\\d+$",
                                            "required": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/deactivate
### POST
Deactivates one or more phone numbers and/or ranges of phone numbers in BroadWorks.
Process Name: Deactivate TNs (BroadWorks Entity)<br />
Process-backed: Yes<br />
Rollback-enabled: No<br />
Cluster Resolution Method: Group

+ Request (application/json)
    + Body

            {
                "phoneNumbers": [
                    "+1-5553070900",
                    "+1-5553070910",
                    {
                        "start": "+1-5553071000",
                        "end": "+1-5553071009"
                    },
                    "+1-5553070876",
                    {
                        "start": "+1-5553072000",
                        "end": "+1-5553072003"
                    }
                ]
            }

    + Schema

            {
                "title": "BroadWorks Entity - Deactivate Group Phone Number request body schema",
                "type": "object",
                "properties": {
                    "phoneNumbers": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "id": "E.164 DN",
                                    "type": "string",
                                    "description": "A formatted TN.",
                                    "pattern": "^\\+\\d+-\\d+$",
                                    "minLength": 1,
                                    "maxLength": 23,
                                    "required": false
                                },
                                {
                                    "id": "TN Range",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "start": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 23,
                                            "pattern": "^\\+\\d+-\\d+$",
                                            "required": true
                                        },
                                        "end": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 23,
                                            "pattern": "^\\+\\d+-\\d+$",
                                            "required": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Entity - Group Trunk Groups

Network Element: BroadWorks (initially only supports XSP or AS resources)

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups{?mode,auto-increase}
### POST
Creates a new BroadWorks Group Trunk Group<br />
Process name: Create BroadWorks Group Trunk Group (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Rollback-enabled: Yes<br />
Cluster resolution method: Group
##Request URI Query Parameters
<table border="1">
    <thead>
        <th>Parameter</th>
        <th>Required</th>
        <th>Default</th>
        <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>mode</td>
            <td>no</td>
            <td>create-only</td>
            <td>
                Allowed values: [ "prevalidate-only", "prevalidate-and-create", "create-only" ].<br />
                Initially, тАЬmode" will always be ignored, and the behavior will always be тАЬcreate-only".
             </td>
        </tr>
        <tr>
            <td>auto-increase</td>
            <td>no</td>
            <td>always</td>
            <td>
                The following table describes behavior depending on values for this parameter.
                <table border="1">
                    <thead>
                        <th>Value</th>
                        <th>Action</th>
                    </thead>
                    <tbody>
                        <tr>
                            <td>always</td>
                            <td>Always apply the auto-increase logic described below.</td>
                        </tr>
                        <tr>
                            <td>never</td>
                            <td>Never apply the auto-increase logic described below (simply return success).</td>
                        </tr>
                        <tr>
                            <td>enterprise-only</td>
                            <td>Apply the auto-increase logic described below only when serviceProviderId identifies an Enterprise.
                            If serviceProviderId identifies a Service Provider, do not apply the auto-increase logic described below (simply return success).
                            </td>
                        </tr>
                    </tbody>
                </table>
                The auto increase logic to suffice Trunk Call Capacity for a new Group Trunk Group is as follows:<br />
                1. For maxActiveCalls all we need to do:<br />
                &nbsp;&nbsp;&nbsp;&nbsp;a. Check that the value requested in the request (capacityManagement.maxActiveCalls.total) is equal or smaller than the value on the Group (maxActiveCalls).<br />
                &nbsp;&nbsp;&nbsp;&nbsp;b. If we need to increase the Group then check to see if we need to increase for Service Provider as well.<br />
                &nbsp;&nbsp;&nbsp;&nbsp;c. Group Setting (maxAvailableActiveCalls.quantity) holds the value from the Enterprise. If this value is smaller than the value requested by Trunk Group then set the same value as set on the Group.<br />
                2. For burstActiveCalls we need to:<br />
                &nbsp;&nbsp;&nbsp;&nbsp;a. If Group setting is not unlimited then get the burstActiveCalls value from all trunk group's in the group ( will refer to value as burstingMaxActiveCallsAllocatedToTrunkGroups).<br />
                &nbsp;&nbsp;&nbsp;&nbsp;b. Get the burstActiveCalls available on the Group (will refer to values as availableBurstMaxActiveCallsInGroup). This is current Group Call Capacity setting (burstingMaxActiveCalls.quantity) minus the burst Active Calls used by Trunk Groups (burstingMaxActiveCallsAllocatedToTrunkGroups).<br />
                &nbsp;&nbsp;&nbsp;&nbsp;c. Then if the available burstActiveCalls value on the Group (availableBurstMaxActiveCallsInGroup) is smaller then the requested value then increase the Group with the difference of the 2 quantities.<br />
                &nbsp;&nbsp;&nbsp;&nbsp;d. Group Setting (burstingMaxAvailableActiveCalls) holds the available quantity to increase to the Group. If it is unlimited then no need to increase Service Provider value.<br />
                &nbsp;&nbsp;&nbsp;&nbsp;e. If available quantity is fixed (burstingMaxAvailableActiveCalls.quantity) then:
                calculate the available amount on the Service Provider which is [burstingMaxAvailableActiveCalls.quantity] - [burstingMaxActiveCalls.quantity] (will refer to value as availableBurstMaxActiveCallsInServiceProvider)<br />
                &nbsp;&nbsp;&nbsp;&nbsp;f. If the value which is being increased to the Group is bigger than what is available from the SP\Ent then increase the SP\Ent burstMaxActive calls with that difference [quantity increased to Group] - [quantity available in SP].
            </td>
        </tr>
    </tbody>
</table>

+ Request (application/json)
    + Body

            {
                "trunkGroupName": "ExampleCom Trunk 3001",
                "department": {
                    "name": "Sales",
                    "level": "Group"
                },
                "accessDevice": {
                    "level": "Group",
                    "deviceName": "ExampleCom_AD3001"
                },
                "capacityManagement": {
                    "maxActiveCalls": {
                        "total": 10,
                        "incoming": 4,
                        "outgoing": 3
                    },
                    "burstingMaxActiveCalls": {
                        "enabled": false,
                        "total": 12,
                        "incoming": 7,
                        "outgoing": 9
                    },
                    "incomingCapacityExceeded": {
                        "action": "Forward",
                        "forwardAddress": "4165551212",
                        "rerouteTrunkGroup": {
                            "groupId": "Example Com - North",
                            "trunkGroupName": "ExampleCom Trunk 1212"
                        },
                        "initialCalls": 2,
                        "offsetCalls": 3
                    }
                },
                "unreachableDestination": {
                    "timeout": 10,
                    "action": "Reroute",
                    "forwardAddress": "4165551212",
                    "rerouteTrunkGroup": {
                        "groupId": "Example Com - North",
                        "trunkGroupName": "ExampleCom Trunk 1212"
                    }
                },
                "authentication": {
                    "enabled": true,
                    "username": "2005553001@sip.example.com",
                    "password": "230A4u$#%f"
                },
                "identity": {
                    "trunkGroupIdentity": {
                        "identity": "2005553001@sip.example.com",
                        "allowTerminationToTrunkGroupIdentity": false,
                        "includeTrunkGroupIdentity": false,
                        "includeTrunkGroupIdentityForNetworkCalls": false
                    },
                    "otgDtgIdentity": {
                        "identity": "2005553001",
                        "allowTerminationToDtgIdentity": false,
                        "includeDtgIdentity": false,
                        "includeOtgIdentityForNetworkCalls": false
                    },
                    "enableNetworkAddressIdentity": false
                },
                "allowUnscreenedCalls": true,
                "allowUnscreenedEmergencyCalls": false,
                "pilotUserCallingLineIdentityPolicy": "No Calls",
                "pilotUserChargeNumberPolicy": "No Calls",
                "callForwardingAlways": {
                    "action": "Forward",
                    "forwardAddress": "4165551212",
                    "rerouteTrunkGroup": {
                        "groupId": "Example Com - North",
                        "trunkGroupName": "ExampleCom Trunk 1212"
                    }
                },
                "peeringDomain": {
                    "domainName": "two.example.com",
                    "routeToPeeringDomain": false
                },
                "trunkGroupPrefix": {
                    "enabled": false,
                    "prefix": "1234"
                },
                "advancedReroute": {
                    "enabled": false,
                    "sendContinuousOptionsMessage": false,
                    "continuousOptionsSendingInterval": 30,
                    "failureOptionsSendingInterval": 10,
                    "failureThresholdCounter": 1,
                    "successThresholdCounter": 1,
                    "inviteFailureThresholdCounter": 1,
                    "inviteFailureThresholdWindow": 30
                },
                "pilotUserCallingLineAssertedIdentityPolicy": {
                    "useTrunkGroupCallingLineAssertedIdentityPolicy": false,
                    "callingLineAssertedIdentityPolicy": "Unscreened Originating Calls"
                }
            }

    + Schema

            {
                "title": "BroadWorks Entity - Create Group Trunk Group request body schema",
                "type": "object",
                "properties": {
                    "trunkGroupName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "department": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "accessDevice": {
                        "type": "object",
                        "properties": {
                            "level": {
                                "enum": [
                                    "System",
                                    "Service Provider",
                                    "Group"
                                ],
                                "required": true
                            },
                            "deviceName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40,
                                "required": true
                            }
                        }
                    },
                    "capacityManagement": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "maxActiveCalls": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "total": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "required": true
                                    },
                                    "incoming": {
                                        "anyOf": [
                                            {
                                                "description": "Schema for BroadWorks version < R21",
                                                "type": "integer",
                                                "minimum": 1,
                                                "maximum": 999999
                                            },
                                            {
                                                "description": "Schema for BroadWorks version R21",
                                                "type": "integer",
                                                "minimum": 0,
                                                "maximum": 999999
                                            }
                                        ]
                                    },
                                    "outgoing": {
                                        "anyOf": [
                                            {
                                                "description": "Schema for BroadWorks version < R21",
                                                "type": "integer",
                                                "minimum": 1,
                                                "maximum": 999999
                                            },
                                            {
                                                "description": "Schema for BroadWorks version R21",
                                                "type": "integer",
                                                "minimum": 0,
                                                "maximum": 999999
                                            }
                                        ]
                                    }
                                }
                            },
                            "burstingMaxActiveCalls": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "total": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 999999
                                    },
                                    "incoming": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 999999
                                    },
                                    "outgoing": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 999999
                                    }
                                }
                            },
                            "incomingCapacityExceeded": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "action": {
                                        "enum": [
                                            "Forward",
                                            "Reroute"
                                        ]
                                    },
                                    "forwardAddress": {
                                        "anyOf": [
                                            {
                                                "description": "E.164 TN",
                                                "type": [
                                                    "string",
                                                    "null"
                                                ],
                                                "minLength": 1,
                                                "maxLength": 23,
                                                "pattern": "^\\+\\d+-\\d+$"
                                            },
                                            {
                                                "description": "non-E.164 TN",
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 23,
                                                "pattern": "^[\\d\\-]+$"
                                            },
                                            {
                                                "description": "SIP URI",
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 161,
                                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                            }
                                        ]
                                    },
                                    "rerouteTrunkGroup": {
                                        "type": "object",
                                        "properties": {
                                            "serviceProviderId": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 30,
                                                "required": true
                                            },
                                            "groupId": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 30,
                                                "required": true
                                            },
                                            "name": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 30,
                                                "required": true
                                            }
                                        }
                                    },
                                    "initialCalls": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "required": true
                                    },
                                    "offsetCalls": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "unreachableDestination": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "timeout": {
                                "required": true,
                                "anyOf": [
                                    {
                                        "description": "Schema for BroadWorks version < R21",
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 15
                                    },
                                    {
                                        "description": "Schema for BroadWorks version R21",
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 255
                                    }
                                ]
                            },
                            "action": {
                                "enum": [
                                    "Forward",
                                    "Reroute"
                                ]
                            },
                            "forwardAddress": {
                                "anyOf": [
                                    {
                                        "description": "E.164 TN",
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^\\+\\d+-\\d+$"
                                    },
                                    {
                                        "description": "non-E.164 TN",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^[\\d\\-]+$"
                                    },
                                    {
                                        "description": "SIP URI",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 161,
                                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                    }
                                ]
                            },
                            "rerouteTrunkGroup": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "authentication": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "required": true
                            },
                            "username": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "password": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 60
                            }
                        }
                    },
                    "identity": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "enableNetworkAddressIdentity": {
                                "type": "boolean"
                            },
                            "trunkGroupIdentity": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "identity": {
                                        "description": "SIP URI",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 161,
                                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                    },
                                    "allowTerminationToTrunkGroupIdentity": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "includeTrunkGroupIdentity": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "includeTrunkGroupIdentityForNetworkCalls": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            },
                            "otgDtgIdentity": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "identity": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 80
                                    },
                                    "allowTerminationToDtgIdentity": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "includeDtgIdentity": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "includeOtgIdentityForNetworkCalls": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "callForwardingAlways": {
                        "type": "object",
                        "properties": {
                            "action": {
                                "enum": [
                                    "Forward",
                                    "Reroute"
                                ]
                            },
                            "forwardAddress": {
                                "anyOf": [
                                    {
                                        "description": "E.164 TN",
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^\\+\\d+-\\d+$"
                                    },
                                    {
                                        "description": "non-E.164 TN",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^[\\d\\-]+$"
                                    },
                                    {
                                        "description": "SIP URI",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 161,
                                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                    }
                                ]
                            },
                            "rerouteTrunkGroup": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "peeringDomain": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "domainName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "routeToPeeringDomain": {
                                "type": "boolean",
                                "required": true
                            }
                        }
                    },
                    "trunkGroupPrefix": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "required": true
                            },
                            "prefix": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 15
                            }
                        }
                    },
                    "advancedReroute": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "required": true
                            },
                            "sendContinuousOptionsMessage": {
                                "type": "boolean",
                                "required": true
                            },
                            "continuousOptionsSendingInterval": {
                                "type": "integer",
                                "minimum": 30,
                                "maximum": 86400,
                                "required": true
                            },
                            "failureOptionsSendingInterval": {
                                "type": "integer",
                                "minimum": 10,
                                "maximum": 86400,
                                "required": true
                            },
                            "failureThresholdCounter": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 60,
                                "required": true
                            },
                            "successThresholdCounter": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 60,
                                "required": true
                            },
                            "inviteFailureThresholdCounter": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 60,
                                "required": true
                            },
                            "inviteFailureThresholdWindow": {
                                "type": "integer",
                                "minimum": 30,
                                "maximum": 240,
                                "required": true
                            }
                        }
                    },
                    "pilotUserCallingLineAssertedIdentityPolicy": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "useTrunkGroupCallingLineAssertedIdentityPolicy": {
                                "type": "boolean",
                                "required": true
                            },
                            "callingLineAssertedIdentityPolicy": {
                                "enum": [
                                    "All Originating Calls",
                                    "Unscreened Originating Calls"
                                ],
                                "required": true
                            }
                        }
                    },
                    "allowUnscreenedCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "allowUnscreenedEmergencyCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "pilotUserCallingLineIdentityPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ],
                        "required": true
                    },
                    "pilotUserChargeNumberPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ],
                        "required": true
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/broadworks/service-providers/Example%20Com/groups/Example%20Com%20-%20North/trunk-groups/ExampleCom%20Trunk%203001

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/trunk-groups\/ExampleCom%20Trunk%203001"
                    }
                },
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "trunkGroupName": "ExampleCom Trunk 3001",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "BroadWorks Entity - Create Group Trunk Group response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "trunkGroupName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    }
                }
            }

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups/{+trunkGroupName}
### GET
Retrieve the profile settings of a BroadWorks Group Trunk Group<br />
Process name: Retrieve BroadWorks Group Trunk Group (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Cluster resolution method: Group

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/trunk-groups\/ExampleCom%20Trunk%203001"
                    }
                },
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "trunkGroupName": "ExampleCom Trunk 3001",
                "pilotUserId": "4165552200@example.com",
                "accessDevice": {
                    "level": "Group",
                    "deviceName": "ExampleCom_AD3001"
                },
                "department": "Sales",
                "capacityManagement": {
                    "maxActiveCalls": {
                        "total": 10,
                        "incoming": 4,
                        "outgoing": 3
                    },
                    "burstingMaxActiveCalls": {
                        "enabled": false,
                        "total": 12,
                        "incoming": 7,
                        "outgoing": 9
                    },
                    "incomingCapacityExceeded": {
                        "action": "Forward",
                        "forwardAddress": "4165551212",
                        "rerouteTrunkGroup": {
                            "groupId": "Example Com - North",
                            "trunkGroupName": "ExampleCom Trunk 1212"
                        },
                        "initialCalls": 2,
                        "offsetCalls": 3
                    }
                },
                "unreachableDestination": {
                    "timeout": 10,
                    "action": "Reroute",
                    "forwardAddress": "4165551212",
                    "rerouteTrunkGroup": {
                        "groupId": "Example Com - North",
                        "trunkGroupName": "ExampleCom Trunk 1212"
                    }
                },
                "authentication": {
                    "enabled": true,
                    "username": "2005553001@sip.example.com"
                },
                "identity": {
                    "trunkGroupIdentity": {
                        "identity": "2005553001@sip.example.com",
                        "allowTerminationToTrunkGroupIdentity": false,
                        "includeTrunkGroupIdentity": false,
                        "includeTrunkGroupIdentityForNetworkCalls": false
                    },
                    "otgDtgIdentity": {
                        "identity": "2005553001",
                        "allowTerminationToDtgIdentity": false,
                        "includeDtgIdentity": false,
                        "includeOtgIdentityForNetworkCalls": false
                    },
                    "enableNetworkAddressIdentity": false
                },
                "allowUnscreenedCalls": true,
                "allowUnscreenedEmergencyCalls": false,
                "pilotUserCallingLineIdentityPolicy": "No Calls",
                "pilotUserChargeNumberPolicy": "No Calls",
                "callForwardingAlways": {
                    "action": "Forward",
                    "forwardAddress": "4165551212",
                    "rerouteTrunkGroup": {
                        "groupId": "Example Com - North",
                        "trunkGroupName": "ExampleCom Trunk 1212"
                    }
                },
                "peeringDomain": {
                    "domainName": "two.example.com",
                    "routeToPeeringDomain": false
                },
                "trunkGroupPrefix": {
                    "enabled": false,
                    "prefix": "1234"
                },
                "advancedReroute": {
                    "enabled": false,
                    "sendContinuousOptionsMessage": false,
                    "continuousOptionsSendingInterval": 30,
                    "failureOptionsSendingInterval": 10,
                    "failureThresholdCounter": 1,
                    "successThresholdCounter": 1,
                    "inviteFailureThresholdCounter": 1,
                    "inviteFailureThresholdWindow": 30
                },
                "pilotUserCallingLineAssertedIdentityPolicy": {
                    "useTrunkGroupCallingLineAssertedIdentityPolicy": false,
                    "callingLineAssertedIdentityPolicy": "Unscreened Originating Calls"
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "BroadWorks Entity - Retrieve Group Trunk Group response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "trunkGroupName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "pilotUserId": {
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$"
                    },
                    "department": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "accessDevice": {
                        "type": "object",
                        "properties": {
                            "level": {
                                "enum": [
                                    "System",
                                    "Service Provider",
                                    "Group"
                                ],
                                "required": true
                            },
                            "deviceName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40,
                                "required": true
                            }
                        }
                    },
                    "capacityManagement": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "maxActiveCalls": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "total": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "required": true
                                    },
                                    "incoming": {
                                        "anyOf": [
                                            {
                                                "description": "Schema for BroadWorks version < R21",
                                                "type": "integer",
                                                "minimum": 1,
                                                "maximum": 999999
                                            },
                                            {
                                                "description": "Schema for BroadWorks version R21",
                                                "type": "integer",
                                                "minimum": 0,
                                                "maximum": 999999
                                            }
                                        ]
                                    },
                                    "outgoing": {
                                        "anyOf": [
                                            {
                                                "description": "Schema for BroadWorks version < R21",
                                                "type": "integer",
                                                "minimum": 1,
                                                "maximum": 999999
                                            },
                                            {
                                                "description": "Schema for BroadWorks version R21",
                                                "type": "integer",
                                                "minimum": 0,
                                                "maximum": 999999
                                            }
                                        ]
                                    }
                                }
                            },
                            "burstingMaxActiveCalls": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "total": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 999999
                                    },
                                    "incoming": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 999999
                                    },
                                    "outgoing": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 999999
                                    }
                                }
                            },
                            "incomingCapacityExceeded": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "action": {
                                        "enum": [
                                            "Forward",
                                            "Reroute"
                                        ]
                                    },
                                    "forwardAddress": {
                                        "anyOf": [
                                            {
                                                "description": "E.164 TN",
                                                "type": [
                                                    "string",
                                                    "null"
                                                ],
                                                "minLength": 1,
                                                "maxLength": 23,
                                                "pattern": "^\\+\\d+-\\d+$"
                                            },
                                            {
                                                "description": "non-E.164 TN",
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 23,
                                                "pattern": "^[\\d\\-]+$"
                                            },
                                            {
                                                "description": "SIP URI",
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 161,
                                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                            }
                                        ]
                                    },
                                    "rerouteTrunkGroup": {
                                        "type": "object",
                                        "properties": {
                                            "serviceProviderId": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 30,
                                                "required": true
                                            },
                                            "groupId": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 30,
                                                "required": true
                                            },
                                            "name": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 30,
                                                "required": true
                                            }
                                        }
                                    },
                                    "initialCalls": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "required": true
                                    },
                                    "offsetCalls": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "unreachableDestination": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "timeout": {
                                "required": true,
                                "anyOf": [
                                    {
                                        "description": "Schema for BroadWorks version < R21",
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 15
                                    },
                                    {
                                        "description": "Schema for BroadWorks version R21",
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 255
                                    }
                                ]
                            },
                            "action": {
                                "enum": [
                                    "Forward",
                                    "Reroute"
                                ]
                            },
                            "forwardAddress": {
                                "anyOf": [
                                    {
                                        "description": "E.164 TN",
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^\\+\\d+-\\d+$"
                                    },
                                    {
                                        "description": "non-E.164 TN",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^[\\d\\-]+$"
                                    },
                                    {
                                        "description": "SIP URI",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 161,
                                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                    }
                                ]
                            },
                            "rerouteTrunkGroup": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "authentication": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "required": true
                            },
                            "username": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            }
                        }
                    },
                    "identity": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "enableNetworkAddressIdentity": {
                                "type": "boolean"
                            },
                            "trunkGroupIdentity": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "identity": {
                                        "description": "SIP URI",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 161,
                                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                    },
                                    "allowTerminationToTrunkGroupIdentity": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "includeTrunkGroupIdentity": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "includeTrunkGroupIdentityForNetworkCalls": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            },
                            "otgDtgIdentity": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "identity": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 80
                                    },
                                    "allowTerminationToDtgIdentity": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "includeDtgIdentity": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "includeOtgIdentityForNetworkCalls": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "callForwardingAlways": {
                        "type": "object",
                        "properties": {
                            "action": {
                                "enum": [
                                    "Forward",
                                    "Reroute"
                                ]
                            },
                            "forwardAddress": {
                                "anyOf": [
                                    {
                                        "description": "E.164 TN",
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^\\+\\d+-\\d+$"
                                    },
                                    {
                                        "description": "non-E.164 TN",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^[\\d\\-]+$"
                                    },
                                    {
                                        "description": "SIP URI",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 161,
                                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                    }
                                ]
                            },
                            "rerouteTrunkGroup": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "peeringDomain": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "domainName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "routeToPeeringDomain": {
                                "type": "boolean",
                                "required": true
                            }
                        }
                    },
                    "trunkGroupPrefix": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "required": true
                            },
                            "prefix": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 15
                            }
                        }
                    },
                    "advancedReroute": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "required": true
                            },
                            "sendContinuousOptionsMessage": {
                                "type": "boolean",
                                "required": true
                            },
                            "continuousOptionsSendingInterval": {
                                "type": "integer",
                                "minimum": 30,
                                "maximum": 86400,
                                "required": true
                            },
                            "failureOptionsSendingInterval": {
                                "type": "integer",
                                "minimum": 10,
                                "maximum": 86400,
                                "required": true
                            },
                            "failureThresholdCounter": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 60,
                                "required": true
                            },
                            "successThresholdCounter": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 60,
                                "required": true
                            },
                            "inviteFailureThresholdCounter": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 60,
                                "required": true
                            },
                            "inviteFailureThresholdWindow": {
                                "type": "integer",
                                "minimum": 30,
                                "maximum": 240,
                                "required": true
                            }
                        }
                    },
                    "pilotUserCallingLineAssertedIdentityPolicy": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "useTrunkGroupCallingLineAssertedIdentityPolicy": {
                                "type": "boolean",
                                "required": true
                            },
                            "callingLineAssertedIdentityPolicy": {
                                "enum": [
                                    "All Originating Calls",
                                    "Unscreened Originating Calls"
                                ],
                                "required": true
                            }
                        }
                    },
                    "allowUnscreenedCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "allowUnscreenedEmergencyCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "pilotUserCallingLineIdentityPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ],
                        "required": true
                    },
                    "pilotUserChargeNumberPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ],
                        "required": true
                    }
                }
            }

### PUT
Update the profile settings of a BroadWorks Group Trunk Group<br />
Process name: Update BroadWorks Group Trunk Group (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Cluster resolution method: Group

+ Request (application/json)
    + Body

            {
                "pilotUserId": "4165552200@example.com",
                "accessDevice": {
                    "level": "Group",
                    "deviceName": "ExampleCom_AD3001"
                },
                "department": "Sales",
                "capacityManagement": {
                    "maxActiveCalls": {
                        "total": 10,
                        "incoming": 4,
                        "outgoing": 3
                    },
                    "burstingMaxActiveCalls": {
                        "enabled": false,
                        "total": 12,
                        "incoming": 7,
                        "outgoing": 9
                    },
                    "incomingCapacityExceeded": {
                        "action": "Forward",
                        "forwardAddress": "4165551212",
                        "rerouteTrunkGroup": {
                            "groupId": "Example Com - North",
                            "trunkGroupName": "ExampleCom Trunk 1212"
                        },
                        "initialCalls": 2,
                        "offsetCalls": 3
                    }
                },
                "unreachableDestination": {
                    "timeout": 10,
                    "action": "Reroute",
                    "forwardAddress": "4165551212",
                    "rerouteTrunkGroup": {
                        "groupId": "Example Com - North",
                        "trunkGroupName": "ExampleCom Trunk 1212"
                    }
                },
                "authentication": {
                    "enabled": true,
                    "username": "2005553001@sip.example.com",
                    "password": "230A4u$#%f"
                },
                "identity": {
                    "trunkGroupIdentity": {
                        "identity": "2005553001@sip.example.com",
                        "allowTerminationToTrunkGroupIdentity": false,
                        "includeTrunkGroupIdentity": false,
                        "includeTrunkGroupIdentityForNetworkCalls": false
                    },
                    "otgDtgIdentity": {
                        "identity": "2005553001",
                        "allowTerminationToDtgIdentity": false,
                        "includeDtgIdentity": false,
                        "includeOtgIdentityForNetworkCalls": false
                    },
                    "enableNetworkAddressIdentity": false
                },
                "allowUnscreenedCalls": true,
                "allowUnscreenedEmergencyCalls": false,
                "pilotUserCallingLineIdentityPolicy": "No Calls",
                "pilotUserChargeNumberPolicy": "No Calls",
                "callForwardingAlways": {
                    "action": "Forward",
                    "forwardAddress": "4165551212",
                    "rerouteTrunkGroup": {
                        "groupId": "Example Com - North",
                        "trunkGroupName": "ExampleCom Trunk 1212"
                    }
                },
                "peeringDomain": {
                    "domainName": "two.example.com",
                    "routeToPeeringDomain": false
                },
                "trunkGroupPrefix": {
                    "enabled": false,
                    "prefix": "1234"
                },
                "advancedReroute": {
                    "enabled": false,
                    "sendContinuousOptionsMessage": false,
                    "continuousOptionsSendingInterval": 30,
                    "failureOptionsSendingInterval": 10,
                    "failureThresholdCounter": 1,
                    "successThresholdCounter": 1,
                    "inviteFailureThresholdCounter": 1,
                    "inviteFailureThresholdWindow": 30
                },
                "pilotUserCallingLineAssertedIdentityPolicy": {
                    "useTrunkGroupCallingLineAssertedIdentityPolicy": false,
                    "callingLineAssertedIdentityPolicy": "Unscreened Originating Calls"
                }
            }

    + Schema

            {
                "title": "BroadWorks Entity - Modify Group Trunk Group response body schema",
                "type": "object",
                "properties": {
                    "pilotUserId": {
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$"
                    },
                    "department": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "accessDevice": {
                        "type": "object",
                        "properties": {
                            "level": {
                                "enum": [
                                    "System",
                                    "Service Provider",
                                    "Group"
                                ],
                                "required": true
                            },
                            "deviceName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40,
                                "required": true
                            }
                        }
                    },
                    "capacityManagement": {
                        "type": "object",
                        "properties": {
                            "maxActiveCalls": {
                                "type": "object",
                                "properties": {
                                    "total": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "incoming": {
                                        "anyOf": [
                                            {
                                                "description": "Schema for BroadWorks version < R21",
                                                "type": "integer",
                                                "minimum": 1,
                                                "maximum": 999999
                                            },
                                            {
                                                "description": "Schema for BroadWorks version R21",
                                                "type": "integer",
                                                "minimum": 0,
                                                "maximum": 999999
                                            }
                                        ]
                                    },
                                    "outgoing": {
                                        "anyOf": [
                                            {
                                                "description": "Schema for BroadWorks version < R21",
                                                "type": "integer",
                                                "minimum": 1,
                                                "maximum": 999999
                                            },
                                            {
                                                "description": "Schema for BroadWorks version R21",
                                                "type": "integer",
                                                "minimum": 0,
                                                "maximum": 999999
                                            }
                                        ]
                                    }
                                }
                            },
                            "burstingMaxActiveCalls": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 999999
                                    },
                                    "incoming": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 999999
                                    },
                                    "outgoing": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 999999
                                    }
                                }
                            },
                            "incomingCapacityExceeded": {
                                "type": "object",
                                "properties": {
                                    "action": {
                                        "enum": [
                                            "Forward",
                                            "Reroute"
                                        ]
                                    },
                                    "forwardAddress": {
                                        "anyOf": [
                                            {
                                                "description": "E.164 TN",
                                                "type": [
                                                    "string",
                                                    "null"
                                                ],
                                                "minLength": 1,
                                                "maxLength": 23,
                                                "pattern": "^\\+\\d+-\\d+$"
                                            },
                                            {
                                                "description": "non-E.164 TN",
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 23,
                                                "pattern": "^[\\d\\-]+$"
                                            },
                                            {
                                                "description": "SIP URI",
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 161,
                                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                            }
                                        ]
                                    },
                                    "rerouteTrunkGroup": {
                                        "type": "object",
                                        "properties": {
                                            "serviceProviderId": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 30,
                                                "required": true
                                            },
                                            "groupId": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 30,
                                                "required": true
                                            },
                                            "name": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 30,
                                                "required": true
                                            }
                                        }
                                    },
                                    "initialCalls": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "offsetCalls": {
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                }
                            }
                        }
                    },
                    "unreachableDestination": {
                        "type": "object",
                        "properties": {
                            "timeout": {
                                "anyOf": [
                                    {
                                        "description": "Schema for BroadWorks version < R21",
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 15
                                    },
                                    {
                                        "description": "Schema for BroadWorks version R21",
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 255
                                    }
                                ]
                            },
                            "action": {
                                "enum": [
                                    "Forward",
                                    "Reroute"
                                ]
                            },
                            "forwardAddress": {
                                "anyOf": [
                                    {
                                        "description": "E.164 TN",
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^\\+\\d+-\\d+$"
                                    },
                                    {
                                        "description": "non-E.164 TN",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^[\\d\\-]+$"
                                    },
                                    {
                                        "description": "SIP URI",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 161,
                                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                    }
                                ]
                            },
                            "rerouteTrunkGroup": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "authentication": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "username": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "password": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 60
                            }
                        }
                    },
                    "identity": {
                        "type": "object",
                        "properties": {
                            "enableNetworkAddressIdentity": {
                                "type": "boolean"
                            },
                            "trunkGroupIdentity": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "identity": {
                                        "description": "SIP URI",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 161,
                                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                    },
                                    "allowTerminationToTrunkGroupIdentity": {
                                        "type": "boolean"
                                    },
                                    "includeTrunkGroupIdentity": {
                                        "type": "boolean"
                                    },
                                    "includeTrunkGroupIdentityForNetworkCalls": {
                                        "type": "boolean"
                                    }
                                }
                            },
                            "otgDtgIdentity": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "identity": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 80
                                    },
                                    "allowTerminationToDtgIdentity": {
                                        "type": "boolean"
                                    },
                                    "includeDtgIdentity": {
                                        "type": "boolean"
                                    },
                                    "includeOtgIdentityForNetworkCalls": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "callForwardingAlways": {
                        "type": "object",
                        "properties": {
                            "action": {
                                "enum": [
                                    "Forward",
                                    "Reroute"
                                ]
                            },
                            "forwardAddress": {
                                "anyOf": [
                                    {
                                        "description": "E.164 TN",
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^\\+\\d+-\\d+$"
                                    },
                                    {
                                        "description": "non-E.164 TN",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 23,
                                        "pattern": "^[\\d\\-]+$"
                                    },
                                    {
                                        "description": "SIP URI",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 161,
                                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                                    }
                                ]
                            },
                            "rerouteTrunkGroup": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "peeringDomain": {
                        "type": "object",
                        "properties": {
                            "domainName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "routeToPeeringDomain": {
                                "type": "boolean"
                            }
                        }
                    },
                    "trunkGroupPrefix": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "prefix": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 15
                            }
                        }
                    },
                    "advancedReroute": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "sendContinuousOptionsMessage": {
                                "type": "boolean"
                            },
                            "continuousOptionsSendingInterval": {
                                "type": "integer",
                                "minimum": 30,
                                "maximum": 86400
                            },
                            "failureOptionsSendingInterval": {
                                "type": "integer",
                                "minimum": 10,
                                "maximum": 86400
                            },
                            "failureThresholdCounter": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 60
                            },
                            "successThresholdCounter": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 60
                            },
                            "inviteFailureThresholdCounter": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 60
                            },
                            "inviteFailureThresholdWindow": {
                                "type": "integer",
                                "minimum": 30,
                                "maximum": 240
                            }
                        }
                    },
                    "pilotUserCallingLineAssertedIdentityPolicy": {
                        "type": "object",
                        "properties": {
                            "useTrunkGroupCallingLineAssertedIdentityPolicy": {
                                "type": "boolean"
                            },
                            "callingLineAssertedIdentityPolicy": {
                                "enum": [
                                    "All Originating Calls",
                                    "Unscreened Originating Calls"
                                ]
                            }
                        }
                    },
                    "allowUnscreenedCalls": {
                        "type": "boolean"
                    },
                    "allowUnscreenedEmergencyCalls": {
                        "type": "boolean"
                    },
                    "pilotUserCallingLineIdentityPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ]
                    },
                    "pilotUserChargeNumberPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ]
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Delete a BroadWorks Group Trunk Group<br />
Process name: Delete BroadWorks Group Trunk Group (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Cluster resolution method: Group

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Entity - Group Devices

Network Element: BroadWorks (initially only supports XSP or AS resources)

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/devices/{+deviceName}
### GET
Retrieve information about a BroadWorks Group Device.<br />
Process name: Retrieve BroadWorks Group Device (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Cluster resolution method: Group

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/devices\/ExampleCom_AD3001"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North ",
                "deviceName": "ExampleCom_AD3001",
                "deviceType": "AdTran TA908",
                "protocol": "SIP 2.0",
                "netAddress": "10.0.0.5",
                "port": 8080,
                "outboundProxyServerNetAddress": "proxy1.example.com",
                "stunServerNetAddress": "192.168.100.100",
                "macAddress": "AABBCC112233",
                "serialNumber": "A101-263",
                "description": "Device for Trunk 3001",
                "ports": {
                    "unlimited": false,
                    "quantity": 10,
                    "assigned": 4
                },
                "status": "Online",
                "configurationFile": {
                    "mode": "Custom",
                    "filename": "\/var\/broadworks\/IpDeviceConfig\/1\/7767\/177670294\/Custom_ExampleCom_PolyTemplate_ExampleComPoly1901.template"
                },
                "physicalLocation": "202 Main Street Nowhere, FR",
                "transportProtocol": "TCP",
                "accessDeviceCredentials": {
                    "enabled": true,
                    "username": "4165551212",
                    "password": "4D0fj$&zJ"
                }
            }

    + Schema

            {
                "title": "BroadWorks Entity - Retrieve Group Device response body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "deviceName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "deviceType": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "protocol": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "netAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1025,
                        "maximum": 65535
                    },
                    "outboundProxyServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "stunServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "macAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 12
                    },
                    "serialNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "ports": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "unlimited": {
                                "type": "boolean",
                                "required": true
                            },
                            "quantity": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "assigned": {
                                "type": "integer",
                                "required": true
                            }
                        }
                    },
                    "status": {
                        "enum": [
                            "Online",
                            "Offline",
                            "Unavailable",
                            "Unknown"
                        ]
                    },
                    "configurationFile": {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "enum": [
                                    "Default",
                                    "Manual",
                                    "Custom"
                                ]
                            },
                            "filename": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 256
                            }
                        }
                    },
                    "physicalLocation": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1024
                    },
                    "transportProtocol": {
                        "enum": [
                            "UDP",
                            "TCP",
                            "Unspecified"
                        ]
                    },
                    "accessDeviceCredentials": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "username": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161
                            }
                        }
                    }
                }
            }

### PUT
Modify some or all editable properties of a BroadWorks Group Device.<br />
Process name: Update BroadWorks Group Device (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Cluster resolution method: Group

+ Request (application/json)
    + Body

            {
                "protocol": "SIP 2.0",
                "netAddress": "10.0.0.5",
                "port": 8080,
                "outboundProxyServerNetAddress": "proxy1.example.com",
                "stunServerNetAddress": "192.168.100.100",
                "macAddress": "AABBCC112233",
                "serialNumber": "A101-263",
                "description": "Device for Trunk 3001",
                "configurationFile": {
                    "mode": "Custom",
                    "content": "TG9yZW0gaXBzdW0="
                },
                "physicalLocation": "202 Main Street Nowhere, FR",
                "transportProtocol": "TCP",
                "accessDeviceCredentials": {
                    "enabled": true,
                    "username": "4165551212",
                    "password": "4D0fj$&zJ"
                },
                "mobilityManager": {
                    "provisioningURL": "example.com",
                    "provisioningUserName": "example",
                    "provisioningPassword": "example",
                    "defaultOriginatingServiceKey": 123,
                    "defaultTerminatingServiceKey": 123
                }
            }

    + Schema

            {
                "title": "BroadWorks Entity - Modify Group Device request body",
                "type": "object",
                "properties": {
                    "protocol": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "netAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1025,
                        "maximum": 65535
                    },
                    "outboundProxyServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "stunServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "macAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 12
                    },
                    "serialNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "configurationFile": {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "enum": [
                                    "Default",
                                    "Manual",
                                    "Custom"
                                ]
                            },
                            "filename": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 256
                            },
                            "content": {
                                "type": "string"
                            }
                        }
                    },
                    "physicalLocation": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1024
                    },
                    "transportProtocol": {
                        "enum": [
                            "UDP",
                            "TCP",
                            "Unspecified"
                        ]
                    },
                    "mobilityManager": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "provisioningURL": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 256
                            },
                            "provisioningUserName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 15
                            },
                            "provisioningPassword": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 15
                            },
                            "defaultOriginatingServiceKey": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 999
                            },
                            "defaultTerminatingServiceKey": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 999
                            }
                        }
                    },
                    "accessDeviceCredentials": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "username": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161
                            },
                            "password": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 60
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Remove specified Group Device from BroadWorks.<br />
Process name: Delete BroadWorks Group Device (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Cluster resolution method: Group<br />
This request makes no attempt to check if the Group Device actually exists in the System,
nor does it check to see if the Group Device is allowed to be deleted.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/devices{?mode}
### POST
Creates a new BroadWorks Group Device<br />
Process name: Create BroadWorks Group Device (BroadWorks Entity Service)<br />
Process-backed: Yes<br />
Rollback-enabled: Yes<br />
Cluster resolution method: Group
<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>mode</td>
            <td style="text-align: center">no</td>
            <td>create-only</td>
            <td>Controls execution mode as described in **ref general documentation.<br />
            Allowed values: [ "prevalidate-only", "prevalidate-and-create", "create-only" ].<br />
            <b>NOTE: at this time this property is ignored.</b>
            </td>
        </tr>
    </tbody>
</table>

+ Request (application/json)
    + Body

            {
                "deviceName": "ExampleCom_AD3001",
                "deviceType": "AdTran TA908",
                "protocol": "SIP 2.0",
                "netAddress": "10.0.0.5",
                "port": 8080,
                "outboundProxyServerNetAddress": "proxy1.example.com",
                "stunServerNetAddress": "192.168.100.100",
                "macAddress": "AABBCC112233",
                "serialNumber": "A101-263",
                "description": "Device for Trunk 3001",
                "physicalLocation": "202 Main Street Nowhere, FR",
                "transportProtocol": "TCP",
                "accessDeviceCredentials": {
                    "enabled": true,
                    "username": "4165551212",
                    "password": "4D0fj$&zJ"
                },
                "mobilityManager": {
                    "provisioningURL": "example.com",
                    "provisioningUserName": "example",
                    "provisioningPassword": "example",
                    "defaultOriginatingServiceKey": 123,
                    "defaultTerminatingServiceKey": 123
                }
            }

    + Schema

            {
                "title": "BroadWorks Entity - Create Group Device request body",
                "type": "object",
                "properties": {
                    "deviceName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "deviceType": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "protocol": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "netAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1025,
                        "maximum": 65535
                    },
                    "outboundProxyServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "stunServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "macAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 12
                    },
                    "serialNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "physicalLocation": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1024
                    },
                    "transportProtocol": {
                        "enum": [
                            "UDP",
                            "TCP",
                            "Unspecified"
                        ]
                    },
                    "mobilityManager": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "provisioningURL": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 256
                            },
                            "provisioningUserName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 15
                            },
                            "provisioningPassword": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 15
                            },
                            "defaultOriginatingServiceKey": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 999
                            },
                            "defaultTerminatingServiceKey": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 999
                            }
                        }
                    },
                    "accessDeviceCredentials": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "username": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161
                            },
                            "password": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 60
                            }
                        }
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/broadworks/service-providers/Example%20Com

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/devices\/ExampleCom_AD3001"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/lokiserver.example.com\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North ",
                "deviceName": "ExampleCom_AD3001"
            }

    + Schema

            {
                "title": "BroadWorks Entity - Create Group Device response body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "deviceName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    }
                }
            }

# Group BroadWorks Entity - Auto Attendants

Network Element: BroadWorks (initially only supports XSP or AS resources)

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/auto-attendants/{+autoAttendantId}/services/assigned-services
### GET
This request will retrieve the assigned services of an Auto Attendant.<br />
Process name: Retrieve BroadWorks Auto Attendant Assigned Services (BroadWorks Entity Service)<br />
<b>Note</b>:  Initial implementation does not actually check that the Auto Attendant belongs in the provided Enterpriser and Group.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com:8340\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20North\/auto-attendants\/6502342108%40example.com\/services\/assigned-services"
                    }
                },
                "servicePacks": [],
                "services": [
                    "Anonymous Call Rejection",
                    "Call Forwarding Always",
                    "Alternate Numbers"
                ],
                "serviceProviderId": "Example Com",
                "groupId": "Example Com North",
                "autoAttendantId": "6502342108@example.com",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/localhost\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve user services assignment status response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "autoAttendantId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "servicePacks": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "services": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                },
                                "templated": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }

# Group BroadWorks Entity - Hunt Groups

Network Element: BroadWorks (initially only supports XSP or AS resources)

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/hunt-groups/{+huntGroupId}/services/assigned-services
### GET
This request will retrieve the assigned services of a Hunt Group.<br />
Process name: Retrieve BroadWorks Hunt Group Assigned Services (BroadWorks Entity Service)<br />
<b>Note</b>: Initial implementation does not actually check that the Hunt Group belongs in the provided Enterpriser and Group.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com:8340\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20North\/hunt-groups\/6502342108%40example.com\/services\/assigned-services"
                    }
                },
                "servicePacks": [],
                "services": [
                    "Anonymous Call Rejection",
                    "Call Forwarding Always",
                    "Alternate Numbers"
                ],
                "serviceProviderId": "Example Com",
                "groupId": "Example Com North",
                "huntGroupId": "6502342108@example.com",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/localhost\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve user services assignment status response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "huntGroupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "servicePacks": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "services": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                },
                                "templated": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }

# Group BroadWorks Entity - Call Centers

Network Element: BroadWorks (initially only supports XSP or AS resources)

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/call-centers/{+callCenterId}/services/assigned-services
### GET
This request will retrieve the assigned services of a Call Center.<br />
Process name: Retrieve BroadWorks Call Center Assigned Services (BroadWorks Entity Service)<br />
<b>Note</b>: Initial implementation does not actually check that the Call Center belongs in the provided Enterpriser and Group.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com:8340\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20North\/call-centers\/6502342108%40example.com\/services\/assigned-services"
                    }
                },
                "servicePacks": [],
                "services": [
                    "Anonymous Call Rejection",
                    "Call Forwarding Always",
                    "Alternate Numbers"
                ],
                "serviceProviderId": "Example Com",
                "groupId": "Example Com North",
                "callCenterId": "6502342108@example.com",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/localhost\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve user services assignment status response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "callCenterId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "servicePacks": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "services": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                },
                                "templated": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }

# Group BroadWorks Entity - Instant Group Calls

Network Element: BroadWorks (initially only supports XSP or AS resources)

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/instant-group-calls/{+instantGroupCallId}/services/assigned-services
### GET
This request will retrieve the assigned services of a Instant Group Call.<br />
Process name: Retrieve BroadWorks Instant Group Call Assigned Services (BroadWorks Entity Service)<br />
<b>Note</b>: Initial implementation does not actually check that the Instant Group Call belongs in the provided Enterpriser and Group.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com:8340\/loki-services\/broadworks\/service-providers\/Example%20Com\/groups\/Example%20Com%20North\/instant-group-calls\/6502342108%40example.com\/services\/assigned-services"
                    }
                },
                "servicePacks": [],
                "services": [
                    "Anonymous Call Rejection",
                    "Call Forwarding Always",
                    "Alternate Numbers"
                ],
                "serviceProviderId": "Example Com",
                "groupId": "Example Com North",
                "instantGroupCallId": "6502342108@example.com",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/localhost\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve user services assignment status response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "instantGroupCallId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "servicePacks": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "services": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                },
                                "templated": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }

# Group BroadWorks Entity - Users

Network Element: BroadWorks (initially only supports XSP or AS resources)

Various resources providing general internal services at the System level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/broadworks/users/{+userId}/call-processing-policy
### GET
Retrieve a user's call processing policies - corresponds to User > Profile > Call Processing Policies in the BroadWorks CommPortal.
Refer to OCI UserCallProcessingModifyPolicyRequest documentation for schema (data types, allowed values, etc).

** NOT IMPLEMENTED **

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/users\/4155551212%20example.com\/call-processing-policy"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:broadworks-users": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/users\/4155551212%20example.com"
                                }
                            },
                            "userId": "4155551212@example.com"
                        }
                    ]
                },
                "userId": "4155551212@example.com",
                "callingLineId": {
                    "useUserCLIDSetting": false,
                    "clidPolicy": "Use DN",
                    "emergencyClidPolicy": "Use DN",
                    "allowAlternateNumbersForRedirectingIdentity": true,
                    "useGroupName": false,
                    "allowConfigurableCLIDForRedirectingIdentity": true,
                    "blockCallingNameForExternalCalls": false
                },
                "media": {
                    "useUserMediaSetting": false,
                    "mediaPolicySelection": "No Restrictions",
                    "supportedMediaSetName": "Example"
                },
                "callLimits": {
                    "useUserCallLimitsSetting": false,
                    "useMaxSimultaneousCalls": false,
                    "maxSimultaneousCalls": 10,
                    "useMaxSimultaneousVideoCalls": false,
                    "maxSimultaneousVideoCalls": 5,
                    "useMaxCallTimeForAnsweredCalls": false,
                    "maxCallTimeForAnsweredCallsMinutes": 600,
                    "useMaxCallTimeForUnansweredCalls": false,
                    "maxCallTimeForUnansweredCallsMinutes": 2,
                    "useMaxConcurrentRedirectedCalls": false,
                    "maxConcurrentRedirectedCalls": 3,
                    "useMaxFindMeFollowMeDepth": false,
                    "maxFindMeFollowMeDepth": 3,
                    "maxRedirectionDepth": 10,
                    "useMaxConcurrentFindMeFollowMeInvocations": false,
                    "maxConcurrentFindMeFollowMeInvocations": 3
                },
                "incomingCallerId": {
                    "useUserDCLIDSetting": false,
                    "enableDialableCallerID": false
                }
            }

### PUT
Update a user's call processing policies - corresponds to User > Profile > Call Processing Policies in the BroadWorks CommPortal.
Refer to OCI UserCallProcessingModifyPolicyRequest documentation for schema (data types, allowed values, etc).

** NOT IMPLEMENTED **

+ Request (application/json)

        {
            "callingLineId": {
                "useUserCLIDSetting": false,
                "clidPolicy": "Use DN",
                "emergencyClidPolicy": "Use DN",
                "allowAlternateNumbersForRedirectingIdentity": true,
                "useGroupName": false,
                "allowConfigurableCLIDForRedirectingIdentity": true,
                "blockCallingNameForExternalCalls": false
            },
            "media": {
                "useUserMediaSetting": false,
                "mediaPolicySelection": "No Restrictions",
                "supportedMediaSetName": "Example"
            },
            "callLimits": {
                "useUserCallLimitsSetting": false,
                "useMaxSimultaneousCalls": false,
                "maxSimultaneousCalls": 10,
                "useMaxSimultaneousVideoCalls": false,
                "maxSimultaneousVideoCalls": 5,
                "useMaxCallTimeForAnsweredCalls": false,
                "maxCallTimeForAnsweredCallsMinutes": 600,
                "useMaxCallTimeForUnansweredCalls": false,
                "maxCallTimeForUnansweredCallsMinutes": 2,
                "useMaxConcurrentRedirectedCalls": false,
                "maxConcurrentRedirectedCalls": 3,
                "useMaxFindMeFollowMeDepth": false,
                "maxFindMeFollowMeDepth": 3,
                "maxRedirectionDepth": 10,
                "useMaxConcurrentFindMeFollowMeInvocations": false,
                "maxConcurrentFindMeFollowMeInvocations": 3
            },
            "incomingCallerId": {
                "useUserDCLIDSetting": false,
                "enableDialableCallerID": false
            }
        }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/broadworks/users/{+userId}
### GET
Retrieve BroadWorks User<br />
Process name: Retrieve BroadWorks User (BroadWorks Entity)

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/broadworks\/users\/JohnDoe"
                    }
                },
                "serviceProviderId": "EnterpriseID",
                "groupId": "GroupID",
                "lastName": "JohnDoe",
                "firstName": "JohnDoe",
                "callingLineIdLastName": "JohnDoe",
                "callingLineIdFirstName": "JohnDoe",
                "hiraganaLastName": "JohnDoe",
                "hiraganaFirstName": "JohnDoe",
                "phoneNumber": "+1-2147483642",
                "extension": "642",
                "language": "English",
                "timeZone": "America\/Winnipeg",
                "timeZoneDisplayName": "(GMT-06:00) (Canada) Central Time",
                "defaultAlias": "JohnDoe@r19.leonidsystems.com",
                "accessDeviceEndpoint": {
                    "accessDevice": {
                        "deviceLevel": "Group",
                        "deviceName": "0002"
                    },
                    "linePort": "2147483642@r19.leonidsystems.com",
                    "staticRegistrationCapable": false,
                    "useDomain": true
                },
                "countryCode": "1",
                "userId": "JohnDoe",
                "ne_id": "1",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "GET User, body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "userId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "callingLineIdLastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "callingLineIdFirstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "hiraganaLastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "hiraganaFirstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "phoneNumber": {
                        "id": "E.164 DN",
                        "description": "A formatted TN.",
                        "type": [
                            "string"
                        ],
                        "minLength": 1,
                        "maxLength": 23,
                        "pattern": "^\\+\\d+-\\d+$"
                    },
                    "extension": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 6
                    },
                    "callingLineIdPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "department": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    },
                    "departmentFullPath": {
                        "type": "string",
                        "minLength": 1
                    },
                    "language": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "timeZoneDisplayName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "defaultAlias": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "required": true
                    },
                    "alias": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 3,
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 161
                        },
                        "required": true
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "pagerPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "mobilePhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "emailAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "yahooId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "addressLocation": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvinceDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    },
                    "countryCode": {
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "[ 0-9]|[ 1-9][ 0-9]{ 1, 2}"
                    },
                    "nationalPrefix": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2
                    },
                    "ne_id": {
                        "type": "string"
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                },
                                "templated": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }

+ Response 404 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "NOT_FOUND",
                "externalErrorCode": "4008",
                "externalErrorSummary": "[Error 4008] User not found: JohnDoe",
                "externalErrorDetail": "[Error 4008] User not found: JohnDoe"
            }

    + Schema

            {
                "title": "GET User, body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "userId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "callingLineIdLastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "callingLineIdFirstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "hiraganaLastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "hiraganaFirstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "phoneNumber": {
                        "id": "E.164 DN",
                        "description": "A formatted TN.",
                        "type": [
                            "string"
                        ],
                        "minLength": 1,
                        "maxLength": 23,
                        "pattern": "^\\+\\d+-\\d+$"
                    },
                    "extension": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 6
                    },
                    "callingLineIdPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "department": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    },
                    "departmentFullPath": {
                        "type": "string",
                        "minLength": 1
                    },
                    "language": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "timeZoneDisplayName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "defaultAlias": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "required": true
                    },
                    "alias": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 3,
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 161
                        },
                        "required": true
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "pagerPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "mobilePhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "emailAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "yahooId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "addressLocation": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvinceDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    },
                    "countryCode": {
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "[ 0-9]|[ 1-9][ 0-9]{ 1, 2}"
                    },
                    "nationalPrefix": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2
                    },
                    "ne_id": {
                        "type": "string"
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                },
                                "templated": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
            
## /loki-services/broadworks/users/{+userId}/services/assigned-services
### GET
This request will retrieve the assigned services of a User.<br />
Process name: Retrieve BroadWorks User Assigned Services (BroadWorks Entity Service)<br />

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiserver.example.com:8340\/loki-services\/broadworks\/users\/6502342108%40example.com\/services\/assigned-services"
                    }
                },
                "servicePacks": [],
                "services": [
                    "Anonymous Call Rejection",
                    "Call Forwarding Always",
                    "Alternate Numbers"
                ],
                "userId": "6502342108@example.com",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/localhost\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve user services assignment status response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "userId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "required": true
                    }
                    "servicePacks": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "services": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                },
                                "templated": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }

# Group BroadWorks System - General

Network Element: BroadWorks (initially only supports XSP or AS resources)

Various resources providing general internal services at the System level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/domains
### GET
Retrieve the Systems's domains, including the default domain.

Note the "domains" property, if present, will always be an array (even if it has only one element)  .

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/domains"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "systemDefaultDomain": "example.com",
                "domains": [
                    "another.example.com",
                    "last.example.com"
                ]
            }

    + Schema

            {
                "title": "Retrieve System Domains response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "systemDefaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    },
                    "domains": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 80,
                            "pattern": "^[a-zA-Z0-9.-]+$"
                        }
                    }
                }
            }

### POST
Add a new domain to the System.

Note that the 424 example is just one example of a possible BroadWorks error.

+ Request (application/json)
    + Body

            {
                "domain": "example"
            }

    + Schema

            {
                "title": "Add System Domain request body schema",
                "type": "object",
                "properties": {
                    "domain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/broadworks/1/domains/example

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/domains\/example"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "domain": "example"
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4260",
                "externalErrorSummary": "[Error 4260] Cannot add domain with same name as an existing domain.",
                "ThexternalErrorDetail": "[Error 4260] Cannot add domain with same name as an existing domain."
            }

## /loki-services/network-elements/broadworks/{+ne_id}/domains/{+domain}
### DELETE
Delete a System domain.

This request makes no attempt to check if the domain actually exists in the System,
nor does it check to see if the domain is allowed to be deleted.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/languages
### GET
Retrieve the Systems's list of defined languages, including the default language.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/languages"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "defaultLanguage": "English",
                "languageTable": {
                    "English": {
                        "Language": "English",
                        "Locale": "en_US",
                        "Encoding": "ISO-8859-1"
                    },
                    "French": {
                        "Language": "French",
                        "Locale": "fr_CA",
                        "Encoding": "ISO-8859-1"
                    }
                }
            }

    + Schema

            {
                "title": "Retrieve System Languages response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "defaultLanguage": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "languageTable": {
                        "type": "object",
                        "required": true,
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Language": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 40,
                                        "required": true
                                    },
                                    "Locale": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 5,
                                        "required": true
                                    },
                                    "Encoding": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 40,
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                }
            }

## /loki-services/network-elements/broadworks/{+ne_id}/time-zones
### GET
Retrieve the Systems's list of defined time zones, including the default time zone.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/time-zones"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "timeZoneTable": {
                    "Europe\/Bucharest": {
                        "Key": "Europe\/Bucharest",
                        "Display Name": "(GMT+02:00) Europe\/Bucharest"
                    },
                    "America\/St_Johns": {
                        "Key": "America\/St_Johns",
                        "Display Name": "(GMT-03:30) (Canada) Newfoundland"
                    }
                }
            }

    + Schema

            {
                "title": "Retrieve System Time-zones response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serverTimeZone": {
                        "type": "string",
                        "description": "Added in R20",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "timeZoneTable": {
                        "type": "object",
                        "required": true,
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Key": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 127,
                                        "required": true
                                    },
                                    "Display Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                }
            }

# Group BroadWorks Service Providers - General

Network Element: BroadWorks (initially only supports XSP or AS resources)

Various resources providing general internal services at the Enterprise/Service Provider level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

URI Template Variables:

* <code>serviceProviderId</code> - Corresponds to the ID of the service provider (or enterprise) in BroadWorks;
e.g. serviceProviderId in a BroadWorks OCI ServiceProviderGetListRequest.
* <code>ne_id</code> - Corresponds to the networkElementId of the appropriate cluster in the BroadWorks section of the configuration.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}
### GET
Retrieve an enterprise or service provider.

Only one of "isEnterprise" and "useCustomRoutingProfile" will appear in the response.

+ Response 200 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com"
                    }
                },
                "isEnterprise": true,
                "defaultDomain": "example.com",
                "serviceProviderName": "Example Com",
                "supportEmail": "jane.doe@example.com",
                "contact": {
                    "contactName": "John Doe",
                    "contactNumber": "4165554321",
                    "contactEmail": "john.doe@example.com"
                },
                "address": {
                    "addressLine1": "1 E ST NE",
                    "addressLine2": "Unit 2",
                    "city": "Washington",
                    "stateOrProvince": "DC",
                    "zipOrPostalCode": "20025",
                    "country": "USA"
                },
                "useServiceProviderLanguages": false,
                "serviceProviderId": "ExampleCom",
                "ne_id": "1",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "GET Service Provider, body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "isEnterprise": {
                        "type": "boolean"
                    },
                    "useCustomRoutingProfile": {
                        "type": "boolean"
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "required": true
                    },
                    "serviceProviderName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "supportEmail": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "contactName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactEmail": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvinceDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    },
                    "useServiceProviderLanguages": {
                        "type": "boolean",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "ne_id": {
                        "type": "string"
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                },
                                "templated": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }

### PUT
Modifies the profile settings for an existing BroadWorks Service Provider/Enterprise.

+ Request (application/json)
    + Body

            {
                "defaultDomain": "mydomain.com",
                "serviceProviderName": "Example Com",
                "supportEmail": "support@mydomain.com",
                "contact": {
                    "contactName": "Jane Doe",
                    "contactNumber": "+1-555009056",
                    "contactEmail": "jdoe@mydomain.com"
                },
                "address": {
                    "addressLine1": "123 Main Street",
                    "addressLine2": "Building 5",
                    "city": "New York",
                    "stateOrProvince": "New York",
                    "stateOrProvinceDisplayName": "New York",
                    "zipOrPostalCode": "10007",
                    "country": "US"
                },
                "useServiceProviderLanguages": "true"
            }

    + Schema

            {
                "title": "Modifies the profile settings for an existing BroadWorks Service Provider\/Enterprise request body schema",
                "type": "object",
                "properties": {
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$"
                    },
                    "serviceProviderName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "supportEmail": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "format": "email"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "contactName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactEmail": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvinceDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    },
                    "useServiceProviderLanguages": {
                        "type": "boolean",
                        "required": true,
                        "description": "Only available for Service Providers."
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Removes an existing Service Provider/Enterprise from BroadWorks.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers
### POST
Creates a new Service Provider/Enterprise in BroadWorks.

Note that the 424 example is just one example of a possible BroadWorks error.

+ Request (application/json)
    + Body

            {
                "serviceProviderId": "Example Com",
                "isEnterprise": true,
                "defaultDomain": "mydomain.com",
                "serviceProviderName": "Example Com",
                "supportEmail": "support@mydomain.com",
                "contact": {
                    "contactName": "Jane Doe",
                    "contactNumber": "+1-555009056",
                    "contactEmail": "jdoe@mydomain.com"
                },
                "address": {
                    "addressLine1": "123 Main Street",
                    "addressLine2": "Building 5",
                    "city": "New York",
                    "stateOrProvince": "New York",
                    "stateOrProvinceDisplayName": "New York",
                    "zipOrPostalCode": "10007",
                    "country": "US"
                }
            }

    + Schema

            {
                "title": "Creates a new Service Provider\/Enterprise in BroadWorks request body schema",
                "type": "object",
                "properties": {
                    "isEnterprise": {
                        "type": "boolean",
                        "required": true,
                        "description": "Valid only when creating an enterprise. Must be omitted when creating a service provider. If present, must have value 'true'."
                    },
                    "useCustomRoutingProfile": {
                        "type": "boolean",
                        "required": true,
                        "description": "Valid only when creating a service provider. Must be omitted when creating an enterprise. If present, must have value 'true'."
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    },
                    "serviceProviderName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "supportEmail": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "format": "email"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "contactName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactEmail": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvinceDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/broadworks/1/service-providers/Example%20Com

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com"
                    }
                },
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/lokiserver.example\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Creates a new Service Provider\/Enterprise in BroadWorks response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    }
                }
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4100",
                "externalErrorSummary": "[Error 4100] Service Provider or Enterprise with the requested name already exists.",
                "externalErrorDetail": "[Error 4100] Service Provider or Enterprise with the requested name already exists."
            }

    + Schema

            {
                "title": "Creates a new Service Provider\/Enterprise in BroadWorks response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    }
                }
            }

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/domains
### GET
Retrieve the Service Provider's assigned domains, including it's default domain.

Note the "domains" property, if present, will always be an array (even if it has only one element)  .

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/domains"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "serviceProviderDefaultDomain": "example.com",
                "domains": [
                    "another.example.com",
                    "last.example.com"
                ]
            }

    + Schema

            {
                "title": "Retrieve Service Provider Domains response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "serviceProviderDefaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    },
                    "domains": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 80,
                            "pattern": "^[a-zA-Z0-9.-]+$"
                        }
                    }
                }
            }

### POST
Assign a new domain to the Service Provider.

Note that the 424 example is just one example of a possible BroadWorks error.

+ Request (application/json)
    + Body

            {
                "domain": "example"
            }

    + Schema

            {
                "title": "Assign Service Provider Domain request body schema",
                "type": "object",
                "properties": {
                    "domain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/broadworks/1/service-providers/{+serviceProviderId}/domains/example

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/domains\/example"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "domain": "example"
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4267",
                "externalErrorSummary": "[Error 4267] Error assigning domain since the domain is already assigned: example",
                "ThexternalErrorDetail": "[Error 4267] Error assigning domain since the domain is already assigned: example"
            }

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/domains/{+domain}
### DELETE
Unassign a Service Provider domain.

This request makes no attempt to check if the domain actually exists in the Service Provider,
nor does it check to see if the domain is allowed to be deleted.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Service Providers - Phone Numbers

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides all internal services related to BroadWorks phone number (TN) resources at the Enterprise/Service Provider level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/phone-numbers
### POST
Assign a single phone number (TN) to an Enterprise or Service Provider.

Note that the 424 example is just one example of a possible BroadWorks error.

+ Request (application/json)
    + Body

            {
                "phoneNumber": "+1-2005553001"
            }

    + Schema

            {
                "title": "Assign Service Provider Phone Number request body schema",
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23,
                        "pattern": "^\\+\\d+-\\d+$"
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/broadworks/1/serviceProviders/Example%20Com/phone-numbers/%2B1-2005553001

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/phone-numbers\/%2B1-2005553001"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "phoneNumber": "+1-2005553001"
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4250",
                "externalErrorSummary": "[Warning 4250] 1 phone number(s) not added.  Verify that the number(s) are not already assigned.",
                "ThexternalErrorDetail": "[Warning 4250] 1 phone number(s) not added.  Verify that the number(s) are not already assigned."
            }

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/phone-numbers/{+phoneNumber}
### HEAD
Check existence of an individual phone number in an Enterprise or Service Provider.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

### GET
Retrieve an individual phone number from an Enterprise or Service Provider.

***NOTE: most likely the embedded service-provider should be removed here; this GET shouldn't be attempting to construct
broadworks-groups resource representations itself, and it would be wasteful to do an actual GET on /groups to
fetch the group resource. really, if we want a link to the service-provider here, use _links. ***

** NOT IMPLEMENTED; also, need decide if _embedded service-provider stays, or changes to a _links entry, or just goes away **

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/phone-numbers\/%2B1-2005551212"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:broadworks-service-providers": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com"
                                }
                            },
                            "ne_id": "1",
                            "serviceProviderId": "Example Com"
                        }
                    ]
                },
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "phoneNumber": "+1-2005551212",
                "canDelete": true
            }

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Unassign a phone number from an Enterprise or a Service Provider.

This request makes no attempt to check if the TN is actually assigned on the Enterprise/Service Provider,
nor does it check to see if the TN allowed to be deleted. In future we may choose to use
тАЬGET /broadworks/service-providers/{+serviceProviderId}/phone-numbers/{+phoneNumber}" to first check for existence and
verify that the TN is allowed to be deleted; in which case we could return 404 if the TN isn't assigned
on the ent/SP, or another 4xx if it's assigned but not allowed to be deleted (e.g. if it's assigned
to a Group).

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Service Providers - Services

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides all internal services related to services (authorizations, service packs) at the Enterprise/Service Provider level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/services
### GET
Retrieve the Service Provider's service authorization detail.

*In the current implementation, some properties can be misleading, please note:*

* *When "Limited" is "Unlimited" or "none", then "Quantity" will be null. Otherwise, "Quantity" will be numeric.*
* *Both "Allocated" and "Service Pack Allocation" are strings, and may have value "Unlimited" or may have the string representation of a numeric value.*

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/services"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupServicesAuthorizationTable": {
                    "Account\/Authorization Codes": {
                        "Service Name": "Account\/Authorization Codes",
                        "Authorized": true,
                        "Assigned": false,
                        "Limited": "Unlimited",
                        "Quantity": null,
                        "Allocated": 1,
                        "Licensed": true,
                        "Service Pack Allocation": 0
                    },
                    "Auto Attendant": {
                        "Service Name": "Auto Attendant",
                        "Authorized": true,
                        "Assigned": false,
                        "Limited": "Limited",
                        "Quantity": 20,
                        "Allocated": 10,
                        "Licensed": true,
                        "Service Pack Allocation": 0
                    },
                    "etc": "truncated for brevity"
                },
                "userServicesAuthorizationTable": {
                    "3G\/4G Continuity": {
                        "Service Name": "3G\/4G Continuity",
                        "Authorized": true,
                        "Assigned": false,
                        "Limited": "Unlimited",
                        "Quantity": null,
                        "Allocated": "Unlimited",
                        "Licensed": true,
                        "Service Pack Allocation": "Unlimited",
                        "User Assignable": true,
                        "Service Pack Assignable": true
                    },
                    "Advice Of Charge": {
                        "Service Name": "Advice Of Charge",
                        "Authorized": true,
                        "Assigned": false,
                        "Limited": "Unlimited",
                        "Quantity": null,
                        "Allocated": "Unlimited",
                        "Licensed": true,
                        "Service Pack Allocation": 0,
                        "User Assignable": true,
                        "Service Pack Assignable": true
                    },
                    "etc": "truncated for brevity"
                }
            }

    + Schema

            {
                "title": "Retrieve Service Provider Services Authorizations response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupServicesAuthorizationTable": {
                        "type": "object",
                        "required": true,
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Service Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "required": true
                                    },
                                    "Authorized": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Assigned": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Limited": {
                                        "enum": [
                                            "Unlimited",
                                            "Limited"
                                        ],
                                        "required": true
                                    },
                                    "Quantity": {
                                        "type": [
                                            "null",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "Allocated": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "Licensed": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Service Pack Allocation": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "userServicesAuthorizationTable": {
                        "type": "object",
                        "required": true,
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Service Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "required": true
                                    },
                                    "Authorized": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Assigned": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Limited": {
                                        "enum": [
                                            "Unlimited",
                                            "Limited"
                                        ],
                                        "required": true
                                    },
                                    "Quantity": {
                                        "type": [
                                            "null",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "Allocated": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "Licensed": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Service Pack Allocation": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "User Assignable": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Service Pack Assignable": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                }
            }

### PUT
Update the Service Provider's service authorizations. Each of groupServicesAuthorizationTable and
userServicesAuthorizationTable may contain zero or more entries (or be omitted entirely). Invalid combinations
(for example, Authorized=false with Limited=Unlimited) may result in an 500 Internal Server Error
or a 400 Bad Request, depending on the response from the BroadWorks Utility Service.

+ Request (application/json)
    + Body

            {
                "groupServicesAuthorizationTable": {
                    "Auto Attendant": {
                        "Authorized": false
                    },
                    "Group Paging": {
                        "Authorized": true,
                        "Limited": "Unlimited"
                    },
                    "Hunt Group": {
                        "Authorized": true,
                        "Limited": "Limited",
                        "Quantity": 20
                    }
                },
                "userServicesAuthorizationTable": {
                    "Remote Office": {
                        "Authorized": false
                    },
                    "Authentication": {
                        "Authorized": true,
                        "Limited": "Unlimited"
                    },
                    "Call Waiting": {
                        "Authorized": true,
                        "Limited": "Limited",
                        "Quantity": 20
                    }
                }
            }

    + Schema

            {
                "title": "Modify Service Provider Services Authorizations request body schema",
                "properties": {
                    "groupServicesAuthorizationTable": {
                        "type": "object",
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Authorized": {
                                        "type": "boolean"
                                    },
                                    "Limited": {
                                        "enum": [
                                            "Unlimited",
                                            "Limited"
                                        ]
                                    },
                                    "Quantity": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "userServicesAuthorizationTable": {
                        "type": "object",
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Authorized": {
                                        "type": "boolean"
                                    },
                                    "Limited": {
                                        "enum": [
                                            "Unlimited",
                                            "Limited"
                                        ]
                                    },
                                    "Quantity": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Service Providers - Trunking Call Capacity

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides all internal services related to Trunking Call Capacity settings, Max Active Calls and Bursting Max Active Calls, at the Enterprise/Service Provider level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/trunking-call-capacity
### GET
Retrieve Trunking Call Capacity settings for an Enterprise/Service Provider.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/trunking-call-capacity"
                    }
                },
                "maxActiveCalls": {
                    "quantity": 0
                },
                "burstingMaxActiveCalls": {
                    "quantity": 0
                },
                "serviceProviderId": "Example Com",
                "ne_id": "asp1_r21",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve Service Provider Trunking Call Capacity response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "maxActiveCalls": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "quantity": {
                                "type": "integer"
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    },
                    "burstingMaxActiveCalls": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "quantity": {
                                "type": "integer"
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }

+ Response 404 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "NOT_FOUND",
                "externalErrorCode": "4151",
                "externalErrorSummary": "[Error 4151] Service Provider or Enterprise not found: Bogus Enterprise",
                "externalErrorDetail": "[Error 4151] Service Provider or Enterprise not found: Bogus Enterprise"
            }

    + Schema

            {
                "title": "Retrieve Service Provider Trunking Call Capacity response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "maxActiveCalls": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "quantity": {
                                "type": "integer"
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    },
                    "burstingMaxActiveCalls": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "quantity": {
                                "type": "integer"
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }

### PUT
Update the Trunking Call Capacity settings to an Enterprise/Service Provider.

+ Request (application/json)
    + Body

            {
                "maxActiveCalls": {
                    "unlimited": true,
                    "quantity": 4
                },
                "burstingMaxActiveCalls": {
                    "unlimited": true,
                    "quantity": 4
                }
            }

    + Schema

            {
                "title": "Modify Service Provider Trunking Call Capacity request body schema",
                "properties": {
                    "maxActiveCalls": {
                        "type": "object",
                        "properties": {
                            "quantity": {
                                "type": "integer"
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    },
                    "burstingMaxActiveCalls": {
                        "type": "object",
                        "properties": {
                            "quantity": {
                                "type": "integer"
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Groups - General

Network Element: BroadWorks (initially only supports XSP or AS resources)

Various resources providing general internal services at the Group level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}
### GET
Retrieve information about a BroadWorks group.
Corresponds to Group > Profile > Profile in the BroadWorks CommPortal.

Note that BroadWorks unfortunately omits the "-" in the callingLineIdPhoneNumber. At this time
the BroadWorks value will be passed through unaltered in the response.

The following properties are omitted from the response if they have no value set on the group in BroadWorks:

* groupName
* callingLineIdName
* callingLineIdPhoneNumber
* callingLineIdDisplayPhoneNumber
* locationDialingCode
* contact
* address

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "defaultDomain": "r19.leonidsystems.com",
                "userLimit": 6,
                "userCount": 4,
                "groupName": "exampleCom North",
                "callingLineIdName": "ExampleCOM North",
                "callingLineIdPhoneNumber": "+15552112700",
                "callingLineIdDisplayPhoneNumber": "5552112700",
                "timeZone": "America\/St_Johns",
                "timeZoneDisplayName": "(GMT-03:30) (Canada) Newfoundland",
                "locationDialingCode": "415",
                "contact": {
                    "contactName": "Billy",
                    "contactNumber": "Bishop",
                    "contactEmail": "billy@example.com"
                },
                "address": {
                    "addressLine1": "415 Sixth Ave",
                    "addressLine2": "Suite 102",
                    "city": "North Seventh",
                    "stateOrProvince": "Alabama",
                    "zipOrPostalCode": "50415",
                    "country": "USA"
                }
            }

    + Schema

            {
                "type": "object",
                "title": "Retrieve Group response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    },
                    "userLimit": {
                        "type": "integer",
                        "required": true
                    },
                    "userCount": {
                        "type": "integer",
                        "required": true
                    },
                    "groupName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "callingLineIdName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "callingLineIdPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23,
                        "pattern": "^\\+\\d+-\\d+$"
                    },
                    "callingLineIdDisplayPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23,
                        "pattern": "^\\+\\d+-\\d+$"
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "timeZoneDisplayName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "locationDialingCode": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15,
                        "pattern": "^[0-9]+$"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "contactName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactEmail": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    }
                }
            }

### PUT
Modify some or all editable properties of a BroadWorks group.
Corresponds to Group > Profile > Profile in the BroadWorks CommPortal.

+ Request (application/json)
    + Body

            {
                "defaultDomain": "r19.leonidsystems.com",
                "userLimit": 6,
                "groupName": "exampleCom North",
                "callingLineIdName": "ExampleCOM North",
                "callingLineIdPhoneNumber": "+1-5553112700",
                "timeZone": "America\/St_Johns",
                "locationDialingCode": "415",
                "contact": {
                    "contactName": "Billy",
                    "contactNumber": "Bishop",
                    "contactEmail": "billy@example.com"
                },
                "address": {
                    "addressLine1": "415 Sixth Ave",
                    "addressLine2": "Suite 102",
                    "city": "North Seventh",
                    "stateOrProvince": "Alabama",
                    "zipOrPostalCode": "50415",
                    "country": "USA"
                }
            }

    + Schema

            {
                "title": "Modify Group request body schema",
                "type": "object",
                "properties": {
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$"
                    },
                    "userLimit": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999999
                    },
                    "groupName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "callingLineIdName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "callingLineIdPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23,
                        "pattern": "^\\+\\d+-\\d+$"
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127
                    },
                    "locationDialingCode": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15,
                        "pattern": "^[0-9]+$"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "contactName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactEmail": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Delete a Group

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups
### POST
Create a new Group.

Note that the 424 example is just one example of a possible BroadWorks error.

+ Request (application/json)
    + Body

            {
                "groupId": "Example Com - North",
                "defaultDomain": "r19.leonidsystems.com",
                "userLimit": 6,
                "groupName": "exampleCom North",
                "callingLineIdName": "ExampleCOM North",
                "timeZone": "America\/St_Johns",
                "locationDialingCode": "415",
                "contact": {
                    "contactName": "Billy",
                    "contactNumber": "Bishop",
                    "contactEmail": "billy@example.com"
                },
                "address": {
                    "addressLine1": "415 Sixth Ave",
                    "addressLine2": "Suite 102",
                    "city": "North Seventh",
                    "stateOrProvince": "Alabama",
                    "zipOrPostalCode": "50415",
                    "country": "USA"
                }
            }

    + Schema

            {
                "title": "Create Group request body schema",
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "defaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    },
                    "userLimit": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999999,
                        "required": true
                    },
                    "groupName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "callingLineIdName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127
                    },
                    "locationDialingCode": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15,
                        "pattern": "^[0-9]+$"
                    },
                    "contact": {
                        "type": "object",
                        "properties": {
                            "contactName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "contactEmail": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email"
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/broadworks/1/service-providers/Example%20Com/groups/Example%20Com%20-%20North

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North"
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4266",
                "externalErrorSummary": "[Error 4266] Domain does not exist or is not available for assignment\/unassignment: r19.leonidsystems.com",
                "ThexternalErrorDetail": "[Error 4266] Domain does not exist or is not available for assignment\/unassignment: r19.leonidsystems.com"
            }

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/password-rules
### GET
Retrieve the password rules for a group in BroadWorks.
Corresponds to Group > Utilities > Password Rules in the BroadWorks CommPortal.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/password-rules"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "disallowUserId": false,
                "disallowOldPassword": false,
                "disallowReversedOldPassword": false,
                "restrictMinDigits": false,
                "minDigits": 1,
                "restrictMinUpperCaseLetters": false,
                "minUpperCaseLetters": 1,
                "restrictMinLowerCaseLetters": false,
                "minLowerCaseLetters": 1,
                "restrictMinNonAlphanumericCharacters": false,
                "minNonAlphanumericCharacters": 1,
                "minLength": 6,
                "maxFailedLoginAttempts": 5,
                "passwordExpiresDays": 30,
                "sendLoginDisabledNotifyEmail": false,
                "disallowRulesModification": false,
                "disallowPreviousPasswords": false,
                "numberOfPreviousPasswords": 1
            }

    + Schema

            {
                "type": "object",
                "title": "Retrieve Group Password Rules response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "disallowUserId": {
                        "type": "boolean",
                        "required": true
                    },
                    "disallowOldPassword": {
                        "type": "boolean",
                        "required": true
                    },
                    "disallowReversedOldPassword": {
                        "type": "boolean",
                        "required": true
                    },
                    "restrictMinDigits": {
                        "type": "boolean",
                        "required": true
                    },
                    "minDigits": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "required": true
                    },
                    "restrictMinUpperCaseLetters": {
                        "type": "boolean",
                        "required": true
                    },
                    "minUpperCaseLetters": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "required": true
                    },
                    "restrictMinLowerCaseLetters": {
                        "type": "boolean",
                        "required": true
                    },
                    "minLowerCaseLetters": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "required": true
                    },
                    "restrictMinNonAlphanumericCharacters": {
                        "type": "boolean",
                        "required": true
                    },
                    "minNonAlphanumericCharacters": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "required": true
                    },
                    "minLength": {
                        "type": "integer",
                        "minimum": 3,
                        "maximum": 40,
                        "required": true
                    },
                    "maxFailedLoginAttempts": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 10,
                        "required": true
                    },
                    "passwordExpiresDays": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 199,
                        "required": true
                    },
                    "sendLoginDisabledNotifyEmail": {
                        "type": "boolean",
                        "required": true
                    },
                    "disallowRulesModification": {
                        "type": "boolean",
                        "required": true
                    },
                    "disallowPreviousPasswords": {
                        "type": "boolean",
                        "required": true
                    },
                    "numberOfPreviousPasswords": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "required": true
                    }
                }
            }

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/extension-length
### GET
Retrieve the extension length settings for a group in BroadWorks.
Corresponds to Group > Utilities > Extension Dialing in the BroadWorks CommPortal.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/extension-length"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "minExtensionLength": 2,
                "maxExtensionLength": 6,
                "defaultExtensionLength": 4
            }

    + Schema

            {
                "type": "object",
                "title": "Retrieve Group Extension Length response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "minExtensionLength": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20,
                        "required": true
                    },
                    "maxExtensionLength": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20,
                        "required": true
                    },
                    "defaultExtensionLength": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20,
                        "required": true
                    }
                }
            }

### PUT
Modify the extension length settings for a group in BroadWorks.
Corresponds to Group > Utilities > Extension Dialing in the BroadWorks CommPortal.

+ Request (application/json)
    + Body

            {
                "minExtensionLength": 3,
                "maxExtensionLength": 6,
                "defaultExtensionLength": 4
            }

    + Schema

            {
                "title": "Modify Group Extension Length request body schema",
                "type": "object",
                "properties": {
                    "minExtensionLength": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20
                    },
                    "maxExtensionLength": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20
                    },
                    "defaultExtensionLength": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 20
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/domains
### GET
Retrieve the Group's assigned domains, including it's default domain.

Note the "domains" property, if present, will always be an array (even if it has only one element)  .

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/domains"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "groupDefaultDomain": "example.com",
                "domains": [
                    "another.example.com",
                    "last.example.com"
                ]
            }

    + Schema

            {
                "type": "object",
                "title": "Retrieve Group Domains response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupDefaultDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    },
                    "domains": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 80,
                            "pattern": "^[a-zA-Z0-9.-]+$"
                        }
                    }
                }
            }

### POST
Assign a new domain to the Group.

Note that the 424 example is just one example of a possible BroadWorks error.

+ Request (application/json)
    + Body

            {
                "domain": "example"
            }

    + Schema

            {
                "title": "Assign Group Domain request body schema",
                "type": "object",
                "properties": {
                    "domain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "pattern": "^[a-zA-Z0-9.-]+$",
                        "required": true
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/broadworks/1/service-providers/{+serviceProviderId}/groups/{+groupId}/domains/example

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/domains\/example"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "domain": "example"
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4266",
                "externalErrorSummary": "[Error 4266] Domain does not exist or is not available for assignment\/unassignment: example",
                "ThexternalErrorDetail": "[Error 4266] Domain does not exist or is not available for assignment\/unassignment: example"
            }

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/domains/{+domain}
### DELETE
Unassign a Group domain.

This request makes no attempt to check if the domain actually exists in the Group,
nor does it check to see if the domain is allowed to be deleted.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/feature-access-codes
### GET
Get group-level Feature Access Codes settings

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/feature-access-codes"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "useFeatureAccessCodeLevel": "Service Provider",
                "featureAccessCode": [
                    {
                        "featureAccessCodeName": "Direct Voice Mail Transfer",
                        "mainCode": "*55",
                        "alternateCode": "*65"
                    },
                    {
                        "featureAccessCodeName": "Call Forwarding Not Reachable Deactivation",
                        "mainCode": "*95",
                        "alternateCode": "*66"
                    },
                    {
                        "featureAccessCodeName": "Call Bridge",
                        "mainCode": "*15",
                        "alternateCode": "*67"
                    }
                ],
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "ne_id": "1"
            }

    + Schema

            {
                "title": "Get group-level Feature Access Codes settings response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "useFeatureAccessCodeLevel": {
                        "enum": [
                            "Service Provider",
                            "Group"
                        ],
                        "required": true
                    },
                    "featureAccessCode": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "featureAccessCodeName": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 80,
                                    "required": true
                                },
                                "mainCode": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 5,
                                    "required": true,
                                    "pattern": "^[A-D0-9\\#\\*]+$"
                                },
                                "alternateCode": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 5,
                                    "pattern": "^[A-D0-9\\#\\*]+$"
                                }
                            }
                        }
                    }
                }
            }

### PUT
Update group-level Feature Access Codes settings

+ Request (application/json)
    + Body

            {
                "useFeatureAccessCodeLevel": "Service Provider",
                "featureAccessCode": [
                    {
                        "featureAccessCodeName": "Direct Voice Mail Transfer",
                        "mainCode": "*55",
                        "alternateCode": "*65"
                    },
                    {
                        "featureAccessCodeName": "Call Forwarding Not Reachable Deactivation",
                        "mainCode": "*95",
                        "alternateCode": "*66"
                    },
                    {
                        "featureAccessCodeName": "Call Bridge",
                        "mainCode": "*15",
                        "alternateCode": "*67"
                    }
                ]
            }

    + Schema

            {
                "title": "Update group-level Feature Access Codes settings request body schema",
                "type": "object",
                "properties": {
                    "useFeatureAccessCodeLevel": {
                        "enum": [
                            "Service Provider",
                            "Group"
                        ]
                    },
                    "featureAccessCode": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "featureAccessCodeName": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 80,
                                    "required": true
                                },
                                "mainCode": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 5,
                                    "required": true,
                                    "pattern": "^[A-D0-9\\#\\*]+$"
                                },
                                "alternateCode": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 5,
                                    "pattern": "^[A-D0-9\\#\\*]+$"
                                }
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Groups - Phone Numbers

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides all internal services related to BroadWorks phone number (TN) resources at the Group level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers
### POST
Assign a single phone number (TN) to a Group.

+ Request (application/json)
    + Body

            {
                "phoneNumber": "+1-2005553001"
            }

    + Schema

            {
                "title": "Assign Group Phone Number request body schema",
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 23,
                        "pattern": "^\\+\\d+-\\d+$"
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/broadworks/1/serviceProviders/Example%20Com/groups/Example%20Com%20-%20North/phone-numbers/%2B1-2005553001

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/service-providers\/Example%20Com\/groups\/Example%20Com%20-%20North\/phone-numbers\/%2B1-2005553001"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "phoneNumber": "+1-2005553001"
            }

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/{+phoneNumber}
### HEAD
Check existence of an individual phone number in a Group.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404
    + Headers

            Transaction-Id: 1380080943120

### GET
Retrieve an individual phone number from a Group.

The embedded "ls:broadworks-users" resource is included only when the phone number is assigned to a user.

** NOT IMPLEMENTED; note link relation may be wrong, distinguish between utility-level and entity-level broadworks-users**

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/phone-numbers\/%2B1-2005551212"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "_embedded": {
                    "ls:broadworks-users": [
                        {
                            "_links": {
                                "self": {
                                    "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/users\/2005553001%40example.com"
                                }
                            },
                            "userId": "2005553001@example.com",
                            "lastName": "Smith",
                            "firstName": "John",
                            "extension": "3001",
                            "email": "jsmith@example.com",
                            "userType": "Normal"
                        }
                    ]
                },
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "phoneNumber": "+1-2005551212",
                "department": "Sales",
                "activated": true
            }

### DELETE
Unassign a phone number from a Group.

This request makes no attempt to check if the TN is actually assigned on the Group,
nor does it check to see if the TN allowed to be deleted. In future we may choose to use
тАЬGET /broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/{+phoneNumber}" to
first check for existence and verify that the TN is allowed to be deleted; in which case we could return
404 if the TN isn't assigned on the Group, or another 4xx if it's assigned but not allowed to be deleted
(e.g. if it's assigned to a (v)User).

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/activate
### POST
Activates one or more phone numbers and/or ranges of phone numbers in a BroadWorks Group.

+ Request (application/json)
    + Body

            {
                "phoneNumber": [
                    "+1-5553101001",
                    "+1-5553101002",
                    "+1-2225557777"
                ],
                "dnRange": [
                    {
                        "minPhoneNumber": "+1-5553101002",
                        "maxPhoneNumber": "+1-5553101003"
                    },
                    {
                        "minPhoneNumber": "+1-5553102000",
                        "maxPhoneNumber": "+1-5553102010"
                    }
                ]
            }

    + Schema

            {
                "title": "Activate Group Phone Number request body schema",
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 23,
                            "pattern": "^\\+\\d+-\\d+$"
                        }
                    },
                    "dnRange": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "minPhoneNumber": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 23,
                                    "pattern": "^\\+\\d+-\\d+$"
                                },
                                "maxPhoneNumber": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 23,
                                    "pattern": "^\\+\\d+-\\d+$"
                                }
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/deactivate
### POST
Deactivates one or more phone numbers and/or ranges of phone numbers in a BroadWorks Group.

+ Request (application/json)
    + Body

            {
                "phoneNumber": [
                    "+1-5553101001",
                    "+1-5553101002",
                    "+1-2225557777"
                ],
                "dnRange": [
                    {
                        "minPhoneNumber": "+1-5553101002",
                        "maxPhoneNumber": "+1-5553101003"
                    },
                    {
                        "minPhoneNumber": "+1-5553102000",
                        "maxPhoneNumber": "+1-5553102010"
                    }
                ]
            }

    + Schema

            {
                "title": "Deactivate Group Phone Number request body schema",
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 23,
                            "pattern": "^\\+\\d+-\\d+$"
                        }
                    },
                    "dnRange": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "minPhoneNumber": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 23,
                                    "pattern": "^\\+\\d+-\\d+$"
                                },
                                "maxPhoneNumber": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 23,
                                    "pattern": "^\\+\\d+-\\d+$"
                                }
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Groups - Services

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides all internal services related to services (authorizations, service packs) at the Group level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services
### GET
Retrieve the Group's service authorization detail.

*In the current implementation, some properties can be misleading, please note:*

* *When "Limited" is "Unlimited" or "none", then "Quantity" will be null. Otherwise, "Quantity" will be numeric.*
* *"Allocated" is a string, which may have value "Unlimited" or may have the string representation of a numeric value.*

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/services"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "servicePacksAuthorizationTable": {
                    "Admin": {
                        "Service Pack Name": "Admin",
                        "Authorized": true,
                        "Assigned": false,
                        "Limited": "Limited",
                        "Allocated": 10,
                        "Allowed": "Unlimited",
                        "Usage": 0,
                        "Description": null
                    },
                    "Standard": {
                        "Service Pack Name": "Standard",
                        "Authorized": true,
                        "Assigned": false,
                        "Limited": "Unlimited",
                        "Allocated": null,
                        "Allowed": "Unlimited",
                        "Usage": 5,
                        "Description": null
                    }
                },
                "groupServicesAuthorizationTable": {
                    "Account\/Authorization Codes": {
                        "Service Name": "Account\/Authorization Codes",
                        "Authorized": true,
                        "Assigned": false,
                        "Limited": "none",
                        "Quantity": null,
                        "Usage": "1",
                        "Licensed": true,
                        "Allowed": "Unlimited"
                    },
                    "Auto Attendant": {
                        "Service Name": "Auto Attendant",
                        "Authorized": true,
                        "Assigned": true,
                        "Limited": "Limited",
                        "Quantity": 10,
                        "Usage": 0,
                        "Licensed": true,
                        "Allowed": 20
                    },
                    "etc": "truncated for brevity"
                },
                "userServicesAuthorizationTable": {
                    "3G\/4G Continuity": {
                        "Service Name": "3G\/4G Continuity",
                        "Authorized": true,
                        "Assigned": false,
                        "Limited": "Unlimited",
                        "Quantity": null,
                        "Usage": 1,
                        "Licensed": false,
                        "Allowed": "Unlimited",
                        "User Assignable": true,
                        "Group Service Assignable": true
                    },
                    "Advice Of Charge": {
                        "Service Name": "Advice Of Charge",
                        "Authorized": true,
                        "Assigned": false,
                        "Limited": "Limited",
                        "Quantity": 5,
                        "Usage": 2,
                        "Licensed": true,
                        "Allowed": "Unlimited",
                        "User Assignable": true,
                        "Group Service Assignable": true
                    },
                    "etc": "truncated for brevity"
                }
            }

    + Schema

            {
                "title": "Retrieve Group Services Authorizations response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "servicePacksAuthorizationTable": {
                        "type": "object",
                        "required": true,
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Service Pack Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "required": true
                                    },
                                    "Authorized": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Assigned": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Limited": {
                                        "enum": [
                                            "Unlimited",
                                            "Limited"
                                        ],
                                        "required": true
                                    },
                                    "Allocated": {
                                        "type": [
                                            "string",
                                            "integer",
                                            "null"
                                        ],
                                        "required": true
                                    },
                                    "Allowed": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "Usage": {
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "groupServicesAuthorizationTable": {
                        "type": "object",
                        "required": true,
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Service Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "required": true
                                    },
                                    "Authorized": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Assigned": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Limited": {
                                        "enum": [
                                            "Unlimited",
                                            "Limited",
                                            "none"
                                        ],
                                        "required": true
                                    },
                                    "Quantity": {
                                        "type": [
                                            "null",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "Usage": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "Licensed": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Allowed": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "userServicesAuthorizationTable": {
                        "type": "object",
                        "required": true,
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Service Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "required": true
                                    },
                                    "Authorized": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Assigned": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Limited": {
                                        "enum": [
                                            "Unlimited",
                                            "Limited"
                                        ],
                                        "required": true
                                    },
                                    "Quantity": {
                                        "type": [
                                            "null",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "Usage": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "Licensed": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Allowed": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "required": true
                                    },
                                    "User Assignable": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "Group Service Assignable": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                }
            }

### PUT
Update the Group's service authorizations. Each of servicePacksAuthorizationTable, groupServicesAuthorizationTable, and
userServicesAuthorizationTable may contain zero or more entries (or be omitted entirely). Invalid combinations
(for example, Authorized=false with Limited=Unlimited) may result in an 500 Internal Server Error
or a 400 Bad Request, depending on the response from the BroadWorks Utility Service.

+ Request (application/json)
    + Body

            {
                "servicePacksAuthorizationTable": {
                    "Admin": {
                        "Authorized": true,
                        "Limited": "Unlimited"
                    },
                    "Standard": {
                        "Authorized": true,
                        "Limited": "Limited",
                        "Allocated": 10
                    }
                },
                "groupServicesAuthorizationTable": {
                    "Auto Attendant": {
                        "Authorized": false
                    },
                    "Group Paging": {
                        "Authorized": true,
                        "Limited": "Unlimited"
                    },
                    "Hunt Group": {
                        "Authorized": true,
                        "Limited": "Limited",
                        "Quantity": 20
                    }
                },
                "userServicesAuthorizationTable": {
                    "Remote Office": {
                        "Authorized": false
                    },
                    "Authentication": {
                        "Authorized": true,
                        "Limited": "Unlimited"
                    },
                    "Call Waiting": {
                        "Authorized": true,
                        "Limited": "Limited",
                        "Quantity": 20
                    }
                }
            }

    + Schema

            {
                "title": "Modify Group Services Authorizations request body schema",
                "properties": {
                    "servicePacksAuthorizationTable": {
                        "type": "object",
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Authorized": {
                                        "type": "boolean"
                                    },
                                    "Limited": {
                                        "enum": [
                                            "Unlimited",
                                            "Limited"
                                        ]
                                    },
                                    "Allocated": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "groupServicesAuthorizationTable": {
                        "type": "object",
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Authorized": {
                                        "type": "boolean"
                                    },
                                    "Limited": {
                                        "enum": [
                                            "Unlimited",
                                            "Limited"
                                        ]
                                    },
                                    "Quantity": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "userServicesAuthorizationTable": {
                        "type": "object",
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Authorized": {
                                        "type": "boolean"
                                    },
                                    "Limited": {
                                        "enum": [
                                            "Unlimited",
                                            "Limited"
                                        ]
                                    },
                                    "Quantity": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/assignServices
### POST
Assign Group service(s) on Group <br />
Note: Assigning multiple services is not an atomic operation in BroadWorks.
If some service(s) in the specified list cannot be assigned to group, BroadWorks does not rollback services from the same request that were assigned successfully.
If at least one service has failed during assignment, failure response is returned, however this does not mean no services were assigned.

+ Request (application/json)
    + Body

            {
                "serviceName": [
                    "Auto Attendant",
                    "Hunt Group"
                ]
            }

    + Schema

            {
                "title": "Assign Services to Group request body schema",
                "type": "object",
                "properties": {
                    "serviceName": {
                        "type": "array",
                        "minItems": 1,
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 80
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/unassignServices
### POST
Unassign Group service(s) from Group <br />
Note: Unassigning multiple services is not an atomic operation in BroadWorks.
If some service(s) in the specified list cannot be unassigned from group, BroadWorks does not rollback services from the same request that were unassigned successfully.
If at least one service has failed during unassignment, failure response is returned, however this does not mean no services were unassigned.

+ Request (application/json)
    + Body

            {
                "serviceName": [
                    "Auto Attendant",
                    "Hunt Group"
                ]
            }

    + Schema

            {
                "title": "Unassign Services from Group request body schema",
                "type": "object",
                "properties": {
                    "serviceName": {
                        "type": "array",
                        "minItems": 1,
                        "required": true,
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 80
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Third-Party%20Voice%20Mail%20Support
### GET
Retrieve group-level settings of Third-Party Voice Mail user service

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/services\/Third-Party%20Voice%20Mail%20Support"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "isActive": true,
                "groupServer": "+1-2005553001"
            }

    + Schema

            {
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "groupServer": {
                        "type": "string"
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    }
                }
            }

### PUT
Update group-level settings of Third-Party Voice Mail user service

+ Request (application/json)
    + Body

            {
                "isActive": true,
                "groupServer": "+1-2005553001"
            }

    + Schema

            {
                "title": "Modify Group 3PVM service settings request body schema",
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "groupServer": {
                        "id": "OutgoingDNorSIPURI",
                        "anyOf": [
                            {
                                "id": "E.164 DN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "A formatted TN.",
                                "pattern": "^\\+\\d+-\\d+$",
                                "minLength": 1,
                                "maxLength": 23,
                                "required": false
                            },
                            {
                                "id": "non-E.164 DN",
                                "type": "string",
                                "description": "A non-E.164 formatted TN.",
                                "pattern": "^[\\d\\-]+$",
                                "minLength": 1,
                                "maxLength": 23,
                                "required": false
                            },
                            {
                                "id": "SIP URI",
                                "type": "string",
                                "description": "SIP URI",
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$",
                                "minLength": 1,
                                "maxLength": 161,
                                "required": false
                            }
                        ]
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Voice%20Portal
### GET
Retrieve group-level settings of Voice Portal service

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/services\/Voice%20Portal"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "serviceUserId": "170630991_104585901_VMR@exampledomain",
                "serviceInstanceProfile": {
                    "name": "Voice Portal",
                    "callingLineIdLastName": "Voice Portal",
                    "callingLineIdFirstName": "Voice Portal",
                    "hiraganaLastName": "Voice Portal",
                    "hiraganaFirstName": "Voice Portal",
                    "phoneNumber": "2005553001",
                    "extension": "2456",
                    "countryCode": "USA",
                    "nationalPrefix": "USA",
                    "department": {
                        "serviceProviderId": "Example Com",
                        "groupId": "Example Com - North",
                        "name": "dep"
                    },
                    "language": "English",
                    "timeZone": "America\/New_York",
                    "timeZoneDisplayName": "(GMT-05:00) (US) Eastern Time",
                    "alias": "test@example.com",
                    "publicUserIdentity": "test2@example.com",
                    "callingLineIdPhoneNumber": "2005553002"
                },
                "isActive": true,
                "enableExtendedScope": false,
                "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin": false,
                "useVoicePortalWizard": true,
                "voicePortalExternalRoutingScope": "System",
                "useExternalRouting": false,
                "externalRoutingAddress": "test3@example.com",
                "homeZoneName": "exampleHomeZone",
                "networkClassOfService": "exampleNCoS"
            }

    + Schema

            {
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "serviceUserId": {
                        "type": "string"
                    },
                    "serviceInstanceProfile": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "callingLineIdLastName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "callingLineIdFirstName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "hiraganaLastName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "hiraganaFirstName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "phoneNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            "extension": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 20,
                                "pattern": "^[\\d\\-]+$"
                            },
                            "countryCode": {
                                "type": "string"
                            },
                            "nationalPrefix": {
                                "type": "string"
                            },
                            "department": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    }
                                }
                            },
                            "language": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40
                            },
                            "timeZone": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 127
                            },
                            "timeZoneDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 127
                            },
                            "alias": {
                                "type": [
                                    "string",
                                    "array"
                                ]
                            },
                            "publicUserIdentity": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            },
                            "callingLineIdPhoneNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            }
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "enableExtendedScope": {
                        "type": "boolean"
                    },
                    "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin": {
                        "type": "boolean"
                    },
                    "useVoicePortalWizard": {
                        "type": "boolean"
                    },
                    "voicePortalExternalRoutingScope": {
                        "enum": [
                            "Group",
                            "System"
                        ]
                    },
                    "useExternalRouting": {
                        "type": "boolean"
                    },
                    "externalRoutingAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                    },
                    "homeZoneName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "networkClassOfService": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    }
                }
            }

### PUT
Update group-level settings of Voice Portal group service

+ Request (application/json)
    + Body

            {
                "serviceInstanceProfile": {
                    "name": "Voice Portal",
                    "callingLineIdLastName": "Voice Portal",
                    "callingLineIdFirstName": "Voice Portal",
                    "hiraganaLastName": "Voice Portal",
                    "hiraganaFirstName": "Voice Portal",
                    "phoneNumber": "2005553001",
                    "extension": "2456",
                    "password": "example",
                    "department": {
                        "serviceProviderId": "Example Com",
                        "groupId": "Example Com - North",
                        "name": "dep"
                    },
                    "language": "English",
                    "timeZone": "America\/New_York",
                    "timeZoneDisplayName": "(GMT-05:00) (US) Eastern Time",
                    "sipAliasList": {
                        "sipAlias": [
                            "test@example.com"
                        ]
                    },
                    "publicUserIdentity": "test2@example.com",
                    "callingLineIdPhoneNumber": "2005553002"
                },
                "isActive": true,
                "enableExtendedScope": false,
                "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin": false,
                "useVoicePortalWizard": true,
                "voicePortalExternalRoutingScope": "System",
                "useExternalRouting": false,
                "externalRoutingAddress": "test3@example.com",
                "homeZoneName": "exampleHomeZone",
                "networkClassOfService": "exampleNCoS"
            }

    + Schema

            {
                "title": "Modify Group Voice Portal service settings request body schema",
                "type": "object",
                "properties": {
                    "serviceInstanceProfile": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "callingLineIdLastName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "callingLineIdFirstName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "hiraganaLastName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "hiraganaFirstName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "phoneNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            "extension": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 20,
                                "pattern": "^[\\d\\-]+$"
                            },
                            "password": {
                                "type": "string"
                            },
                            "department": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    }
                                }
                            },
                            "language": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40
                            },
                            "timeZone": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 127
                            },
                            "timeZoneDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 127
                            },
                            "sipAliasList": {
                                "type": "object",
                                "properties": {
                                    "sipAlias": {
                                        "type": [
                                            "string",
                                            "array"
                                        ]
                                    }
                                }
                            },
                            "publicUserIdentity": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            },
                            "callingLineIdPhoneNumber": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            }
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "enableExtendedScope": {
                        "type": "boolean"
                    },
                    "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin": {
                        "type": "boolean"
                    },
                    "useVoicePortalWizard": {
                        "type": "boolean"
                    },
                    "voicePortalExternalRoutingScope": {
                        "enum": [
                            "Group",
                            "System"
                        ]
                    },
                    "useExternalRouting": {
                        "type": "boolean"
                    },
                    "externalRoutingAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                    },
                    "homeZoneName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "networkClassOfService": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Speed%20Dial%20100
### GET
Retrieve group-level settings of Speed Dial 100 service

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/services\/Speed%20Dial%20100"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "prefix": "#"
            }

    + Schema

            {
                "title": "Retrieve Group Speed Dial 100 service response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "prefix": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2,
                        "pattern": "^[A-D0-9\\*\\#]+$"
                    }
                }
            }

### PUT
Update group-level settings of Speed Dial 100 service

+ Request (application/json)
    + Body

            {
                "prefix": "#"
            }

    + Schema

            {
                "title": "Modify Speed Dial 100 service settings request body schema",
                "type": "object",
                "properties": {
                    "prefix": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2,
                        "pattern": "^[A-D0-9\\*\\#]+$"
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Groups - Trunking Call Capacity

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides all internal services related to Trunking Call Capacity settings, Max Active Calls and Bursting Max Active Calls, at the Group level.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/trunking-call-capacity
### GET
Retrieve Trunking Call Capacity settings for a Group.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/trunking-call-capacity"
                    }
                },
                "maxActiveCalls": 0,
                "maxAvailableActiveCalls": {
                    "quantity": 4
                },
                "burstingMaxActiveCalls": {
                    "quantity": 0
                },
                "burstingMaxAvailableActiveCalls": {
                    "quantity": 3
                },
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "ne_id": "asp1_r21",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve Group Trunking Call Capacity response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "maxActiveCalls": {
                        "type": "integer"
                    },
                    "maxAvailableActiveCalls": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "quantity": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    },
                    "burstingMaxActiveCalls": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "quantity": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    },
                    "burstingMaxAvailableActiveCalls": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "quantity": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }

+ Response 404 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "NOT_FOUND",
                "externalErrorCode": "4152",
                "externalErrorSummary": "[Error 4152] Group not found: Example Com:Bogus Group",
                "externalErrorDetail": "[Error 4152] Group not found: Example Com:Bogus Group"
            }

    + Schema

            {
                "title": "Retrieve Group Trunking Call Capacity response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "maxActiveCalls": {
                        "type": "integer"
                    },
                    "maxAvailableActiveCalls": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "quantity": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    },
                    "burstingMaxActiveCalls": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "quantity": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    },
                    "burstingMaxAvailableActiveCalls": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "quantity": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }

### PUT
Update the Trunking Call Capacity settings to Group.

+ Request (application/json)
    + Body

            {
                "maxActiveCalls": 10,
                "burstingMaxActiveCalls": {
                    "unlimited": true,
                    "quantity": 20
                }
            }

    + Schema

            {
                "title": "Modify Group Trunking Call Capacity request body schema",
                "properties": {
                    "maxActiveCalls": {
                        "type": "integer"
                    },
                    "burstingMaxActiveCalls": {
                        "type": "object",
                        "properties": {
                            "quantity": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "unlimited": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "NOT_FOUND",
                "externalErrorCode": "4152",
                "externalErrorSummary": "[Error 4152] Group not found: Example Com:Bogus Group",
                "externalErrorDetail": "[Error 4152] Group not found: Example Com:Bogus Group"
            }

# Group BroadWorks Groups - Trunk Groups

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides all internal services related to Group Trunk Groups.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups
### GET
Retrieve Trunk Groups list from a Group.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/trunk-groups"
                    }
                },
                "trunkGroupTable": {
                    "6502342177": {
                        "Name": "6502342177",
                        "Department": "",
                        "Device Name": "TrunkGroup_2177",
                        "Device Level": "Group",
                        "Group Id": "Example Com - North"
                    }
                },
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "ne_id": "asp1_r21",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve Group Trunk Groups response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "trunkGroupTable": {
                        "type": "object",
                        "required": true,
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "Department": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    },
                                    "Device Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 40
                                    },
                                    "Device Level": {
                                        "enum": [
                                            "System",
                                            "Service Provider",
                                            "Group"
                                        ]
                                    },
                                    "Group Id": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                }
            }

+ Response 404 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "NOT_FOUND",
                "externalErrorCode": "4152",
                "externalErrorSummary": "[Error 4152] Group not found: Example Com:Bogus Group",
                "externalErrorDetail": "[Error 4152] Group not found: Example Com:Bogus Group"
            }

    + Schema

            {
                "title": "Retrieve Group Trunk Groups response body schema",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "trunkGroupTable": {
                        "type": "object",
                        "required": true,
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "Department": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    },
                                    "Device Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 40
                                    },
                                    "Device Level": {
                                        "enum": [
                                            "System",
                                            "Service Provider",
                                            "Group"
                                        ]
                                    },
                                    "Group Id": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                }
            }

### POST
Create a Trunk Group.

+ Request (application/json)
    + Body

            {
                "name": "Trunk Group",
                "pilotUser": {
                    "userId": "trunkgroupuser@example.com",
                    "lastName": "ln",
                    "firstName": "fn",
                    "callingLineIdLastName": "clidln",
                    "callingLineIdFirstName": "clidfn",
                    "hiraganaLastName": "hln",
                    "hiraganaFirstName": "hfn",
                    "password": "CL@r1soft",
                    "department": {
                        "serviceProviderId": "Example Com",
                        "groupId": "Example Com - North",
                        "name": "Sales"
                    },
                    "language": "English",
                    "timeZone": "America\/New_York",
                    "linePort": "lineport@example.com",
                    "contact": [
                        "C1",
                        "C2",
                        "C3",
                        "C4",
                        "C5"
                    ]
                },
                "department": {
                    "serviceProviderId": "Example Com",
                    "groupId": "Example Com - North",
                    "name": "Sales"
                },
                "accessDevice": {
                    "deviceLevel": "Group",
                    "deviceName": "AdtranTest"
                },
                "maxActiveCalls": 10,
                "maxIncomingCalls": 5,
                "maxOutgoingCalls": 5,
                "enableBursting": true,
                "burstingMaxActiveCalls": 10,
                "burstingMaxIncomingCalls": 5,
                "burstingMaxOutgoingCalls": 5,
                "capacityExceededAction": "Forward",
                "capacityExceededForwardAddress": "cefa@test.com",
                "capacityExceededRerouteTrunkGroupKey": {
                    "serviceProviderId": "Example Com",
                    "groupId": "Example Com - North",
                    "name": "6123456789"
                },
                "capacityExceededTrapInitialCalls": 5,
                "capacityExceededTrapOffsetCalls": 5,
                "unreachableDestinationAction": "Forward",
                "unreachableDestinationForwardAddress": "udfa@test.com",
                "unreachableDestinationRerouteTrunkGroupKey": {
                    "serviceProviderId": "Example Com",
                    "groupId": "Example Com - North",
                    "name": "6123456789"
                },
                "invitationTimeout": 10,
                "requireAuthentication": true,
                "sipAuthenticationUserName": "trunkGroupTest",
                "sipAuthenticationPassword": "CL@r1soft",
                "hostedUserId": [
                    "5500000001@example.com",
                    "5500000002@example.com"
                ],
                "trunkGroupIdentity": "TrunkGroupTest@example.com",
                "otgDtgIdentity": "otgDtgIdentityTest",
                "allowTerminationToTrunkGroupIdentity": true,
                "allowTerminationToDtgIdentity": true,
                "includeTrunkGroupIdentity": true,
                "includeDtgIdentity": true,
                "includeTrunkGroupIdentityForNetworkCalls": true,
                "includeOtgIdentityForNetworkCalls": false,
                "enableNetworkAddressIdentity": false,
                "allowUnscreenedCalls": true,
                "allowUnscreenedEmergencyCalls": true,
                "pilotUserCallingLineIdentityPolicy": "All Originating Calls",
                "pilotUserChargeNumberPolicy": "All Originating Calls",
                "callForwardingAlwaysAction": "Forward",
                "callForwardingAlwaysForwardAddress": "cfafa@test.com",
                "callForwardingAlwaysRerouteTrunkGroupKey": {
                    "serviceProviderId": "Example Com",
                    "groupId": "Example Com - North",
                    "name": "6123456789"
                },
                "peeringDomain": "example.com",
                "routeToPeeringDomain": true,
                "prefixEnabled": false,
                "prefix": "1234",
                "statefulReroutingEnabled": true,
                "sendContinuousOptionsMessage": true,
                "continuousOptionsSendingIntervalSeconds": 30,
                "failureOptionsSendingIntervalSeconds": 30,
                "failureThresholdCounter": 5,
                "successThresholdCounter": 5,
                "inviteFailureThresholdCounter": 5,
                "inviteFailureThresholdWindowSeconds": 30,
                "pilotUserCallingLineAssertedIdentityPolicy": "All Originating Calls",
                "useSystemCallingLineAssertedIdentityPolicy": true
            }

    + Schema

            {
                "title": "Create Group Trunk Group request body schema",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "pilotUser": {
                        "properties": {
                            "userId": {
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$",
                                "required": true
                            },
                            "lastName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "firstName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "callingLineIdLastName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "callingLineIdFirstName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "hiraganaLastName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "hiraganaFirstName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "password": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 60
                            },
                            "department": {
                                "type": "object",
                                "properties": {
                                    "serviceProviderId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50,
                                        "required": true
                                    }
                                }
                            },
                            "language": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40
                            },
                            "timeZone": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 127
                            },
                            "linePort": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "required": true
                            },
                            "contact": {
                                "type": "array",
                                "minItems": 0,
                                "maxItems": 5,
                                "items": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1020
                                }
                            }
                        }
                    },
                    "department": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50,
                                "required": true
                            }
                        }
                    },
                    "accessDevice": {
                        "type": "object",
                        "properties": {
                            "deviceLevel": {
                                "enum": [
                                    "System",
                                    "Service Provider",
                                    "Group"
                                ],
                                "required": true
                            },
                            "deviceName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40,
                                "required": true
                            }
                        }
                    },
                    "maxActiveCalls": {
                        "type": "integer",
                        "minimum": 1,
                        "required": true
                    },
                    "maxIncomingCalls": {
                        "anyOf": [
                            {
                                "description": "Schema for BroadWorks version < R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 999999
                            },
                            {
                                "description": "Schema for BroadWorks version R21",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 999999
                            }
                        ]
                    },
                    "maxOutgoingCalls": {
                        "anyOf": [
                            {
                                "description": "Schema for BroadWorks version < R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 999999
                            },
                            {
                                "description": "Schema for BroadWorks version R21",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 999999
                            }
                        ]
                    },
                    "enableBursting": {
                        "type": "boolean",
                        "required": true
                    },
                    "burstingMaxActiveCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999
                    },
                    "burstingMaxIncomingCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999
                    },
                    "burstingMaxOutgoingCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999
                    },
                    "capacityExceededAction": {
                        "enum": [
                            "Forward",
                            "Reroute"
                        ]
                    },
                    "capacityExceededForwardAddress": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "capacityExceededRerouteTrunkGroupKey": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            }
                        }
                    },
                    "capacityExceededTrapInitialCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "required": true
                    },
                    "capacityExceededTrapOffsetCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "required": true
                    },
                    "unreachableDestinationAction": {
                        "enum": [
                            "Forward",
                            "Reroute"
                        ]
                    },
                    "unreachableDestinationForwardAddress": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "unreachableDestinationRerouteTrunkGroupKey": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            }
                        }
                    },
                    "invitationTimeout": {
                        "required": true,
                        "anyOf": [
                            {
                                "description": "Schema for BroadWorks version < R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 15
                            },
                            {
                                "description": "Schema for BroadWorks version R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 255
                            }
                        ]
                    },
                    "requireAuthentication": {
                        "type": "boolean",
                        "required": true
                    },
                    "sipAuthenticationUserName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "sipAuthenticationPassword": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "hostedUserId": {
                        "type": "array",
                        "minItems": 0,
                        "items": {
                            "minLength": 1,
                            "maxLength": 161,
                            "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$"
                        }
                    },
                    "trunkGroupIdentity": {
                        "description": "SIP URI",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                    },
                    "otgDtgIdentity": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "allowTerminationToTrunkGroupIdentity": {
                        "type": "boolean",
                        "required": true
                    },
                    "allowTerminationToDtgIdentity": {
                        "type": "boolean",
                        "required": true
                    },
                    "includeTrunkGroupIdentity": {
                        "type": "boolean",
                        "required": true
                    },
                    "includeDtgIdentity": {
                        "type": "boolean",
                        "required": true
                    },
                    "includeTrunkGroupIdentityForNetworkCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "includeOtgIdentityForNetworkCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "enableNetworkAddressIdentity": {
                        "type": "boolean",
                        "required": true
                    },
                    "allowUnscreenedCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "allowUnscreenedEmergencyCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "pilotUserCallingLineIdentityPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ],
                        "required": true
                    },
                    "pilotUserChargeNumberPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ],
                        "required": true
                    },
                    "callForwardingAlwaysAction": {
                        "enum": [
                            "Forward",
                            "Reroute"
                        ]
                    },
                    "callForwardingAlwaysForwardAddress": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "callForwardingAlwaysRerouteTrunkGroupKey": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            }
                        }
                    },
                    "peeringDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "routeToPeeringDomain": {
                        "type": "boolean",
                        "required": true
                    },
                    "prefixEnabled": {
                        "type": "boolean",
                        "required": true
                    },
                    "prefix": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                    },
                    "statefulReroutingEnabled": {
                        "type": "boolean",
                        "required": true
                    },
                    "sendContinuousOptionsMessage": {
                        "type": "boolean",
                        "required": true
                    },
                    "continuousOptionsSendingIntervalSeconds": {
                        "type": "integer",
                        "minimum": 30,
                        "maximum": 86400,
                        "required": true
                    },
                    "failureOptionsSendingIntervalSeconds": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 86400,
                        "required": true
                    },
                    "failureThresholdCounter": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60,
                        "required": true
                    },
                    "successThresholdCounter": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60,
                        "required": true
                    },
                    "inviteFailureThresholdCounter": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60,
                        "required": true
                    },
                    "inviteFailureThresholdWindowSeconds": {
                        "type": "integer",
                        "minimum": 30,
                        "maximum": 240,
                        "required": true
                    },
                    "pilotUserCallingLineAssertedIdentityPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls"
                        ],
                        "required": true
                    },
                    "useSystemCallingLineAssertedIdentityPolicy": {
                        "type": "boolean",
                        "required": true
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/broadworks/1/serviceProviders/Example%20Com/groups/Example%20Com%20-%20North/trunk-groups/Trunk%20Group

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/trunk-groups\/Trunk%20Group"
                    }
                },
                "name": "Trunk Group",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "ne_id": "asp1_r21",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Create Group Trunk Group response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    }
                }
            }

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups/{+trunkGroupName}
### GET
Retrieve a Trunk Group.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/trunk-groups\/Trunk%20Group"
                    }
                },
                "maxActiveCalls": 1,
                "enableBursting": false,
                "capacityExceededTrapInitialCalls": 5,
                "capacityExceededTrapOffsetCalls": 5,
                "invitationTimeout": 10,
                "requireAuthentication": false,
                "hostedUserTable": [],
                "allowTerminationToTrunkGroupIdentity": true,
                "allowTerminationToDtgIdentity": true,
                "includeTrunkGroupIdentity": true,
                "includeDtgIdentity": true,
                "includeTrunkGroupIdentityForNetworkCalls": true,
                "includeOtgIdentityForNetworkCalls": false,
                "enableNetworkAddressIdentity": false,
                "allowUnscreenedCalls": true,
                "allowUnscreenedEmergencyCalls": true,
                "pilotUserChargeNumberPolicy": "All Originating Calls",
                "routeToPeeringDomain": true,
                "prefixEnabled": false,
                "statefulReroutingEnabled": true,
                "sendContinuousOptionsMessage": true,
                "continuousOptionsSendingIntervalSeconds": 30,
                "failureOptionsSendingIntervalSeconds": 30,
                "failureThresholdCounter": 5,
                "successThresholdCounter": 5,
                "inviteFailureThresholdCounter": 5,
                "inviteFailureThresholdWindowSeconds": 30,
                "trunkGroupState": "Available",
                "pilotUserCallingLineAssertedIdentityPolicy": "All Originating Calls",
                "useSystemCallingLineAssertedIdentityPolicy": true,
                "pilotUserCallingLineIdentityPolicy": "All Originating Calls",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "name": "Trunk Group",
                "ne_id": "asp1_r21",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve Group Trunk Group response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "pilotUserId": {
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$"
                    },
                    "department": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50,
                                "required": true
                            }
                        }
                    },
                    "accessDevice": {
                        "type": "object",
                        "properties": {
                            "deviceLevel": {
                                "enum": [
                                    "System",
                                    "Service Provider",
                                    "Group"
                                ],
                                "required": true
                            },
                            "deviceName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40,
                                "required": true
                            }
                        }
                    },
                    "maxActiveCalls": {
                        "type": "integer",
                        "minimum": 1,
                        "required": true
                    },
                    "maxIncomingCalls": {
                        "anyOf": [
                            {
                                "description": "Schema for BroadWorks version < R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 999999
                            },
                            {
                                "description": "Schema for BroadWorks version R21",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 999999
                            }
                        ]
                    },
                    "maxOutgoingCalls": {
                        "anyOf": [
                            {
                                "description": "Schema for BroadWorks version < R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 999999
                            },
                            {
                                "description": "Schema for BroadWorks version R21",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 999999
                            }
                        ]
                    },
                    "enableBursting": {
                        "type": "boolean",
                        "required": true
                    },
                    "burstingMaxActiveCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999
                    },
                    "burstingMaxIncomingCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999
                    },
                    "burstingMaxOutgoingCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999
                    },
                    "capacityExceededAction": {
                        "enum": [
                            "Forward",
                            "Reroute"
                        ]
                    },
                    "capacityExceededForwardAddress": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "capacityExceededRerouteTrunkGroupKey": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            }
                        }
                    },
                    "capacityExceededTrapInitialCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "required": true
                    },
                    "capacityExceededTrapOffsetCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "required": true
                    },
                    "unreachableDestinationAction": {
                        "enum": [
                            "Forward",
                            "Reroute"
                        ]
                    },
                    "unreachableDestinationForwardAddress": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "unreachableDestinationRerouteTrunkGroupKey": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            }
                        }
                    },
                    "invitationTimeout": {
                        "required": true,
                        "anyOf": [
                            {
                                "description": "Schema for BroadWorks version < R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 15
                            },
                            {
                                "description": "Schema for BroadWorks version R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 255
                            }
                        ]
                    },
                    "requireAuthentication": {
                        "type": "boolean",
                        "required": true
                    },
                    "sipAuthenticationUserName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "sipAuthenticationPassword": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "hostedUserTable": {
                        "type": "array",
                        "minItems": 0
                    },
                    "trunkGroupIdentity": {
                        "description": "SIP URI",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                    },
                    "otgDtgIdentity": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "allowTerminationToTrunkGroupIdentity": {
                        "type": "boolean",
                        "required": true
                    },
                    "allowTerminationToDtgIdentity": {
                        "type": "boolean",
                        "required": true
                    },
                    "includeTrunkGroupIdentity": {
                        "type": "boolean",
                        "required": true
                    },
                    "includeDtgIdentity": {
                        "type": "boolean",
                        "required": true
                    },
                    "includeTrunkGroupIdentityForNetworkCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "includeOtgIdentityForNetworkCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "enableNetworkAddressIdentity": {
                        "type": "boolean",
                        "required": true
                    },
                    "allowUnscreenedCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "allowUnscreenedEmergencyCalls": {
                        "type": "boolean",
                        "required": true
                    },
                    "pilotUserCallingLineIdentityPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ],
                        "required": true
                    },
                    "pilotUserChargeNumberPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ],
                        "required": true
                    },
                    "callForwardingAlwaysAction": {
                        "enum": [
                            "Forward",
                            "Reroute"
                        ]
                    },
                    "callForwardingAlwaysForwardAddress": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "callForwardingAlwaysRerouteTrunkGroupKey": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            }
                        }
                    },
                    "peeringDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "routeToPeeringDomain": {
                        "type": "boolean",
                        "required": true
                    },
                    "prefixEnabled": {
                        "type": "boolean",
                        "required": true
                    },
                    "prefix": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                    },
                    "statefulReroutingEnabled": {
                        "type": "boolean",
                        "required": true
                    },
                    "sendContinuousOptionsMessage": {
                        "type": "boolean",
                        "required": true
                    },
                    "continuousOptionsSendingIntervalSeconds": {
                        "type": "integer",
                        "minimum": 30,
                        "maximum": 86400,
                        "required": true
                    },
                    "failureOptionsSendingIntervalSeconds": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 86400,
                        "required": true
                    },
                    "failureThresholdCounter": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60,
                        "required": true
                    },
                    "successThresholdCounter": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60,
                        "required": true
                    },
                    "inviteFailureThresholdCounter": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60,
                        "required": true
                    },
                    "inviteFailureThresholdWindowSeconds": {
                        "type": "integer",
                        "minimum": 30,
                        "maximum": 240,
                        "required": true
                    },
                    "pilotUserCallingLineAssertedIdentityPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls"
                        ],
                        "required": true
                    },
                    "useSystemCallingLineAssertedIdentityPolicy": {
                        "type": "boolean",
                        "required": true
                    }
                }
            }

### PUT
Modify a Trunk Group.

+ Request (application/json)
    + Body

            {
                "newName": "New Trunk Group",
                "pilotUserId": "TrunkGroupTestUser@example.com",
                "department": {
                    "serviceProviderId": "Example Com",
                    "groupId": "Example Com - North",
                    "name": "dep1"
                },
                "accessDevice": {
                    "deviceLevel": "Group",
                    "deviceName": "AdtranTest"
                },
                "maxActiveCalls": 10,
                "maxIncomingCalls": 5,
                "maxOutgoingCalls": 5,
                "enableBursting": true,
                "burstingMaxActiveCalls": 10,
                "burstingMaxIncomingCalls": 5,
                "burstingMaxOutgoingCalls": 5,
                "capacityExceededAction": "Forward",
                "capacityExceededForwardAddress": "cefa@test.com",
                "capacityExceededRerouteTrunkGroupKey": {
                    "serviceProviderId": "Example Com",
                    "groupId": "Example Com - North",
                    "name": "6123456789"
                },
                "capacityExceededTrapInitialCalls": 5,
                "capacityExceededTrapOffsetCalls": 5,
                "unreachableDestinationAction": "Forward",
                "unreachableDestinationForwardAddress": "udfa@test.com",
                "unreachableDestinationRerouteTrunkGroupKey": {
                    "serviceProviderId": "Example Com",
                    "groupId": "Example Com - North",
                    "name": "6123456789"
                },
                "invitationTimeout": 10,
                "requireAuthentication": true,
                "sipAuthenticationUserName": "newtrunkGroup",
                "sipAuthenticationPassword": "pass@#!",
                "hostedUserIdList": {
                    "userId": [
                        "5500000001@example.com",
                        "5500000002@example.com"
                    ]
                },
                "trunkGroupIdentity": "TrunkGroupTest@r21.clarisoft.com",
                "otgDtgIdentity": "otgDtgIdentityTest",
                "allowTerminationToTrunkGroupIdentity": true,
                "allowTerminationToDtgIdentity": true,
                "includeTrunkGroupIdentity": true,
                "includeDtgIdentity": true,
                "includeTrunkGroupIdentityForNetworkCalls": true,
                "includeOtgIdentityForNetworkCalls": false,
                "enableNetworkAddressIdentity": false,
                "allowUnscreenedCalls": true,
                "allowUnscreenedEmergencyCalls": true,
                "pilotUserCallingLineIdentityPolicy": "All Originating Calls",
                "pilotUserChargeNumberPolicy": "All Originating Calls",
                "callForwardingAlwaysAction": "Forward",
                "callForwardingAlwaysForwardAddress": "cfafa@test.com",
                "callForwardingAlwaysRerouteTrunkGroupKey": {
                    "serviceProviderId": "ATEntTest",
                    "groupId": "ATGroupTest",
                    "name": "6123456789"
                },
                "peeringDomain": "example.com",
                "routeToPeeringDomain": true,
                "prefixEnabled": false,
                "prefix": "1234",
                "statefulReroutingEnabled": true,
                "sendContinuousOptionsMessage": true,
                "continuousOptionsSendingIntervalSeconds": 30,
                "failureOptionsSendingIntervalSeconds": 30,
                "failureThresholdCounter": 5,
                "successThresholdCounter": 5,
                "inviteFailureThresholdCounter": 5,
                "inviteFailureThresholdWindowSeconds": 30,
                "pilotUserCallingLineAssertedIdentityPolicy": "All Originating Calls",
                "useSystemCallingLineAssertedIdentityPolicy": true
            }

    + Schema

            {
                "title": "Modify Group Trunk Group request body schema",
                "type": "object",
                "properties": {
                    "newName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "pilotUserId": {
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$"
                    },
                    "department": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50,
                                "required": true
                            }
                        }
                    },
                    "accessDevice": {
                        "type": "object",
                        "properties": {
                            "deviceLevel": {
                                "enum": [
                                    "System",
                                    "Service Provider",
                                    "Group"
                                ],
                                "required": true
                            },
                            "deviceName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40,
                                "required": true
                            }
                        }
                    },
                    "maxActiveCalls": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "maxIncomingCalls": {
                        "anyOf": [
                            {
                                "description": "Schema for BroadWorks version < R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 999999
                            },
                            {
                                "description": "Schema for BroadWorks version R21",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 999999
                            }
                        ]
                    },
                    "maxOutgoingCalls": {
                        "anyOf": [
                            {
                                "description": "Schema for BroadWorks version < R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 999999
                            },
                            {
                                "description": "Schema for BroadWorks version R21",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 999999
                            }
                        ]
                    },
                    "enableBursting": {
                        "type": "boolean"
                    },
                    "burstingMaxActiveCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999
                    },
                    "burstingMaxIncomingCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999
                    },
                    "burstingMaxOutgoingCalls": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999999
                    },
                    "capacityExceededAction": {
                        "enum": [
                            "Forward",
                            "Reroute"
                        ]
                    },
                    "capacityExceededForwardAddress": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "capacityExceededRerouteTrunkGroupKey": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            }
                        }
                    },
                    "capacityExceededTrapInitialCalls": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "capacityExceededTrapOffsetCalls": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "unreachableDestinationAction": {
                        "enum": [
                            "Forward",
                            "Reroute"
                        ]
                    },
                    "unreachableDestinationForwardAddress": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "unreachableDestinationRerouteTrunkGroupKey": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            }
                        }
                    },
                    "invitationTimeout": {
                        "anyOf": [
                            {
                                "description": "Schema for BroadWorks version < R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 15
                            },
                            {
                                "description": "Schema for BroadWorks version R21",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 255
                            }
                        ]
                    },
                    "requireAuthentication": {
                        "type": "boolean"
                    },
                    "sipAuthenticationUserName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "sipAuthenticationPassword": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "hostedUserIdList": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "type": "array",
                                "minItems": 0,
                                "items": {
                                    "minLength": 1,
                                    "maxLength": 161,
                                    "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$"
                                }
                            }
                        }
                    },
                    "trunkGroupIdentity": {
                        "description": "SIP URI",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                    },
                    "otgDtgIdentity": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "allowTerminationToTrunkGroupIdentity": {
                        "type": "boolean"
                    },
                    "allowTerminationToDtgIdentity": {
                        "type": "boolean"
                    },
                    "includeTrunkGroupIdentity": {
                        "type": "boolean"
                    },
                    "includeDtgIdentity": {
                        "type": "boolean"
                    },
                    "includeTrunkGroupIdentityForNetworkCalls": {
                        "type": "boolean"
                    },
                    "includeOtgIdentityForNetworkCalls": {
                        "type": "boolean"
                    },
                    "enableNetworkAddressIdentity": {
                        "type": "boolean"
                    },
                    "allowUnscreenedCalls": {
                        "type": "boolean"
                    },
                    "allowUnscreenedEmergencyCalls": {
                        "type": "boolean"
                    },
                    "pilotUserCallingLineIdentityPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ]
                    },
                    "pilotUserChargeNumberPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls",
                            "No Calls"
                        ]
                    },
                    "callForwardingAlwaysAction": {
                        "enum": [
                            "Forward",
                            "Reroute"
                        ]
                    },
                    "callForwardingAlwaysForwardAddress": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "callForwardingAlwaysRerouteTrunkGroupKey": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            }
                        }
                    },
                    "peeringDomain": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "routeToPeeringDomain": {
                        "type": "boolean"
                    },
                    "prefixEnabled": {
                        "type": "boolean"
                    },
                    "prefix": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                    },
                    "statefulReroutingEnabled": {
                        "type": "boolean"
                    },
                    "sendContinuousOptionsMessage": {
                        "type": "boolean"
                    },
                    "continuousOptionsSendingIntervalSeconds": {
                        "type": "integer",
                        "minimum": 30,
                        "maximum": 86400
                    },
                    "failureOptionsSendingIntervalSeconds": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 86400
                    },
                    "failureThresholdCounter": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60
                    },
                    "successThresholdCounter": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60
                    },
                    "inviteFailureThresholdCounter": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60
                    },
                    "inviteFailureThresholdWindowSeconds": {
                        "type": "integer",
                        "minimum": 30,
                        "maximum": 240
                    },
                    "pilotUserCallingLineAssertedIdentityPolicy": {
                        "enum": [
                            "All Originating Calls",
                            "Unscreened Originating Calls"
                        ]
                    },
                    "useSystemCallingLineAssertedIdentityPolicy": {
                        "type": "boolean"
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Delete a Trunk Group.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Groups - Devices

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides all internal services related to Group Devices.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/access-devices
### POST
Create a device.

+ Request (application/json)
    + Body

            {
                "deviceName": "AccessDeviceTest",
                "deviceType": "Polycom Soundpoint IP 500",
                "protocol": "SIP 2.0",
                "netAddress": "AddressTest",
                "port": 2000,
                "outboundProxyServerNetAddress": "opAddressTest",
                "stunServerNetAddress": "ssAddressTest",
                "macAddress": "A0B1C2d3e4F6",
                "serialNumber": "sNumberTest",
                "description": "description",
                "physicalLocation": "location",
                "transportProtocol": "TCP",
                "useCustomUserNamePassword": true,
                "accessDeviceCredentials": {
                    "userName": "AccessDeviceUserName",
                    "password": "pass#$g56"
                }
            }

    + Schema

            {
                "title": "Create Group Access Device request body schema",
                "type": "object",
                "properties": {
                    "deviceName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "deviceType": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "protocol": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "netAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1025,
                        "maximum": 65535
                    },
                    "outboundProxyServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "stunServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "macAddress": {
                        "type": "string",
                        "minLength": 12,
                        "maxLength": 12,
                        "pattern": "^[0-9A-Fa-f]{12}$"
                    },
                    "serialNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "physicalLocation": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1024
                    },
                    "transportProtocol": {
                        "enum": [
                            "UDP",
                            "TCP",
                            "Unspecified"
                        ]
                    },
                    "mobilityManagerProvisioningURL": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                    },
                    "mobilityManagerProvisioningUserName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                    },
                    "mobilityManagerProvisioningPassword": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                    },
                    "mobilityManagerDefaultOriginatingServiceKey": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999
                    },
                    "mobilityManagerDefaultTerminatingServiceKey": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999
                    },
                    "useCustomUserNamePassword": {
                        "type": "boolean"
                    },
                    "accessDeviceCredentials": {
                        "type": "object",
                        "properties": {
                            "userName": {
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$",
                                "required": true
                            },
                            "password": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 60,
                                "required": true
                            }
                        }
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/access-devices\/AccessDeviceTest"
                    }
                },
                "ne_id": "asp1_r21",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "deviceName": "AccessDeviceTest",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Create Group Access Device response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "deviceName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    }
                }
            }

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/access-devices/{+deviceName}
### GET
Retrieve profile settings of a BroadWorks Group device.

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/access-devices\/AccessDeviceTest"
                    }
                },
                "deviceType": "Polycom Soundpoint IP 500",
                "protocol": "SIP 2.0",
                "netAddress": "addresstest",
                "port": 2000,
                "outboundProxyServerNetAddress": "opAddressTest",
                "stunServerNetAddress": "ssAddressTest",
                "macAddress": "A0B1C2D3E4F6",
                "serialNumber": "sNumberTest",
                "description": "description",
                "numberOfPorts": {
                    "quantity": 3
                },
                "numberOfAssignedPorts": 0,
                "status": "Online",
                "configurationMode": "Default",
                "physicalLocation": "location",
                "transportProtocol": "TCP",
                "useCustomUserNamePassword": true,
                "userName": "AccessDeviceUserName",
                "ne_id": "asp1_r21",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "deviceName": "AccessDeviceTest",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve Group Access Device response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "deviceName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "deviceType": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "protocol": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "netAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1025,
                        "maximum": 65535
                    },
                    "outboundProxyServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "stunServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "macAddress": {
                        "type": "string",
                        "minLength": 12,
                        "maxLength": 12,
                        "pattern": "^[0-9A-Fa-f]{12}$"
                    },
                    "serialNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "numberOfPorts": {
                        "type": "integer",
                        "minimum": 1,
                        "required": true
                    },
                    "numberOfAssignedPorts": {
                        "type": "integer",
                        "required": true
                    },
                    "status": {
                        "enum": [
                            "Online",
                            "Offline",
                            "Unavailable",
                            "Unknown"
                        ],
                        "required": true
                    },
                    "configurationMode": {
                        "enum": [
                            "Default",
                            "Manual",
                            "Custom"
                        ]
                    },
                    "configurationFileName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                    },
                    "physicalLocation": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1024
                    },
                    "transportProtocol": {
                        "enum": [
                            "UDP",
                            "TCP",
                            "Unspecified"
                        ]
                    },
                    "mobilityManagerProvisioningURL": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                    },
                    "mobilityManagerProvisioningUserName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                    },
                    "mobilityManagerDefaultOriginatingServiceKey": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999
                    },
                    "mobilityManagerDefaultTerminatingServiceKey": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999
                    },
                    "useCustomUserNamePassword": {
                        "type": "boolean"
                    },
                    "userName": {
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$"
                    }
                }
            }

### PUT
Update the profile settings of an device.

+ Request (application/json)
    + Body

            {
                "protocol": "SIP 2.0",
                "netAddress": "AddressTest",
                "port": 2001,
                "outboundProxyServerNetAddress": "opAddressTest",
                "stunServerNetAddress": "ssAddressTest",
                "macAddress": "A0B1C2d3e4F9",
                "serialNumber": "sNumberTest",
                "description": "description",
                "configurationMode": "Default",
                "configurationFile": {
                    "sourceFileName": "fileName"
                },
                "physicalLocation": "location",
                "transportProtocol": "TCP",
                "amobilityManagerProvisioningURL": "mmpurl",
                "amobilityManagerProvisioningUserName": "mmpUser",
                "amobilityManagerProvisioningPassword": "passwew#$",
                "amobilityManagerDefaultOriginatingServiceKey": "100",
                "amobilityManagerDefaultTerminatingServiceKey": "100",
                "useCustomUserNamePassword": true,
                "accessDeviceCredentials": {
                    "userName": "AccessDeviceUserName",
                    "password": "CL@r1soft"
                }
            }

    + Schema

            {
                "title": "Modify Group Access Device request body schema",
                "type": "object",
                "properties": {
                    "protocol": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "netAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1025,
                        "maximum": 65535
                    },
                    "outboundProxyServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "stunServerNetAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "macAddress": {
                        "type": "string",
                        "minLength": 12,
                        "maxLength": 12,
                        "pattern": "^[0-9A-Fa-f]{12}$"
                    },
                    "serialNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "configurationMode": {
                        "enum": [
                            "Default",
                            "Manual",
                            "Custom"
                        ]
                    },
                    "configurationFile": {
                        "type": "object",
                        "properties": {
                            "sourceFileName": {
                                "type": "string",
                                "minLength": 1
                            },
                            "fileContent": {
                                "type": "string"
                            }
                        }
                    },
                    "physicalLocation": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1024
                    },
                    "transportProtocol": {
                        "enum": [
                            "UDP",
                            "TCP",
                            "Unspecified"
                        ]
                    },
                    "mobilityManagerProvisioningURL": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                    },
                    "mobilityManagerProvisioningUserName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                    },
                    "mobilityManagerProvisioningPassword": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                    },
                    "mobilityManagerDefaultOriginatingServiceKey": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999
                    },
                    "mobilityManagerDefaultTerminatingServiceKey": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999
                    },
                    "useCustomUserNamePassword": {
                        "type": "boolean"
                    },
                    "accessDeviceCredentials": {
                        "type": "object",
                        "properties": {
                            "userName": {
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$",
                                "required": true
                            },
                            "password": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 60,
                                "required": true
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

### DELETE
Deletes a Group Device from BroadWorks.

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Users - General

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides general internal services related to BroadWorks users.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/users
### POST
Create a BroadWorks User.

Note that the request body includes both a device and a trunk group, for example purposes.
Actual requests should include only one or the other (or neither, for users with no device).

+ Request (application/json)
    + Body

            {
                "userId": "2005553001@example.com",
                "phoneNumber": "+1-2005553001",
                "CLID": "+1-2005553001",
                "extension": "3001",
                "lastName": "Doe",
                "firstName": "Jane",
                "callingLineIdLastName": "Smith",
                "callingLineIdFirstName": "John",
                "email": "jdoe@another.example.com",
                "timeZone": "America\/New_York",
                "language": "English",
                "linePort": "2005553001@sip.example.com",
                "device": {
                    "name": "iad_exampleCom001",
                    "level": "Group"
                },
                "trunkGroupName": "exampleTrunk",
                "password": "Fg3t&4s!D0"
            }

    + Schema

            {
                "title": "Create User request body schema",
                "type": "object",
                "properties": {
                    "userId": {
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$",
                        "required": true
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "callingLineIdLastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "callingLineIdFirstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "pattern": "^\\+\\d+-\\d+$",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20,
                        "pattern": "^[\\d\\-]+$"
                    },
                    "callingLineIdPhoneNumber": {
                        "type": "string",
                        "pattern": "^\\+\\d+-\\d+$",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "password": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "language": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127
                    },
                    "device": {
                        "type": "object",
                        "properties": {
                            "level": {
                                "enum": [
                                    "System",
                                    "Service Provider",
                                    "Group"
                                ],
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 40,
                                "required": true
                            }
                        }
                    },
                    "trunkGroupName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "email": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "format": "email"
                    }
                }
            }

+ Response 201 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120
            Location: http://loki3services.apiary.io/loki-services/network-elements/broadworks/1/serviceProviders/Example%20Com/groups/Example%20Com%20-%20North/users/2005553001%40example.com

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/serviceProviders\/Example%20Com\/groups\/Example%20Com%20-%20North\/users\/2005553001%40example.com"
                    }
                },
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ],
                "ne_id": "1",
                "serviceProviderId": "Example Com",
                "groupId": "Example Com - North",
                "userId": "2005553001%40example.com"
            }

    + Schema

            {
                "title": "Create User response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "userId": {
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$",
                        "required": true
                    }
                }
            }

## /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}
### GET
Retrieve a BroadWorks User.

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/1\/users\/JohnDoe"
                    }
                },
                "serviceProviderId": "EnterpriseID",
                "groupId": "GroupID",
                "lastName": "JohnDoe",
                "firstName": "JohnDoe",
                "callingLineIdLastName": "JohnDoe",
                "callingLineIdFirstName": "JohnDoe",
                "hiraganaLastName": "JohnDoe",
                "hiraganaFirstName": "JohnDoe",
                "phoneNumber": "+1-2147483642",
                "extension": "642",
                "language": "English",
                "timeZone": "America\/Winnipeg",
                "timeZoneDisplayName": "(GMT-06:00) (Canada) Central Time",
                "defaultAlias": "JohnDoe@r19.leonidsystems.com",
                "accessDeviceEndpoint": {
                    "accessDevice": {
                        "deviceLevel": "Group",
                        "deviceName": "0002"
                    },
                    "linePort": "2147483642@r19.leonidsystems.com",
                    "staticRegistrationCapable": false,
                    "useDomain": true
                },
                "countryCode": "1",
                "userId": "JohnDoe",
                "ne_id": "1",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve User response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "ne_id": {
                        "type": "string",
                        "required": true
                    },
                    "serviceProviderId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "groupId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "userId": {
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$",
                        "required": true
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "callingLineIdLastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "callingLineIdFirstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30,
                        "required": true
                    },
                    "hiraganaLastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "hiraganaFirstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "phoneNumber": {
                        "type": "string",
                        "pattern": "^\\+\\d+-\\d+$",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20,
                        "pattern": "^[\\d\\-]+$"
                    },
                    "callingLineIdPhoneNumber": {
                        "type": "string",
                        "pattern": "^\\+\\d+-\\d+$",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "department": {
                        "type": "object",
                        "properties": {
                            "serviceProviderId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "groupId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30,
                                "required": true
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50,
                                "required": true
                            }
                        }
                    },
                    "departmentFullPath": {
                        "type": "string",
                        "minLength": 1
                    },
                    "language": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40,
                        "required": true
                    },
                    "timeZone": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "timeZoneDisplayName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 127,
                        "required": true
                    },
                    "defaultAlias": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                    },
                    "alias": {
                        "type": "array",
                        "maxItems": 3,
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 161,
                            "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                        }
                    },
                    "accessDeviceEndpoint": {
                        "type": "object",
                        "properties": {
                            "accessDevice": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "deviceLevel": {
                                        "enum": [
                                            "System",
                                            "Service Provider",
                                            "Group"
                                        ],
                                        "required": true
                                    },
                                    "deviceName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 40,
                                        "required": true
                                    }
                                }
                            },
                            "linePort": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^(\\+|[\\w\\-\\.\\!~\\*\\'\\(\\)])[\\w\\-\\.\\!~\\*\\'\\(\\)]{0,79}(@[a-zA-Z\\d\\.\\-]{1,80})?$",
                                "required": true
                            },
                            "contact": {
                                "type": "array",
                                "minItems": 0,
                                "maxItems": 5,
                                "items": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 1020
                                }
                            },
                            "staticRegistrationCapable": {
                                "type": "boolean",
                                "required": true
                            },
                            "useDomain": {
                                "type": "boolean",
                                "required": true
                            }
                        }
                    },
                    "trunkAddressing": {
                        "type": "object",
                        "properties": {
                            "trunkGroupDeviceEndpoint": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 30,
                                        "required": true
                                    },
                                    "linePort": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 161,
                                        "pattern": "^(\\+|[\\w\\-\\.\\!~\\*\\'\\(\\)])[\\w\\-\\.\\!~\\*\\'\\(\\)]{0,79}(@[a-zA-Z\\d\\.\\-]{1,80})?$",
                                        "required": true
                                    },
                                    "contact": {
                                        "type": "array",
                                        "minItems": 0,
                                        "maxItems": 5,
                                        "items": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 1020
                                        }
                                    },
                                    "staticRegistrationCapable": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "useDomain": {
                                        "type": "boolean",
                                        "required": true
                                    },
                                    "isPilotUser": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            },
                            "enterpriseTrunkName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 30
                            },
                            "alternateTrunkIdentity": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            }
                        }
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "pagerPhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "mobilePhoneNumber": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "emailAddress": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80,
                        "format": "email"
                    },
                    "yahooId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "addressLocation": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "addressLine2": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            },
                            "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvince": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "stateOrProvinceDisplayName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "zipOrPostalCode": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            },
                            "country": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                            }
                        }
                    },
                    "countryCode": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 3,
                        "pattern": "^[0-9]|[1-9][0-9]{1, 2}$",
                        "required": true
                    },
                    "nationalPrefix": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2
                    },
                    "networkClassOfService": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    },
                    "officeZoneName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                    },
                    "primaryZoneName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "impId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 196
                    }
                }
            }

### DELETE
Delete a BroadWorks User

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 404 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "NOT_FOUND",
                "externalErrorCode": "4008",
                "externalErrorSummary": "[Error 4008] User not found: 6502342109",
                "externalErrorDetail": "[Error 4008] User not found: 6502342109"
            }

# Group BroadWorks Users - Services

Network Element: BroadWorks (initially only supports XSP or AS resources)

Provides all internal services related to services on BroadWorks users.

General note: any of these requests may return 424 Method Failure in the event of an error response from BroadWorks,
or 400 Bad Request for validation failure on the body, uri query parameters, or uri template variables, or 500 Internal
Server Error for unhandled errors. However, for brevity, examples of these responses are only included for some
resources/methods below.

## /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}/services
### PUT
Update service assignments for a user. The input specifies the desired status (assigned or un-assigned) for the services
and/or service packs inlcluded in the input.

Thus:

* Services/service packs in the list which are not currently assigned to the user will be assigned.
* Services/service packs not in the list, but currently assigned to the user, wil be un-assigned.
* Services/service packs in the list which are already assigned to the user will not be updated (they will be untouched;
they will **not** be un-assigned and re-assigned).
* Services/service packs not in the list will not be updated (they will be untouched; they will **not** be un-assigned).

Assigning a service which is already assigned, or un-assigning a service which is not currently assigned, is not considered to be an error.

**future: technically this should be a PATCH, and the PUT should completely replace the set of assignments (un-assign
everything except those that are included here with Assigned=true). May make this change, or, add a ?parameter here to.
As it stands, to update a user to ensure they have only 1 service assigned, you'd have to list **every** other BWKS service
with "Assigned=false" here.

+ Request (application/json)
    + Body

            {
                "servicePacksAssignmentTable": {
                    "Admin": {
                        "Assigned": true
                    },
                    "Standard": {
                        "Assigned": false
                    }
                },
                "userServicesAssignmentTable": {
                    "Remote Office": {
                        "Assigned": false
                    },
                    "Authentication": {
                        "Assigned": true
                    },
                    "Call Waiting": {
                        "Assigned": true
                    }
                }
            }

    + Schema

            {
                "title": "Update User Service Assignments request body schema",
                "type": "object",
                "properties": {
                    "servicePacksAssignmentTable": {
                        "type": "object",
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Assigned": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "userServicesAssignmentTable": {
                        "type": "object",
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Assigned": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}/services/assigned-services
### GET
This request will retrieve the services assignment status for Service Packs and User Services for regular and virtual users.

+ Response 200
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/lokiservicesdev.apiary.io:8340\/loki-services\/network-elements\/broadworks\/asp1_r21\/users\/6502342108@example.com\/services\/assigned-services"
                    }
                },
                "servicePacksAssignmentTable": [],
                "userServicesAssignmentTable": {
                    "Anonymous Call Rejection": {
                        "Service Name": "Anonymous Call Rejection",
                        "Assigned": false
                    },
                    "Call Forwarding Always": {
                        "Service Name": "Call Forwarding Always",
                        "Assigned": false
                    },
                    "Call Forwarding Busy": {
                        "Service Name": "Call Forwarding Busy",
                        "Assigned": false
                    },
                    "Call Notify": {
                        "Service Name": "Call Notify",
                        "Assigned": false
                    },
                    "Calling Line ID Delivery Blocking": {
                        "Service Name": "Calling Line ID Delivery Blocking",
                        "Assigned": false
                    },
                    "Do Not Disturb": {
                        "Service Name": "Do Not Disturb",
                        "Assigned": false
                    },
                    "Priority Alert": {
                        "Service Name": "Priority Alert",
                        "Assigned": false
                    },
                    "Selective Call Acceptance": {
                        "Service Name": "Selective Call Acceptance",
                        "Assigned": false
                    },
                    "Call Forwarding Selective": {
                        "Service Name": "Call Forwarding Selective",
                        "Assigned": false
                    },
                    "Selective Call Rejection": {
                        "Service Name": "Selective Call Rejection",
                        "Assigned": false
                    },
                    "Voice Messaging User": {
                        "Service Name": "Voice Messaging User",
                        "Assigned": false
                    },
                    "Alternate Numbers": {
                        "Service Name": "Alternate Numbers",
                        "Assigned": false
                    },
                    "Third-Party Voice Mail Support": {
                        "Service Name": "Third-Party Voice Mail Support",
                        "Assigned": false
                    },
                    "Basic Call Logs": {
                        "Service Name": "Basic Call Logs",
                        "Assigned": true
                    },
                    "Enhanced Call Logs": {
                        "Service Name": "Enhanced Call Logs",
                        "Assigned": false
                    },
                    "Voice Messaging User - Video": {
                        "Service Name": "Voice Messaging User - Video",
                        "Assigned": false
                    },
                    "Diversion Inhibitor": {
                        "Service Name": "Diversion Inhibitor",
                        "Assigned": false
                    },
                    "Custom Ringback User": {
                        "Service Name": "Custom Ringback User",
                        "Assigned": false
                    },
                    "Custom Ringback User - Video": {
                        "Service Name": "Custom Ringback User - Video",
                        "Assigned": false
                    },
                    "Privacy": {
                        "Service Name": "Privacy",
                        "Assigned": false
                    },
                    "Fax Messaging": {
                        "Service Name": "Fax Messaging",
                        "Assigned": false
                    },
                    "Charge Number": {
                        "Service Name": "Charge Number",
                        "Assigned": false
                    },
                    "External Custom Ringback": {
                        "Service Name": "External Custom Ringback",
                        "Assigned": false
                    },
                    "Connected Line Identification Restriction": {
                        "Service Name": "Connected Line Identification Restriction",
                        "Assigned": false
                    },
                    "Zone Calling Restrictions": {
                        "Service Name": "Zone Calling Restrictions",
                        "Assigned": false
                    },
                    "Communication Barring User-Control": {
                        "Service Name": "Communication Barring User-Control",
                        "Assigned": false
                    },
                    "Pre-alerting Announcement": {
                        "Service Name": "Pre-alerting Announcement",
                        "Assigned": false
                    },
                    "Call Me Now": {
                        "Service Name": "Call Me Now",
                        "Assigned": true
                    },
                    "Call Recording": {
                        "Service Name": "Call Recording",
                        "Assigned": false
                    },
                    "Group Night Forwarding": {
                        "Service Name": "Group Night Forwarding",
                        "Assigned": false
                    }
                },
                "userId": "6502342108@example.com",
                "ne_id": "asp1_r21",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/localhost\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "Retrieve user services assignment status response body schema",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "userId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "required": true
                    },
                    "ne_id": {
                        "type": "string"
                    },
                    "servicePacksAssignmentTable": {
                        "type": "object",
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Service Pack Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "required": true
                                    },
                                    "Assigned": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "userServicesAssignmentTable": {
                        "type": "object",
                        "patternProperties": {
                            "^.+$": {
                                "type": "object",
                                "properties": {
                                    "Service Name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "required": true
                                    },
                                    "Assigned": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                },
                                "templated": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }

## /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}/services/Authentication
### PUT
Update settings for Authentication service on a user.

Note: when connecting to BroadWorks as a BroadWorks user (rather than as an admin), if "password" is included then "oldPassword" is also required.

+ Request (application/json)
    + Body

            {
                "username": "2005553001",
                "oldPassword": "ch4ngeM3",
                "password": "230A4u$#%f"
            }

    + Schema

            {
                "title": "Update User Authentication Service request body schema",
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    },
                    "oldPassword": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "password": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}/services/Charge%20Number
### PUT
Update settings for Charge Number service on a user.

** FIXME: document that phoneNumber can be null, which means explicitly set the user's Charge Number TN to be empty in BWKS, regardless of its current value.

+ Request (application/json)
    + Body

            {
                "phoneNumber": "+1-2005554321",
                "useChargeNumberForEnhancedTranslations": false,
                "sendChargeNumberToNetwork": true
            }

    + Schema

            {
                "title": "Update User Charge Number Service request body schema",
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "pattern": "^\\+\\d+-\\d+$",
                        "minLength": 1,
                        "maxLength": 23
                    },
                    "useChargeNumberForEnhancedTranslations": {
                        "type": "boolean"
                    },
                    "sendChargeNumberToNetwork": {
                        "type": "boolean"
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}/services/Third-Party%20Voice%20Mail%20Support
### PUT
Update settings for Third-Party Voice Mail Support (3PVM) service on a user.

+ Request (application/json)
    + Body

            {
                "isActive": true,
                "busyRedirectToVoiceMail": true,
                "noAnswerRedirectToVoiceMail": true,
                "serverSelection": "Group Mail Server",
                "userServer": "5553991212",
                "mailboxIdType": "URL",
                "mailboxURL": "5553120300@example.com",
                "noAnswerNumberOfRings": 4,
                "alwaysRedirectToVoiceMail": false,
                "outOfPrimaryZoneRedirectToVoiceMail": false
            }

    + Schema

            {
                "title": "Update User Third-Party Voice Mail Support Service request body schema",
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "busyRedirectToVoiceMail": {
                        "type": "boolean"
                    },
                    "noAnswerRedirectToVoiceMail": {
                        "type": "boolean"
                    },
                    "noAnswerNumberOfRings": {
                        "enum": [
                            0,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20
                        ]
                    },
                    "alwaysRedirectToVoiceMail": {
                        "type": "boolean"
                    },
                    "outOfPrimaryZoneRedirectToVoiceMail": {
                        "type": "boolean"
                    },
                    "serverSelection": {
                        "enum": [
                            "Group Mail Server",
                            "User Specific Mail Server"
                        ]
                    },
                    "userServer": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "mailboxIdType": {
                        "enum": [
                            "User Or Group Phone Number",
                            "URL"
                        ]
                    },
                    "mailboxURL": {
                        "description": "SIP URI",
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}/services/Call%20Forwarding%20No%20Answer
### PUT
Update settings for Call Forwarding No Answer (CFNA) service on a user.

+ Request (application/json)
    + Body

            {
                "isActive": true,
                "forwardToPhoneNumber": "5553120301",
                "numberOfRings": 4
            }

    + Schema

            {
                "title": "Update User Call Forwarding No Answer Service request body schema",
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "forwardToPhoneNumber": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    },
                    "numberOfRings": {
                        "enum": [
                            0,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20
                        ]
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}/services/Call%20Forwarding%20Not%20Reachable
### PUT
Update settings for Call Forwarding Not Reachable (CFNR) service on a user.

+ Request (application/json)
    + Body

            {
                "isActive": true,
                "forwardToPhoneNumber": "5553120301"
            }

    + Schema

            {
                "title": "Update User Call Forwarding Not Reachable Service request body schema",
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "forwardToPhoneNumber": {
                        "anyOf": [
                            {
                                "description": "E.164 TN",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^\\+\\d+-\\d+$"
                            },
                            {
                                "description": "non-E.164 TN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 23,
                                "pattern": "^[\\d\\-]+$"
                            },
                            {
                                "description": "SIP URI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 161,
                                "pattern": "^[\\+]?[\\w\\-\\.\\!~\\*\\'\\(\\)]+@[a-zA-Z\\d\\.\\-]+$"
                            }
                        ]
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

## /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}/call-processing-policy
### GET
Retrieve a BroadWorks User's Call Processing Policies settings.
Refer to BroadWorks documentation for specifics of the properties under extensions.broadworks.

In addition to the standard error codes, this will return 404 Not Found if the user does not exist in BroadWorks.

** NOT IMPLEMENTED **

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links, curies": "tbd",
                "userId": "4155551212@example.com",
                "ne_id": "1",
                "tbd": "request not implemented; documentation not completed"
            }

### PUT
Update a BroadWorks User's Call Processing Policies settings.
Refer to BroadWorks documentation for specifics of the properties under extensions.broadworks.

In addition to the standard error codes, this will return 404 Not Found if the user does not exist in BroadWorks.

Notes:

* The properties of the request inputs correspond to elements of the same name in BroadWorks OCI UserCallProcessingModifyPolicyRequestX (as of R17SP4),
with the exception of the convenience grouping objects (callingLineId, media, callLimits, incomingCallerId), which have no BroadWorks equivalent.
* The mapping is direct - no transformations are performed on the values.
* If a property is omitted in the request, the corresponding element will be omitted from the OCI request.
* If a property is present in the request that is not part of the json-schema for this request, it will be ignored.

+ Request (application/json)
    + Body

            {
                "callingLineId": {
                    "useUserCLIDSetting": false,
                    "clidPolicy": "Use DN",
                    "emergencyClidPolicy": "Use DN",
                    "allowAlternateNumbersForRedirectingIdentity": true,
                    "useGroupName": false,
                    "allowConfigurableCLIDForRedirectingIdentity": true,
                    "blockCallingNameForExternalCalls": false
                },
                "media": {
                    "useUserMediaSetting": false,
                    "mediaPolicySelection": "No Restrictions",
                    "supportedMediaSetName": "Example"
                },
                "callLimits": {
                    "useUserCallLimitsSetting": false,
                    "useMaxSimultaneousCalls": false,
                    "maxSimultaneousCalls": 10,
                    "useMaxSimultaneousVideoCalls": false,
                    "maxSimultaneousVideoCalls": 5,
                    "useMaxCallTimeForAnsweredCalls": false,
                    "maxCallTimeForAnsweredCallsMinutes": 600,
                    "useMaxCallTimeForUnansweredCalls": false,
                    "maxCallTimeForUnansweredCallsMinutes": 2,
                    "useMaxConcurrentRedirectedCalls": false,
                    "maxConcurrentRedirectedCalls": 3,
                    "useMaxFindMeFollowMeDepth": false,
                    "maxFindMeFollowMeDepth": 3,
                    "maxRedirectionDepth": 10,
                    "useMaxConcurrentFindMeFollowMeInvocations": false,
                    "maxConcurrentFindMeFollowMeInvocations": 3
                },
                "incomingCallerId": {
                    "useUserDCLIDSetting": false,
                    "enableDialableCallerID": false
                }
            }

    + Schema

            {
                "title": "Update User Call Processing Policy request body schema",
                "type": "object",
                "properties": {
                    "callingLineId": {
                        "type": "object",
                        "properties": {
                            "useUserCLIDSetting": {
                                "type": "boolean"
                            },
                            "clidPolicy": {
                                "enum": [
                                    "Use DN",
                                    "User Configurable CLID",
                                    "Use Group CLID"
                                ]
                            },
                            "emergencyClidPolicy": {
                                "enum": [
                                    "Use DN",
                                    "User Configurable CLID",
                                    "Use Group CLID"
                                ]
                            },
                            "allowAlternateNumbersForRedirectingIdentity": {
                                "type": "boolean"
                            },
                            "useGroupName": {
                                "type": "boolean"
                            },
                            "allowConfigurableCLIDForRedirectingIdentity": {
                                "type": "boolean"
                            },
                            "blockCallingNameForExternalCalls": {
                                "type": "boolean"
                            }
                        }
                    },
                    "media": {
                        "type": "object",
                        "properties": {
                            "useUserMediaSetting": {
                                "type": "boolean"
                            },
                            "mediaPolicySelection": {
                                "enum": [
                                    "Use Uncompressed Codec",
                                    "Use Supported Media Set",
                                    "No Restrictions"
                                ]
                            },
                            "supportedMediaSetName": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                            }
                        }
                    },
                    "callLimits": {
                        "type": "object",
                        "properties": {
                            "useUserCallLimitsSetting": {
                                "type": "boolean"
                            },
                            "useMaxSimultaneousCalls": {
                                "type": "boolean"
                            },
                            "maxSimultaneousCalls": {
                                "anyOf": [
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 500,
                                        "description": "Schema for BroadWorks version < R20"
                                    },
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 999999,
                                        "description": "Schema for BroadWorks version < R20"
                                    }
                                ]
                            },
                            "useMaxSimultaneousVideoCalls": {
                                "type": "boolean"
                            },
                            "maxSimultaneousVideoCalls": {
                                "anyOf": [
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 500,
                                        "description": "Schema for BroadWorks version < R20"
                                    },
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 999999,
                                        "description": "Schema for BroadWorks version < R20"
                                    }
                                ]
                            },
                            "useMaxCallTimeForAnsweredCalls": {
                                "type": "boolean"
                            },
                            "maxCallTimeForAnsweredCallsMinutes": {
                                "type": "integer",
                                "minimum": 3,
                                "maximum": 2880
                            },
                            "useMaxCallTimeForUnansweredCalls": {
                                "type": "boolean"
                            },
                            "maxCallTimeForUnansweredCallsMinutes": {
                                "anyOf": [
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 60,
                                        "description": "Schema for BroadWorks version < R20"
                                    },
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 2880,
                                        "description": "Schema for BroadWorks version < R20"
                                    }
                                ]
                            },
                            "useMaxConcurrentRedirectedCalls": {
                                "type": "boolean"
                            },
                            "maxConcurrentRedirectedCalls": {
                                "anyOf": [
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 32,
                                        "description": "Schema for BroadWorks version < R20"
                                    },
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 999999,
                                        "description": "Schema for BroadWorks version < R20"
                                    }
                                ]
                            },
                            "useMaxFindMeFollowMeDepth": {
                                "type": "boolean"
                            },
                            "maxFindMeFollowMeDepth": {
                                "anyOf": [
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10,
                                        "description": "Schema for BroadWorks version < R20"
                                    },
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100,
                                        "description": "Schema for BroadWorks version < R20"
                                    }
                                ]
                            },
                            "maxRedirectionDepth": {
                                "anyOf": [
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 15,
                                        "description": "Schema for BroadWorks version < R20"
                                    },
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100,
                                        "description": "Schema for BroadWorks version < R20"
                                    }
                                ]
                            },
                            "useMaxConcurrentFindMeFollowMeInvocations": {
                                "type": "boolean"
                            },
                            "maxConcurrentFindMeFollowMeInvocations": {
                                "anyOf": [
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 32,
                                        "description": "Schema for BroadWorks version < R20"
                                    },
                                    {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 999999,
                                        "description": "Schema for BroadWorks version < R20"
                                    }
                                ]
                            }
                        }
                    },
                    "incomingCallerId": {
                        "type": "object",
                        "properties": {
                            "useUserDCLIDSetting": {
                                "type": "boolean"
                            },
                            "enableDialableCallerID": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Utility: Open Client Interface - Provisioning (OCI-P)

Network Element: BroadWorks (initially supports only the AS or XSP)

Provides communication with the OCI API on BroadWorks network elements, including authentication, session management, and basic error handling.

## /loki-services/network-elements/broadworks/{+ne_id}/processOci
### POST
** This request is disabled.**<br />
Process an OCI request. **Note, this request is intended to be consumed by the BroadWorks Utility Service only, and at this
time no other service should be consuming this request.**

The internal OCI request factory will convert  OCI XML response data directly into JSON data in the 200 OK response, with the exception of OCI XML elements of the "OCITable"
data type. The OCITable data will be transformed so that each row of the table is a key:value pair, where the key is the
column name and the value is the data value. This is illustrated in the example below.

+ Request (application/json)

        {
            "command": "ServiceProviderLanguageGetAvailableListResponse",
            "serviceProviderId": "exampleCom"
        }

+ Response 200 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "defaultLanguage": "English",
                "languageTable": [
                    {
                        "Language": "English",
                        "Locale": "en_US",
                        "Encoding": "ISO-8859-1"
                    },
                    {
                        "Language": "French",
                        "Locale": "fr_CA",
                        "Encoding": "ISO-8859-1"
                    }
                ]
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

+ Response 401 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_AUTHENTICATION_ERROR",
                "externalErrorCode": "4962",
                "externalErrorSummary": "[Error 4962] Invalid password",
                "externalErrorDetail": "[Error 4962] Invalid password"
            }

+ Response 403 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_FORBIDDEN",
                "externalErrorCode": "4003",
                "externalErrorSummary": "[Error 4003] Unauthorized request: UserGetListInGroupRequest",
                "externalErrorDetail": "[Error 4003] Unauthorized request: UserGetListInGroupRequest"
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4410",
                "externalErrorSummary": "[Error 4410] Service is not assigned to this subscriber: Call Forwarding Not Reachable",
                "externalErrorDetail": "[Error 4410] Service is not assigned to this subscriber: Call Forwarding Not Reachable"
            }

+ Response 500
    + Headers

            Transaction-Id: 1380080943120

+ Response 502
    + Headers

            Transaction-Id: 1380080943120

+ Response 504
    + Headers

            Transaction-Id: 1380080943120

# Group BroadWorks Utility: Network Server Location API Interface

Network Element: BroadWorks Network Server

This is the means by which the BroadWorks Utility Service will expose the information available via the NS-LAPI LocateUser request.
Currently supports queries for user resources only.

## /loki-services/network-elements/broadworks/locations{?userId,linePort,phoneNumber,groupId}
### GET
Retrieve the location information (BroadWorks hosting network element information) for a BroadWorks resource.

##URI Query Parameters

<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Mode</th>
    <th>Notes</th>
    </thead>
    <tbody>
        <tr>
            <td>userId</td>
            <td style="text-align: center">no</td>
            <td>Equal To</td>
            <td>Full userId (including @domain) of the user to be located</td>
        </tr>
        <tr>
            <td>linePort</td>
            <td style="text-align: center">no</td>
            <td>Equal To</td>
            <td>NOT IMPLEMENTED - will be ignored if included in request</td>
        </tr>
        <tr>
            <td>phoneNumber</td>
            <td style="text-align: center">no</td>
            <td>Equal To</td>
            <td>NOT IMPLEMENTED - will be ignored if included in request</td>
        </tr>
        <tr>
            <td>groupId</td>
            <td style="text-align: center">no</td>
            <td>Equal To</td>
            <td>NOT IMPLEMENTED - will be ignored if included in request</td>
        </tr>
    </tbody>
</table>

+ Response 200 (application/hal+json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "_links": {
                    "self": {
                        "href": "http:\/\/loki3services.apiary.io\/loki-services\/network-elements\/broadworks\/locations"
                    }
                },
                "ne_id": "asp1_r21",
                "userId": "6502342177@r21.clarisoft.com",
                "curies": [
                    {
                        "name": "ls",
                        "href": "http:\/\/loki3services.apiary.io\/loki\/rels\/{rel}",
                        "templated": true
                    }
                ]
            }

    + Schema

            {
                "title": "BroadWorks Utility: Network Server Location API Interface response body",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "self": {
                                "type": "object",
                                "required": true,
                                "properties": {
                                    "href": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "curies": {
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "required": true
                                },
                                "href": {
                                    "type": "string",
                                    "required": true
                                },
                                "templated": {
                                    "type": "boolean",
                                    "required": true
                                }
                            }
                        }
                    },
                    "userId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 161,
                        "pattern": "^[\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}][\\w\\'#\\$\\%&\\-\\\/=\\?;\\.\\|~\\!`\\^\\{\\}\\+]{5,79}@[a-zA-Z\\d\\.\\-]{2,80}$",
                        "required": true
                    },
                    "ne_id": {
                        "type": "string",
                        "required": "true",
                        "minLength": 1,
                        "description": "Hosting NE name of the Application Server cluster."
                    }
                }
            }

# Group LWS-SOAP Utility Service

Network Element: LWS-SOAP

Provides communication with LWS-SOAP API.

## /loki-services/network-elements/lws-soap/{+ne_id}/processRequest
### POST
Send a LWS-SOAP request.

##Request Properties

<table border=1>
    <thead>
    <th>Parameter</th>
    <th>Required?</th>
    <th>Description</th>
    </thead>
    <tbody>
        <tr>
            <td>sessionId</td>
            <td style="text-align: center">yes</td>
            <td>A token which is used in LWS SOAP to validate session.</td>
        </tr>
        <tr>
            <td>lokiCommandType</td>
            <td style="text-align: center">yes</td>
            <td>Identifies the message action to be taken in LWS SOAP.<br />
            For example: CustomerGetRequest, UserAddRequest, etc.
            </td>
        </tr>
        <tr>
            <td>requestBody</td>
            <td style="text-align: center">yes</td>
            <td>Container for properties which will be sent in the LWS SOAP request.</td>
        </tr>
    </tbody>
</table>

+ Request (application/json)
    + Body

            {
                "sessionId": "ae2b3164cb0754687e04a1f690ee7d8c",
                "lokiCommandType": "CustomerGetRequest",
                "requestBody": {
                    "customerId": "Example Com"
                }
            }

    + Schema

            {
                "title": "LWS-SOAP Utility request body schema",
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string",
                        "minLength": 32,
                        "maxLength": 32,
                        "required": true
                    },
                    "lokiCommandType": {
                        "type": "string",
                        "minLength": 1,
                        "required": true
                    },
                    "requestBody": {
                        "type": "object",
                        "required": true
                    }
                }
            }

+ Response 200 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "lokiCommandType": "CustomerGetResponse",
                "responseBody": {
                    "defaultDomain": "example.com",
                    "customerName": "Example Com",
                    "supportEmail": ""
                }
            }

    + Schema

            {
                "title": "LWS-SOAP Utility response body schema",
                "type": "object",
                "properties": {
                    "lokiCommandType": {
                        "type": "string",
                        "minLength": 1
                    },
                    "requestBody": {
                        "type": "object"
                    }
                }
            }

+ Response 204
    + Headers

            Transaction-Id: 1380080943120

    + Schema

            {
                "title": "LWS-SOAP Utility response body schema",
                "type": "object",
                "properties": {
                    "lokiCommandType": {
                        "type": "string",
                        "minLength": 1
                    },
                    "requestBody": {
                        "type": "object"
                    }
                }
            }

+ Response 424 (application/json)
    + Headers

            Transaction-Id: 1380080943120

    + Body

            {
                "errorCode": "EXTERNAL_API_ERROR",
                "externalErrorCode": "4151",
                "externalErrorSummary": "[Error 4151] Service Provider or Enterprise not found: Example Com",
                "externalErrorDetail": "Customer Get Failed. [Error 4151] Service Provider or Enterprise not found: Example Com."
            }

    + Schema

            {
                "title": "LWS-SOAP Utility response body schema",
                "type": "object",
                "properties": {
                    "lokiCommandType": {
                        "type": "string",
                        "minLength": 1
                    },
                    "requestBody": {
                        "type": "object"
                    }
                }
            }

# Group CHANGELOG

2.42
New BroadWorks Entity requests:

* GET /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/auto-attendants/{+autoAttendantId}/services/assigned-services
* GET /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/hunt-groups/{+huntGroupId}/services/assigned-services
* GET /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/call-centers/{+callCenterId}/services/assigned-services
* GET /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/instant-group-calls/{+instantGroupCallId}/services/assigned-services

New BroadWorks Entity requests:

* GET /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}/services/assigned-services

2.41
New BroadWorks Entity requests:

* GET /loki-services/broadworks/service-providers/{+serviceProviderId}
* POST /loki-services/broadworks/service-providers{?mode}
* PUT /loki-services/broadworks/service-providers/{+serviceProviderId}
* POST /loki-services/broadworks/service-providers/{+serviceProviderId}/assignDomain
* POST /loki-services/broadworks/service-providers/{+serviceProviderId}/groups{?mode}
* POST /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/applyTemplate
* GET /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/extension-length
* PUT /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/extension-length
* GET /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Third-Party%20Voice%20Mail%20Support
* PUT /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Third-Party%20Voice%20Mail%20Support
* GET /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Voice%20Portal
* PUT /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Voice%20Portal
* POST /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers
* POST /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/{+phoneNumber}
* GET /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/{+phoneNumber}
* PUT /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/{+phoneNumber}
* DELETE /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/{+phoneNumber}
* POST /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/activate
* POST /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/deactivate
* POST /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups{?mode}
* GET /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups/{+trunkGroupName}
* PUT /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups/{+trunkGroupName}
* DELETE /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups/{+trunkGroupName}
* GET /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/devices/{+deviceName}
* POST /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/devices{?mode}
* PUT /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/devices/{+deviceName}
* DELETE /loki-services/broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/devices/{+deviceName}
* GET /loki-services/broadworks/users/{+userId}

New BroadWorks Utility requests:

* POST /loki-services/network-elements/broadworks/{+ne_id}/domains
* DELETE /loki-services/network-elements/broadworks/{+ne_id}/domains/{+domain}
* GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}
* POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers
* PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}
* DELETE /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}
* POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/domains
* DELETE /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/domains/{+domain}
* GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/trunking-call-capacity
* PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/trunking-call-capacity
* GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups
* POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups
* GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups/{+trunkGroupName}
* PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups/{+trunkGroupName}
* DELETE /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/trunk-groups/{+trunkGroupName}
* POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/access-devices
* GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/access-devices/{+deviceName}
* PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/access-devices/{+deviceName}
* DELETE /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/access-devices/{+deviceName}
* POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups
* DELETE /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}
* PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/extension-length
* POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/domains
* GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/trunking-call-capacity
* PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/trunking-call-capacity
* DELETE /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/domains/{+domain}
* GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/feature-access-codes
* PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/feature-access-codes
* POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/assignServices
* POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/unassignServices
* GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Third-Party%20Voice%20Mail%20Support
* PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Third-Party%20Voice%20Mail%20Support
* GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Voice%20Portal
* PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Voice%20Portal
* GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Speed%20Dial%20100
* PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services/Speed%20Dial%20100
* POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/activate
* POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/phone-numbers/deactivate
* GET /loki-services/network-elements/broadworks/{+ne_id}/users/{+userId}

Updated BroadWorks Utility POST requests to have response body in the 201 Created response.

Added missing JSON schemas for all requests.

#1.6
Changes for *ctional Description: Update to BroadWorks Entity and Utility Service Functional Division*:

* Move several requests from /loki-service/broadworks context to /loki-services/network-elements/broadworks/{+ne_id}, and add ne_id property in their response bodies.
* Added new Utility Service GET requests for BroadWorks groups and their sub-resources (password rules, extension length).

Changes for *Functional Description: BroadWorks Utility Service support to Modify User Call Processing Policies*:

* Add GET (not implemented) and PUT for /users/{+userId}/call-processing-policy in the BroadWorks Utility Service (including json-schema for PUT request).

General:

* Add missing Transaction-Id header in responses.
* Change checkmark/x to yes/no for clarity.
* Corrected ne_id in number-translations GET query example response.
* Documented 404 response for GET queries on Sonus resources.
* Documented HEAD requests on Sonus resources.
* Update BroadWorks examples to include missing TPVM properties.
* Document POST /loki-services/broadworks/assignUserServices.
* Document GET /network-elements/broadworks/{+ne_id}/time-zones.
* Documented optional properties in response from BroadWorks groups GET query.
* Correct type in forwardToPhoneNumber property of PUT for BroadWorks CFNA and CFNR user services.
* Add clarification about confusing properties in GET requests for service authorizations.
* Removed invalid tnRoutine property, and added missing password property, in POST /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/users.
* Corrected data type for various properties in:
  POST /loki-services/network-elements/sonus/{+ne_id}/routes
  GET /loki-services/network-elements/sonus-psx/{+ne_id}/routes{?...}
  GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/services
  PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/services
  GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}
  GET /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services
  PUT /loki-services/network-elements/broadworks/{+ne_id}/service-providers/{+serviceProviderId}/groups/{+groupId}/services

#1.5
Changes for *Functional Description: Alternate API Navigation*:

* Update URIs (self links, Location headers) to reflect changed URI construction
* Update response bodies to add new properties required to expand URI Template variables
* Correct specification for Sonus routes GET query
* Add specification for Sonus route-queries GET query

Changes for *Functional Description: Sonus Entity and Utility Services - Subscriber, Destination, and Route Modify Support*:

* Add PUT for Sonus subscribers, destinations, routes.

Changes for *Functional Description: Sonus Entity and Utility Services - Route Query Enhancements*:

* Update Sonus routes GET query documentation, supported URL query parameters, and 200 OK response body.

Changes for *Functional Description: VoIP User Create - Configure Call Forwarding Not Reachable (BroadWorks)*:

* Update POST /broadworks/users (and various request/response bodies in all the process-related calls) to add Call Forwarding Not Reachable service.
* Add PUT /broadworks/service-providers/{+serviceProviderId}/groups/{+groupId}/users/{+userId}/services/Call%20Forwarding%20Not%20Reachable

General:

* update all HAL responses to include curies, regardless of whether or not _embedded is present
* Add "+" in various URI templates to indicate reserved expansion.
* Remove invalid number-translations GET.
* Refactor number-translations POST, GET, PUT to be consistent with other Sonus resources.
* Correct the URI in the Location header in Sonus routes POST 201 Created response, and in embedded ls:routes in 409 Conflict response, and in the 200 OK response to the GET query.
* Update URI and change strings to booleans in PUT /broadworks/users/{+userId}/services.
* Add timeZone and language in various request/response bodies related to the BroadWorks user add process.
